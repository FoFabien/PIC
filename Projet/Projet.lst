

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Fri May 28 12:35:59 2010

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "H:\MicroControleur\Projet\test_led.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "H:\MicroControleur\Projet\test_led.c"
    45  2007  1679               	dw 0x3FFD&0x3FFB&0x3FFF&0x3FFF&0x3F7F&0x3EFF&0x3FFF&0x37FF&0x1FFF ;#
    46                           ;BANK0:	_main->_reglage
    47                           ;COMMON:	_reglage->___awmod
    48                           ;BANK0:	_reglage->___awmod
    49                           ;COMMON:	_main->_affichageHeure
    50                           ;COMMON:	_affichageHeure->_lcd_putch
    51                           ;BANK0:	_lcd_putch->_lcd_busy
    52                           ;COMMON:	_lcd_busy->_Tempo_us
    53                           ;COMMON:	_lcd_putch->_Tempo_us
    54                           ;BANK0:	_affichageHeure->___awdiv
    55                           ;COMMON:	_affichageHeure->___awmod
    56                           	FNCALL	_main,_init
    57                           	FNCALL	_main,_lcd_init
    58                           	FNCALL	_main,_reglage
    59                           	FNCALL	_main,_affichageHeure
    60                           	FNCALL	_main,_Tempo_us
    61                           	FNCALL	_reglage,_Tempo_us
    62                           	FNCALL	_reglage,___awmod
    63                           	FNCALL	_affichageHeure,_lcd_clear
    64                           	FNCALL	_affichageHeure,_Tempo_us
    65                           	FNCALL	_affichageHeure,_lcd_home
    66                           	FNCALL	_affichageHeure,_lcd_putch
    67                           	FNCALL	_affichageHeure,___awdiv
    68                           	FNCALL	_affichageHeure,___awmod
    69                           	FNCALL	_lcd_init,_Tempo_us
    70                           	FNCALL	_lcd_init,_lcd_write_instr
    71                           	FNCALL	_lcd_clear,_lcd_write_instr
    72                           	FNCALL	_lcd_putch,_lcd_busy
    73                           	FNCALL	_lcd_putch,_Tempo_us
    74                           	FNCALL	_lcd_home,_lcd_write_instr
    75                           	FNCALL	_lcd_write_instr,_lcd_busy
    76                           	FNCALL	_lcd_write_instr,_Tempo_us
    77                           	FNCALL	_lcd_busy,_Tempo_us
    78                           	FNROOT	_main
    79                           	FNCALL	_timer,_heartBeat
    80                           	FNCALL	_timer,_horloge
    81                           	FNCALL	intlevel1,_timer
    82                           	global	intlevel1
    83                           	FNROOT	intlevel1
    84                           	global	_seconde
    85                           	global	_temp
    86                           	global	affichageHeure@i
    87                           	global	heartBeat@n
    88                           	global	reglage@i
    89                           	global	_heure
    90                           	global	_minute
    91                           	global	_mode
    92                           	global	_ADCON0
    93                           psect	text121,local,class=CODE,delta=2
    94                           global __ptext121
    95  0537                     __ptext121:
    96  001F                     _ADCON0  equ     31
    97                           	global	_ADRESH
    98  001E                     _ADRESH  equ     30
    99                           	global	_CCP1CON
   100  0017                     _CCP1CON  equ     23
   101                           	global	_CCP2CON
   102  001D                     _CCP2CON  equ     29
   103                           	global	_CCPR1H
   104  0016                     _CCPR1H  equ     22
   105                           	global	_CCPR1L
   106  0015                     _CCPR1L  equ     21
   107                           	global	_CCPR2H
   108  001C                     _CCPR2H  equ     28
   109                           	global	_CCPR2L
   110  001B                     _CCPR2L  equ     27
   111                           	global	_FSR
   112  0004                     _FSR  equ     4
   113                           	global	_INDF
   114  0000                     _INDF  equ     0
   115                           	global	_INTCON
   116  000B                     _INTCON  equ     11
   117                           	global	_PCL
   118  0002                     _PCL  equ     2
   119                           	global	_PCLATH
   120  000A                     _PCLATH  equ     10
   121                           	global	_PIR1
   122  000C                     _PIR1  equ     12
   123                           	global	_PIR2
   124  000D                     _PIR2  equ     13
   125                           	global	_PORTA
   126  0005                     _PORTA  equ     5
   127                           	global	_PORTB
   128  0006                     _PORTB  equ     6
   129                           	global	_PORTC
   130  0007                     _PORTC  equ     7
   131                           	global	_PORTD
   132  0008                     _PORTD  equ     8
   133                           	global	_PORTE
   134  0009                     _PORTE  equ     9
   135                           	global	_RCREG
   136  001A                     _RCREG  equ     26
   137                           	global	_RCSTA
   138  0018                     _RCSTA  equ     24
   139                           	global	_SSPBUF
   140  0013                     _SSPBUF  equ     19
   141                           	global	_SSPCON
   142  0014                     _SSPCON  equ     20
   143                           	global	_STATUS
   144  0003                     _STATUS  equ     3
   145                           	global	_T1CON
   146  0010                     _T1CON  equ     16
   147                           	global	_T2CON
   148  0012                     _T2CON  equ     18
   149                           	global	_TMR0
   150  0001                     _TMR0  equ     1
   151                           	global	_TMR1H
   152  000F                     _TMR1H  equ     15
   153                           	global	_TMR1L
   154  000E                     _TMR1L  equ     14
   155                           	global	_TMR2
   156  0011                     _TMR2  equ     17
   157                           	global	_TXREG
   158  0019                     _TXREG  equ     25
   159                           	global	_ADCS0
   160  00FE                     _ADCS0  equ     254
   161                           	global	_ADCS1
   162  00FF                     _ADCS1  equ     255
   163                           	global	_ADDEN
   164  00C3                     _ADDEN  equ     195
   165                           	global	_ADGO
   166  00FA                     _ADGO  equ     250
   167                           	global	_ADIF
   168  0066                     _ADIF  equ     102
   169                           	global	_ADON
   170  00F8                     _ADON  equ     248
   171                           	global	_BCLIF
   172  006B                     _BCLIF  equ     107
   173                           	global	_CARRY
   174  0018                     _CARRY  equ     24
   175                           	global	_CCP1IF
   176  0062                     _CCP1IF  equ     98
   177                           	global	_CCP1M0
   178  00B8                     _CCP1M0  equ     184
   179                           	global	_CCP1M1
   180  00B9                     _CCP1M1  equ     185
   181                           	global	_CCP1M2
   182  00BA                     _CCP1M2  equ     186
   183                           	global	_CCP1M3
   184  00BB                     _CCP1M3  equ     187
   185                           	global	_CCP1X
   186  00BD                     _CCP1X  equ     189
   187                           	global	_CCP1Y
   188  00BC                     _CCP1Y  equ     188
   189                           	global	_CCP2IF
   190  0068                     _CCP2IF  equ     104
   191                           	global	_CCP2M0
   192  00E8                     _CCP2M0  equ     232
   193                           	global	_CCP2M1
   194  00E9                     _CCP2M1  equ     233
   195                           	global	_CCP2M2
   196  00EA                     _CCP2M2  equ     234
   197                           	global	_CCP2M3
   198  00EB                     _CCP2M3  equ     235
   199                           	global	_CCP2X
   200  00ED                     _CCP2X  equ     237
   201                           	global	_CCP2Y
   202  00EC                     _CCP2Y  equ     236
   203                           	global	_CHS0
   204  00FB                     _CHS0  equ     251
   205                           	global	_CHS1
   206  00FC                     _CHS1  equ     252
   207                           	global	_CHS2
   208  00FD                     _CHS2  equ     253
   209                           	global	_CKP
   210  00A4                     _CKP  equ     164
   211                           	global	_CMIF
   212  006E                     _CMIF  equ     110
   213                           	global	_CREN
   214  00C4                     _CREN  equ     196
   215                           	global	_DC
   216  0019                     _DC  equ     25
   217                           	global	_EEIF
   218  006C                     _EEIF  equ     108
   219                           	global	_FERR
   220  00C2                     _FERR  equ     194
   221                           	global	_GIE
   222  005F                     _GIE  equ     95
   223                           	global	_GODONE
   224  00FA                     _GODONE  equ     250
   225                           	global	_INTE
   226  005C                     _INTE  equ     92
   227                           	global	_INTF
   228  0059                     _INTF  equ     89
   229                           	global	_IRP
   230  001F                     _IRP  equ     31
   231                           	global	_OERR
   232  00C1                     _OERR  equ     193
   233                           	global	_PD
   234  001B                     _PD  equ     27
   235                           	global	_PEIE
   236  005E                     _PEIE  equ     94
   237                           	global	_PSPIF
   238  0067                     _PSPIF  equ     103
   239                           	global	_RA0
   240  0028                     _RA0  equ     40
   241                           	global	_RA1
   242  0029                     _RA1  equ     41
   243                           	global	_RA2
   244  002A                     _RA2  equ     42
   245                           	global	_RA3
   246  002B                     _RA3  equ     43
   247                           	global	_RA4
   248  002C                     _RA4  equ     44
   249                           	global	_RA5
   250  002D                     _RA5  equ     45
   251                           	global	_RB0
   252  0030                     _RB0  equ     48
   253+                          	global	_RB1
   254+ 0031                     _RB1  equ     49
   255                           	global	_RB2
   256  0032                     _RB2  equ     50
   257+                          	global	_RB3
   258+ 0033                     _RB3  equ     51
   259+                          	global	_RB4
   260+ 0034                     _RB4  equ     52
   261+                          	global	_RB5
   262+ 0035                     _RB5  equ     53
   263                           	global	_RB6
   264  0036                     _RB6  equ     54
   265+                          	global	_RB7
   266+ 0037                     _RB7  equ     55
   267                           	global	_RBIE
   268  005B                     _RBIE  equ     91
   269+                          	global	_RBIF
   270+ 0058                     _RBIF  equ     88
   271                           	global	_RC0
   272  0038                     _RC0  equ     56
   273+                          	global	_RC1
   274+ 0039                     _RC1  equ     57
   275+                          	global	_RC2
   276+ 003A                     _RC2  equ     58
   277+                          	global	_RC3
   278+ 003B                     _RC3  equ     59
   279+                          	global	_RC4
   280+ 003C                     _RC4  equ     60
   281+                          	global	_RC5
   282+ 003D                     _RC5  equ     61
   283                           	global	_RC6
   284  003E                     _RC6  equ     62
   285+                          	global	_RC7
   286+ 003F                     _RC7  equ     63
   287+                          	global	_RCIF
   288+ 0065                     _RCIF  equ     101
   289+                          	global	_RD0
   290+ 0040                     _RD0  equ     64
   291+                          	global	_RD1
   292+ 0041                     _RD1  equ     65
   293+                          	global	_RD2
   294+ 0042                     _RD2  equ     66
   295                           	global	_RD3
   296  0043                     _RD3  equ     67
   297+                          	global	_RD4
   298+ 0044                     _RD4  equ     68
   299                           	global	_RD5
   300  0045                     _RD5  equ     69
   301+                          	global	_RD6
   302+ 0046                     _RD6  equ     70
   303+                          	global	_RD7
   304+ 0047                     _RD7  equ     71
   305+                          	global	_RE0
   306+ 0048                     _RE0  equ     72
   307+                          	global	_RE1
   308+ 0049                     _RE1  equ     73
   309+                          	global	_RE2
   310+ 004A                     _RE2  equ     74
   311                           	global	_RP0
   312  001D                     _RP0  equ     29
   313                           	global	_RP1
   314  001E                     _RP1  equ     30
   315+                          	global	_RX9
   316+ 00C6                     _RX9  equ     198
   317+                          	global	_RX9D
   318+ 00C0                     _RX9D  equ     192
   319+                          	global	_SPEN
   320+ 00C7                     _SPEN  equ     199
   321+                          	global	_SREN
   322+ 00C5                     _SREN  equ     197
   323                           	global	_SSPEN
   324  00A5                     _SSPEN  equ     165
   325+                          	global	_SSPIF
   326+ 0063                     _SSPIF  equ     99
   327                           	global	_SSPM0
   328  00A0                     _SSPM0  equ     160
   329+                          	global	_SSPM1
   330+ 00A1                     _SSPM1  equ     161
   331+                          	global	_SSPM2
   332+ 00A2                     _SSPM2  equ     162
   333+                          	global	_SSPM3
   334+ 00A3                     _SSPM3  equ     163
   335+                          	global	_SSPOV
   336+ 00A6                     _SSPOV  equ     166
   337+                          	global	_T0IE
   338+ 005D                     _T0IE  equ     93
   339                           	global	_T0IF
   340  005A                     _T0IF  equ     90
   341+                          	global	_T1CKPS0
   342+ 0084                     _T1CKPS0  equ     132
   343+                          	global	_T1CKPS1
   344+ 0085                     _T1CKPS1  equ     133
   345+                          	global	_T1OSCEN
   346+ 0083                     _T1OSCEN  equ     131
   347+                          	global	_T1SYNC
   348+ 0082                     _T1SYNC  equ     130
   349+                          	global	_T2CKPS0
   350+ 0090                     _T2CKPS0  equ     144
   351                           	global	_T2CKPS1
   352  0091                     _T2CKPS1  equ     145
   353+                          	global	_TMR0IE
   354+ 005D                     _TMR0IE  equ     93
   355                           	global	_TMR0IF
   356  005A                     _TMR0IF  equ     90
   357+                          	global	_TMR1CS
   358+ 0081                     _TMR1CS  equ     129
   359+                          	global	_TMR1IF
   360+ 0060                     _TMR1IF  equ     96
   361+                          	global	_TMR1ON
   362+ 0080                     _TMR1ON  equ     128
   363+                          	global	_TMR2IF
   364+ 0061                     _TMR2IF  equ     97
   365+                          	global	_TMR2ON
   366+ 0092                     _TMR2ON  equ     146
   367                           	global	_TO
   368  001C                     _TO  equ     28
   369+                          	global	_TOUTPS0
   370+ 0093                     _TOUTPS0  equ     147
   371+                          	global	_TOUTPS1
   372+ 0094                     _TOUTPS1  equ     148
   373+                          	global	_TOUTPS2
   374+ 0095                     _TOUTPS2  equ     149
   375+                          	global	_TOUTPS3
   376+ 0096                     _TOUTPS3  equ     150
   377+                          	global	_TXIF
   378+ 0064                     _TXIF  equ     100
   379                           	global	_WCOL
   380  00A7                     _WCOL  equ     167
   381+                          	global	_ZERO
   382+ 001A                     _ZERO  equ     26
   383                           	global	_ADCON1
   384  009F                     _ADCON1  equ     159
   385+                          	global	_ADRESL
   386+ 009E                     _ADRESL  equ     158
   387+                          	global	_CMCON
   388+ 009C                     _CMCON  equ     156
   389+                          	global	_CVRCON
   390+ 009D                     _CVRCON  equ     157
   391+                          	global	_OPTION
   392+ 0081                     _OPTION  equ     129
   393+                          	global	_PCON
   394+ 008E                     _PCON  equ     142
   395                           	global	_PIE1
   396  008C                     _PIE1  equ     140
   397+                          	global	_PIE2
   398+ 008D                     _PIE2  equ     141
   399+                          	global	_PR2
   400+ 0092                     _PR2  equ     146
   401+                          	global	_SPBRG
   402+ 0099                     _SPBRG  equ     153
   403                           	global	_SSPADD
   404  0093                     _SSPADD  equ     147
   405+                          	global	_SSPCON2
   406+ 0091                     _SSPCON2  equ     145
   407                           	global	_SSPSTAT
   408  0094                     _SSPSTAT  equ     148
   409+                          	global	_TRISA
   410+ 0085                     _TRISA  equ     133
   411                           	global	_TRISB
   412  0086                     _TRISB  equ     134
   413+                          	global	_TRISC
   414+ 0087                     _TRISC  equ     135
   415+                          	global	_TRISD
   416+ 0088                     _TRISD  equ     136
   417+                          	global	_TRISE
   418+ 0089                     _TRISE  equ     137
   419+                          	global	_TXSTA
   420+ 0098                     _TXSTA  equ     152
   421+                          	global	_ACKDT
   422+ 048D                     _ACKDT  equ     1165
   423                           	global	_ACKEN
   424  048C                     _ACKEN  equ     1164
   425                           	global	_ACKSTAT
   426  048E                     _ACKSTAT  equ     1166
   427+                          	global	_ADCS2
   428+ 04FE                     _ADCS2  equ     1278
   429+                          	global	_ADFM
   430+ 04FF                     _ADFM  equ     1279
   431                           	global	_ADIE
   432  0466                     _ADIE  equ     1126
   433+                          	global	_BCLIE
   434+ 046B                     _BCLIE  equ     1131
   435                           	global	_BF
   436  04A0                     _BF  equ     1184
   437+                          	global	_BOR
   438+ 0470                     _BOR  equ     1136
   439                           	global	_BRGH
   440  04C2                     _BRGH  equ     1218
   441+                          	global	_C1INV
   442+ 04E4                     _C1INV  equ     1252
   443+                          	global	_C1OUT
   444+ 04E6                     _C1OUT  equ     1254
   445+                          	global	_C2INV
   446+ 04E5                     _C2INV  equ     1253
   447+                          	global	_C2OUT
   448+ 04E7                     _C2OUT  equ     1255
   449+                          	global	_CCP1IE
   450+ 0462                     _CCP1IE  equ     1122
   451                           	global	_CCP2IE
   452  0468                     _CCP2IE  equ     1128
   453                           	global	_CIS
   454  04E3                     _CIS  equ     1251
   455                           	global	_CKE
   456  04A6                     _CKE  equ     1190
   457                           	global	_CM0
   458  04E0                     _CM0  equ     1248
   459                           	global	_CM1
   460  04E1                     _CM1  equ     1249
   461                           	global	_CM2
   462  04E2                     _CM2  equ     1250
   463                           	global	_CMIE
   464  046E                     _CMIE  equ     1134
   465                           	global	_CSRC
   466  04C7                     _CSRC  equ     1223
   467                           	global	_CVR0
   468  04E8                     _CVR0  equ     1256
   469                           	global	_CVR1
   470  04E9                     _CVR1  equ     1257
   471                           	global	_CVR2
   472  04EA                     _CVR2  equ     1258
   473                           	global	_CVR3
   474  04EB                     _CVR3  equ     1259
   475                           	global	_CVREN
   476  04EF                     _CVREN  equ     1263
   477                           	global	_CVROE
   478  04EE                     _CVROE  equ     1262
   479                           	global	_CVRR
   480  04ED                     _CVRR  equ     1261
   481                           	global	_DA
   482  04A5                     _DA  equ     1189
   483                           	global	_EEIE
   484  046C                     _EEIE  equ     1132
   485                           	global	_GCEN
   486  048F                     _GCEN  equ     1167
   487                           	global	_IBF
   488  044F                     _IBF  equ     1103
   489                           	global	_IBOV
   490  044D                     _IBOV  equ     1101
   491                           	global	_INTEDG
   492  040E                     _INTEDG  equ     1038
   493                           	global	_OBF
   494  044E                     _OBF  equ     1102
   495                           	global	_PCFG0
   496  04F8                     _PCFG0  equ     1272
   497                           	global	_PCFG1
   498  04F9                     _PCFG1  equ     1273
   499                           	global	_PCFG2
   500  04FA                     _PCFG2  equ     1274
   501                           	global	_PCFG3
   502  04FB                     _PCFG3  equ     1275
   503                           	global	_PEN
   504  048A                     _PEN  equ     1162
   505                           	global	_POR
   506  0471                     _POR  equ     1137
   507                           	global	_PS0
   508  0408                     _PS0  equ     1032
   509                           	global	_PS1
   510  0409                     _PS1  equ     1033
   511                           	global	_PS2
   512  040A                     _PS2  equ     1034
   513                           	global	_PSA
   514  040B                     _PSA  equ     1035
   515                           	global	_PSPIE
   516  0467                     _PSPIE  equ     1127
   517                           	global	_PSPMODE
   518  044C                     _PSPMODE  equ     1100
   519                           	global	_RBPU
   520  040F                     _RBPU  equ     1039
   521                           	global	_RCEN
   522  048B                     _RCEN  equ     1163
   523                           	global	_RCIE
   524  0465                     _RCIE  equ     1125
   525                           	global	_RSEN
   526  0489                     _RSEN  equ     1161
   527                           	global	_RW
   528  04A2                     _RW  equ     1186
   529                           	global	_SEN
   530  0488                     _SEN  equ     1160
   531                           	global	_SMP
   532  04A7                     _SMP  equ     1191
   533                           	global	_SSPIE
   534  0463                     _SSPIE  equ     1123
   535                           	global	_START
   536  04A3                     _START  equ     1187
   537                           	global	_STOP
   538  04A4                     _STOP  equ     1188
   539                           	global	_SYNC
   540  04C4                     _SYNC  equ     1220
   541                           	global	_T0CS
   542  040D                     _T0CS  equ     1037
   543                           	global	_T0SE
   544  040C                     _T0SE  equ     1036
   545                           	global	_TMR1IE
   546  0460                     _TMR1IE  equ     1120
   547                           	global	_TMR2IE
   548  0461                     _TMR2IE  equ     1121
   549                           	global	_TRISA0
   550  0428                     _TRISA0  equ     1064
   551                           	global	_TRISA1
   552  0429                     _TRISA1  equ     1065
   553                           	global	_TRISA2
   554  042A                     _TRISA2  equ     1066
   555                           	global	_TRISA3
   556  042B                     _TRISA3  equ     1067
   557                           	global	_TRISA4
   558  042C                     _TRISA4  equ     1068
   559                           	global	_TRISA5
   560  042D                     _TRISA5  equ     1069
   561                           	global	_TRISB0
   562  0430                     _TRISB0  equ     1072
   563                           	global	_TRISB1
   564  0431                     _TRISB1  equ     1073
   565                           	global	_TRISB2
   566  0432                     _TRISB2  equ     1074
   567                           	global	_TRISB3
   568  0433                     _TRISB3  equ     1075
   569                           	global	_TRISB4
   570  0434                     _TRISB4  equ     1076
   571                           	global	_TRISB5
   572  0435                     _TRISB5  equ     1077
   573                           	global	_TRISB6
   574  0436                     _TRISB6  equ     1078
   575                           	global	_TRISB7
   576  0437                     _TRISB7  equ     1079
   577                           	global	_TRISC0
   578  0438                     _TRISC0  equ     1080
   579                           	global	_TRISC1
   580  0439                     _TRISC1  equ     1081
   581                           	global	_TRISC2
   582  043A                     _TRISC2  equ     1082
   583                           	global	_TRISC3
   584  043B                     _TRISC3  equ     1083
   585                           	global	_TRISC4
   586  043C                     _TRISC4  equ     1084
   587                           	global	_TRISC5
   588  043D                     _TRISC5  equ     1085
   589                           	global	_TRISC6
   590  043E                     _TRISC6  equ     1086
   591                           	global	_TRISC7
   592  043F                     _TRISC7  equ     1087
   593                           	global	_TRISD0
   594  0440                     _TRISD0  equ     1088
   595                           	global	_TRISD1
   596  0441                     _TRISD1  equ     1089
   597                           	global	_TRISD2
   598  0442                     _TRISD2  equ     1090
   599                           	global	_TRISD3
   600  0443                     _TRISD3  equ     1091
   601                           	global	_TRISD4
   602  0444                     _TRISD4  equ     1092
   603                           	global	_TRISD5
   604  0445                     _TRISD5  equ     1093
   605                           	global	_TRISD6
   606  0446                     _TRISD6  equ     1094
   607                           	global	_TRISD7
   608  0447                     _TRISD7  equ     1095
   609                           	global	_TRISE0
   610  0448                     _TRISE0  equ     1096
   611                           	global	_TRISE1
   612  0449                     _TRISE1  equ     1097
   613                           	global	_TRISE2
   614  044A                     _TRISE2  equ     1098
   615                           	global	_TRMT
   616  04C1                     _TRMT  equ     1217
   617                           	global	_TX9
   618  04C6                     _TX9  equ     1222
   619                           	global	_TX9D
   620  04C0                     _TX9D  equ     1216
   621                           	global	_TXEN
   622  04C5                     _TXEN  equ     1221
   623                           	global	_TXIE
   624  0464                     _TXIE  equ     1124
   625                           	global	_UA
   626  04A1                     _UA  equ     1185
   627                           	global	_EEADR
   628  010D                     _EEADR  equ     269
   629                           	global	_EEADRH
   630  010F                     _EEADRH  equ     271
   631                           	global	_EEADRL
   632  010D                     _EEADRL  equ     269
   633                           	global	_EEDATA
   634  010C                     _EEDATA  equ     268
   635                           	global	_EEDATH
   636  010E                     _EEDATH  equ     270
   637                           	global	_EECON1
   638  018C                     _EECON1  equ     396
   639                           	global	_EECON2
   640  018D                     _EECON2  equ     397
   641                           	global	_EEPGD
   642  0C67                     _EEPGD  equ     3175
   643                           	global	_RD
   644  0C60                     _RD  equ     3168
   645                           	global	_WR
   646  0C61                     _WR  equ     3169
   647                           	global	_WREN
   648  0C62                     _WREN  equ     3170
   649                           	global	_WRERR
   650  0C63                     _WRERR  equ     3171
   651                           	file	"Projet.as"
   652                           	line	#
   653                           psect cinit,class=CODE,delta=2
   654                           global start_initialization
   655  0515                     start_initialization:
   656                           
   657                           psect	bssCOMMON,class=COMMON,space=1
   658                           global __pbssCOMMON
   659  0070                     __pbssCOMMON:
   660  0070                     _heure:
   661  0070                            ds      2
   662                           
   663  0072                     _minute:
   664  0072                            ds      2
   665                           
   666  0074                     _mode:
   667  0074                            ds      2
   668                           
   669                           psect	bssBANK0,class=BANK0,space=1
   670                           global __pbssBANK0
   671  002F                     __pbssBANK0:
   672  002F                     _seconde:
   673  002F                            ds      2
   674                           
   675  0031                     _temp:
   676  0031                            ds      2
   677                           
   678  0033                     affichageHeure@i:
   679  0033                            ds      2
   680                           
   681  0035                     heartBeat@n:
   682  0035                            ds      2
   683                           
   684  0037                     reglage@i:
   685  0037                            ds      2
   686                           
   687                           ; Clear objects allocated to COMMON
   688                           psect cinit,class=CODE,delta=2
   689  0515  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   690  0516  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   691  0517  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   692  0518  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   693  0519  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   694  051A  01F5               	clrf	((__pbssCOMMON)+5)&07Fh
   695                           ; Clear objects allocated to BANK0
   696                           psect cinit,class=CODE,delta=2
   697  051B  01AF               	clrf	((__pbssBANK0)+0)&07Fh
   698  051C  01B0               	clrf	((__pbssBANK0)+1)&07Fh
   699  051D  01B1               	clrf	((__pbssBANK0)+2)&07Fh
   700  051E  01B2               	clrf	((__pbssBANK0)+3)&07Fh
   701  051F  01B3               	clrf	((__pbssBANK0)+4)&07Fh
   702  0520  01B4               	clrf	((__pbssBANK0)+5)&07Fh
   703  0521  01B5               	clrf	((__pbssBANK0)+6)&07Fh
   704  0522  01B6               	clrf	((__pbssBANK0)+7)&07Fh
   705  0523  01B7               	clrf	((__pbssBANK0)+8)&07Fh
   706  0524  01B8               	clrf	((__pbssBANK0)+9)&07Fh
   707                           psect cinit,class=CODE,delta=2
   708                           global end_of_initialization
   709                           
   710                           ;End of C runtime variable initationation code
   711                           
   712  0525                     end_of_initialization:
   713  0525  0183               clrf status
   714  0526  120A  118A  2CC1   ljmp _main	;jump to C main() function
   715                           psect	cstackCOMMON,class=COMMON,space=1
   716                           global __pcstackCOMMON
   717  0076                     __pcstackCOMMON:
   718                           	global	??_init
   719  0076                     ??_init: ;@ 0x0
   720                           	global	?_init
   721  0076                     ?_init: ;@ 0x0
   722                           	global	??___awdiv
   723  0076                     ??___awdiv: ;@ 0x0
   724                           	global	??___awmod
   725  0076                     ??___awmod: ;@ 0x0
   726                           	global	??_lcd_busy
   727  0076                     ??_lcd_busy: ;@ 0x0
   728                           	global	?_Tempo_us
   729  0076                     ?_Tempo_us: ;@ 0x0
   730                           	global	??_Tempo_us
   731  0076                     ??_Tempo_us: ;@ 0x0
   732                           	global	Tempo_us@nb_us
   733  0076                     Tempo_us@nb_us:	; 2 bytes @ 0x0
   734  0076                     	ds	1
   735                           	global	??_lcd_home
   736  0077                     ??_lcd_home: ;@ 0x1
   737                           	global	??_lcd_clear
   738  0077                     ??_lcd_clear: ;@ 0x1
   739                           	global	??_lcd_init
   740  0077                     ??_lcd_init: ;@ 0x1
   741                           	global	___awmod@sign
   742  0077                     ___awmod@sign:	; 1 bytes @ 0x1
   743  0077                     	ds	1
   744                           	global	??_lcd_putch
   745  0078                     ??_lcd_putch: ;@ 0x2
   746                           	global	?_lcd_busy
   747  0078                     ?_lcd_busy: ;@ 0x2
   748                           	global	??_lcd_write_instr
   749  0078                     ??_lcd_write_instr: ;@ 0x2
   750                           	global	___awmod@counter
   751  0078                     ___awmod@counter:	; 1 bytes @ 0x2
   752  0078                     	ds	1
   753                           	global	?_lcd_write_instr
   754  0079                     ?_lcd_write_instr: ;@ 0x3
   755                           	global	?_lcd_putch
   756  0079                     ?_lcd_putch: ;@ 0x3
   757                           	global	?_lcd_home
   758  0079                     ?_lcd_home: ;@ 0x3
   759                           	global	?_lcd_init
   760  0079                     ?_lcd_init: ;@ 0x3
   761                           	global	?_lcd_clear
   762  0079                     ?_lcd_clear: ;@ 0x3
   763                           	global	??_affichageHeure
   764  0079                     ??_affichageHeure: ;@ 0x3
   765                           	global	??_main
   766  0079                     ??_main: ;@ 0x3
   767                           	global	?_reglage
   768  0079                     ?_reglage: ;@ 0x3
   769  0079                     	ds	2
   770                           	global	?_affichageHeure
   771  007B                     ?_affichageHeure: ;@ 0x5
   772                           	global	?_main
   773  007B                     ?_main: ;@ 0x5
   774                           psect	cstackBANK0,class=BANK0,space=1
   775                           global __pcstackBANK0
   776  0020                     __pcstackBANK0:
   777                           	global	?___awmod
   778  0020                     ?___awmod: ;@ 0x0
   779                           	global	___awdiv@counter
   780  0020                     ___awdiv@counter:	; 1 bytes @ 0x0
   781                           	global	lcd_busy@c
   782  0020                     lcd_busy@c:	; 1 bytes @ 0x0
   783                           	global	___awmod@dividend
   784  0020                     ___awmod@dividend:	; 2 bytes @ 0x0
   785  0020                     	ds	1
   786                           	global	lcd_putch@c
   787  0021                     lcd_putch@c:	; 1 bytes @ 0x1
   788                           	global	___awdiv@sign
   789  0021                     ___awdiv@sign:	; 1 bytes @ 0x1
   790                           	global	lcd_write_instr@c
   791  0021                     lcd_write_instr@c:	; 1 bytes @ 0x1
   792  0021                     	ds	1
   793                           	global	___awmod@divisor
   794  0022                     ___awmod@divisor:	; 2 bytes @ 0x2
   795                           	global	___awdiv@quotient
   796  0022                     ___awdiv@quotient:	; 2 bytes @ 0x2
   797  0022                     	ds	2
   798                           	global	??_reglage
   799  0024                     ??_reglage: ;@ 0x4
   800                           	global	?___awdiv
   801  0024                     ?___awdiv: ;@ 0x4
   802                           	global	___awdiv@dividend
   803  0024                     ___awdiv@dividend:	; 2 bytes @ 0x4
   804  0024                     	ds	2
   805                           	global	___awdiv@divisor
   806  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
   807  0026                     	ds	3
   808                           	global	??_horloge
   809  0029                     ??_horloge: ;@ 0x9
   810                           	global	??_heartBeat
   811  0029                     ??_heartBeat: ;@ 0x9
   812  0029                     	ds	1
   813                           	global	?_horloge
   814  002A                     ?_horloge: ;@ 0xA
   815  002A                     	ds	1
   816                           	global	?_heartBeat
   817  002B                     ?_heartBeat: ;@ 0xB
   818                           	global	??_timer
   819  002B                     ??_timer: ;@ 0xB
   820  002B                     	ds	4
   821                           	global	?_timer
   822  002F                     ?_timer: ;@ 0xF
   823                           ;Data sizes: Strings 0, constant 0, data 0, bss 16, persistent 0 stack 0
   824                           ;Auto spaces:   Size  Autos    Used
   825                           ; COMMON          14      5      11
   826                           ; BANK0           80     15      25
   827                           ; BANK1           80      0       0
   828                           ; BANK3           96      0       0
   829                           ; BANK2           96      0       0
   830                           
   831                           
   832                           ;Pointer list with targets:
   833                           
   834                           ;?___awmod	int  size(1); Largest target is 0
   835                           ;?___awdiv	int  size(1); Largest target is 0
   836                           
   837                           
   838                           ;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   839                           
   840                           
   841                           ;Call graph:                      Base Space Used Autos Args Refs Density
   842                           ;_main                                                0    0 1702   0.00
   843                           ;               _init
   844                           ;           _lcd_init
   845                           ;            _reglage
   846                           ;     _affichageHeure
   847                           ;           _Tempo_us
   848                           ;  _reglage                                           5    0  269   0.00
   849                           ;                                    4 BANK0    5
   850                           ;           _Tempo_us
   851                           ;            ___awmod
   852                           ;  _affichageHeure                                    2    0 1154   0.00
   853                           ;                                    3 COMMO    2
   854                           ;          _lcd_clear
   855                           ;           _Tempo_us
   856                           ;           _lcd_home
   857                           ;          _lcd_putch
   858                           ;            ___awdiv
   859                           ;            ___awmod
   860                           ;  _lcd_init                                          0    0  228   0.00
   861                           ;           _Tempo_us
   862                           ;    _lcd_write_instr
   863                           ;  _init                                              0    0    0   0.00
   864                           ;    _lcd_clear                                       0    0  177   0.00
   865                           ;    _lcd_write_instr
   866                           ;    ___awdiv                                         5    4  354   0.00
   867                           ;                                    0 COMMO    1
   868                           ;                                    0 BANK0    8
   869                           ;    _lcd_putch                                       2    0  177   0.00
   870                           ;                                    2 COMMO    1
   871                           ;                                    1 BANK0    1
   872                           ;           _lcd_busy
   873                           ;           _Tempo_us
   874                           ;    _lcd_home                                        0    0  177   0.00
   875                           ;    _lcd_write_instr
   876                           ;    ___awmod                                         3    4  218   0.00
   877                           ;                                    0 COMMO    3
   878                           ;                                    0 BANK0    4
   879                           ;      _lcd_write_instr                               2    0  177   0.00
   880                           ;                                    2 COMMO    1
   881                           ;                                    1 BANK0    1
   882                           ;           _lcd_busy
   883                           ;           _Tempo_us
   884                           ;        _lcd_busy                                    1    0   78   0.00
   885                           ;                                    0 BANK0    1
   886                           ;           _Tempo_us
   887                           ;          _Tempo_us                                  0    2   51   0.00
   888                           ;                                    0 COMMO    2
   889                           ; Estimated maximum call depth 5
   890                           ;_timer                                               4    0    0   0.00
   891                           ;                                   11 BANK0    4
   892                           ;          _heartBeat
   893                           ;            _horloge
   894                           ;  _horloge                                           1    0    0   0.00
   895                           ;                                    9 BANK0    1
   896                           ;  _heartBeat                                         2    0    0   0.00
   897                           ;                                    9 BANK0    2
   898                           ; Estimated maximum call depth 1
   899                           ; Address spaces:
   900                           
   901                           ;Name               Size   Autos  Total    Cost      Usage
   902                           ;BITCOMMON            E      0       0       0        0.0%
   903                           ;CODE                 0      0       0       0        0.0%
   904                           ;NULL                 0      0       0       0        0.0%
   905                           ;COMMON               E      5       B       1       78.6%
   906                           ;SFR0                 0      0       0       1        0.0%
   907                           ;BITSFR0              0      0       0       1        0.0%
   908                           ;BITSFR1              0      0       0       2        0.0%
   909                           ;SFR1                 0      0       0       2        0.0%
   910                           ;ABS                  0      0      24       2        0.0%
   911                           ;STACK                0      0       0       3        0.0%
   912                           ;BITBANK0            50      0       0       4        0.0%
   913                           ;SFR3                 0      0       0       4        0.0%
   914                           ;BITSFR3              0      0       0       4        0.0%
   915                           ;BANK0               50      F      19       5       31.3%
   916                           ;BITSFR2              0      0       0       5        0.0%
   917                           ;SFR2                 0      0       0       5        0.0%
   918                           ;BITBANK1            50      0       0       6        0.0%
   919                           ;BANK1               50      0       0       7        0.0%
   920                           ;BITBANK3            60      0       0       8        0.0%
   921                           ;BANK3               60      0       0       9        0.0%
   922                           ;BITBANK2            60      0       0      10        0.0%
   923                           ;BANK2               60      0       0      11        0.0%
   924                           ;DATA                 0      0      24      12        0.0%
   925                           ;EEDATA             100      0       0    1000        0.0%
   926                           
   927                           	global	_main
   928                           psect	maintext,local,class=CODE,delta=2
   929                           global __pmaintext
   930  04C1                     __pmaintext:
   931                           
   932                           ; *************** function _main *****************
   933                           ; Defined at:
   934                           ;		line 164 in file "H:\MicroControleur\Projet\test_led.c"
   935                           ; Parameters:    Size  Location     Type
   936                           ;		None
   937                           ; Auto vars:     Size  Location     Type
   938                           ;		None
   939                           ; Return value:  Size  Location     Type
   940                           ;                  2    5[COMMON] int 
   941                           ; Registers used:
   942                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   943                           ; Tracked objects:
   944                           ;		On entry : 17F/0
   945                           ;		On exit  : 0/0
   946                           ;		Unchanged: 0/0
   947                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948                           ;      Locals:         0       0       0       0       0
   949                           ;      Temp:     0
   950                           ;      Total:    0
   951                           ; This function calls:
   952                           ;		_init
   953                           ;		_lcd_init
   954                           ;		_reglage
   955                           ;		_affichageHeure
   956                           ;		_Tempo_us
   957                           ; This function is called by:
   958                           ;		Startup code after reset
   959                           ; This function uses a non-reentrant model
   960                           ; 
   961                           psect	maintext
   962                           	file	"H:\MicroControleur\Projet\test_led.c"
   963                           	line	164
   964                           	global	__size_of_main
   965  0021                     	__size_of_main	equ	__end_of_main-_main
   966                           ;test_led.c: 163: main(void)
   967                           ;test_led.c: 164: {
   968                           	
   969  04C1                     _main:	
   970                           	opt stack 6
   971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   972                           	line	165
   973                           	
   974  04C1                     l30001053:	
   975                           ;test_led.c: 165: init ();
   976  04C1  120A  118A  23B1   	fcall	_init
              120A  118A         
   977                           	line	166
   978                           ;test_led.c: 166: lcd_init();
   979  04C6  120A  118A  229E   	fcall	_lcd_init
              120A  118A         
   980                           	
   981  04CB                     l30001054:	
   982                           	line	170
   983                           ;test_led.c: 169: {
   984                           ;test_led.c: 170: reglage();
   985  04CB  120A  118A  2136   	fcall	_reglage
              120A  118A         
   986                           	
   987  04D0                     l30001055:	
   988                           	line	171
   989                           ;test_led.c: 171: affichageHeure();
   990  04D0  120A  118A  2015   	fcall	_affichageHeure
              120A  118A         
   991                           	
   992  04D5                     l30001056:	
   993                           	line	172
   994                           ;test_led.c: 172: Tempo_us(10000);
   995  04D5  3010               	movlw	low(02710h)
   996  04D6  00F6               	movwf	(?_Tempo_us)
   997  04D7  3027               	movlw	high(02710h)
   998  04D8  00F7               	movwf	((?_Tempo_us))+1
   999  04D9  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1000  04DE  2CCB               	goto	l30001054
  1001                           	global	start
  1002  04DF  120A  118A  2812   	ljmp	start
  1003                           	opt stack 0
  1004                           GLOBAL	__end_of_main
  1005  04E2                     	__end_of_main:
  1006                           ; =============== function _main ends ============
  1007                           
  1008                           psect	maintext
  1009                           	line	174
  1010                           	signat	_main,90
  1011                           	global	_reglage
  1012                           psect	text122,local,class=CODE,delta=2
  1013                           global __ptext122
  1014  0136                     __ptext122:
  1015                           
  1016                           ; *************** function _reglage *****************
  1017                           ; Defined at:
  1018                           ;		line 104 in file "H:\MicroControleur\Projet\test_led.c"
  1019                           ; Parameters:    Size  Location     Type
  1020                           ;		None
  1021                           ; Auto vars:     Size  Location     Type
  1022                           ;		None
  1023                           ; Return value:  Size  Location     Type
  1024                           ;		None               void
  1025                           ; Registers used:
  1026                           ;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1027                           ; Tracked objects:
  1028                           ;		On entry : 0/0
  1029                           ;		On exit  : 0/0
  1030                           ;		Unchanged: 0/0
  1031                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032                           ;      Locals:         0       5       0       0       0
  1033                           ;      Temp:     5
  1034                           ;      Total:    5
  1035                           ; This function calls:
  1036                           ;		_Tempo_us
  1037                           ;		___awmod
  1038                           ; This function is called by:
  1039                           ;		_main
  1040                           ; This function uses a non-reentrant model
  1041                           ; 
  1042                           psect	text122
  1043                           	file	"H:\MicroControleur\Projet\test_led.c"
  1044                           	line	104
  1045                           	global	__size_of_reglage
  1046  00F6                     	__size_of_reglage	equ	__end_of_reglage-_reglage
  1047                           ;test_led.c: 103: void reglage(void)
  1048                           ;test_led.c: 104: {
  1049                           	
  1050  0136                     _reglage:	
  1051                           	opt stack 5
  1052                           ; Regs used in _reglage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1053                           	line	106
  1054                           	
  1055  0136                     l30001031:	
  1056                           ;test_led.c: 105: static int i;
  1057                           ;test_led.c: 106: if(RA4 == 0)
  1058  0136  1283               	bcf	status, 5	;RP0=0, select bank0
  1059  0137  1303               	bcf	status, 6	;RP1=0, select bank0
  1060  0138  1A05               	btfsc	(44/8),(44)&7
  1061  0139  293B               	goto	u911
  1062  013A  293C               	goto	u910
  1063  013B                     u911:
  1064  013B  29F7               	goto	l30001049
  1065  013C                     u910:
  1066                           	
  1067  013C                     l30001032:	
  1068                           	line	108
  1069                           ;test_led.c: 107: {
  1070                           ;test_led.c: 108: Tempo_us(20000);
  1071  013C  3020               	movlw	low(04E20h)
  1072  013D  00F6               	movwf	(?_Tempo_us)
  1073  013E  304E               	movlw	high(04E20h)
  1074  013F  00F7               	movwf	((?_Tempo_us))+1
  1075  0140  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1076                           	
  1077  0145                     l30001033:	
  1078                           	line	109
  1079                           ;test_led.c: 109: temp = 0;
  1080  0145  3000               	movlw	low(0)
  1081  0146  1283               	bcf	status, 5	;RP0=0, select bank0
  1082  0147  1303               	bcf	status, 6	;RP1=0, select bank0
  1083  0148  00B1               	movwf	(_temp)
  1084  0149  3000               	movlw	high(0)
  1085  014A  00B2               	movwf	((_temp))+1
  1086  014B  297C               	goto	l18
  1087                           	
  1088  014C                     l30001034:	
  1089                           	line	112
  1090                           ;test_led.c: 111: {
  1091                           ;test_led.c: 112: if((temp >= 2) || (mode != 0))
  1092  014C  0832               	movf	(_temp+1),w
  1093  014D  3A80               	xorlw	80h
  1094  014E  00A4               	movwf	(??_reglage+0+0)
  1095  014F  3080               	movlw	(high(02h))^80h
  1096  0150  0224               	subwf	(??_reglage+0+0),w
  1097  0151  1D03               	skipz
  1098  0152  2955               	goto	u925
  1099  0153  3002               	movlw	low(02h)
  1100  0154  0231               	subwf	(_temp),w
  1101  0155                     u925:
  1102                           
  1103  0155  1803               	skipnc
  1104  0156  2958               	goto	u921
  1105  0157  2959               	goto	u920
  1106  0158                     u921:
  1107  0158  295F               	goto	l30001036
  1108  0159                     u920:
  1109                           	
  1110  0159                     l30001035:	
  1111  0159  0875               	movf	(_mode+1),w
  1112  015A  0474               	iorwf	(_mode),w
  1113  015B  1903               	skipnz
  1114  015C  295E               	goto	u931
  1115  015D  295F               	goto	u930
  1116  015E                     u931:
  1117  015E  297C               	goto	l18
  1118  015F                     u930:
  1119                           	
  1120  015F                     l30001036:	
  1121                           	line	114
  1122                           ;test_led.c: 113: {
  1123                           ;test_led.c: 114: mode = (mode + 1) % 3;
  1124  015F  0874               	movf	(_mode),w
  1125  0160  3E01               	addlw	low(01h)
  1126  0161  1283               	bcf	status, 5	;RP0=0, select bank0
  1127  0162  1303               	bcf	status, 6	;RP1=0, select bank0
  1128  0163  00A0               	movwf	(?___awmod)
  1129  0164  0875               	movf	(_mode+1),w
  1130  0165  1803               	skipnc
  1131  0166  3E01               	addlw	1
  1132  0167  3E00               	addlw	high(01h)
  1133  0168  00A1               	movwf	1+(?___awmod)
  1134  0169  3003               	movlw	low(03h)
  1135  016A  00A2               	movwf	0+(?___awmod)+02h
  1136  016B  3000               	movlw	high(03h)
  1137  016C  00A3               	movwf	(0+(?___awmod)+02h)+1
  1138  016D  120A  118A  2309   	fcall	___awmod
              120A  118A         
  1139  0172  1383               	bcf	status, 7	;select IRP bank0
  1140  0173  1283               	bcf	status, 5	;RP0=0, select bank0
  1141  0174  1303               	bcf	status, 6	;RP1=0, select bank0
  1142  0175  0821               	movf	(1+(?___awmod)),w
  1143  0176  01F5               	clrf	(_mode+1)
  1144  0177  07F5               	addwf	(_mode+1)
  1145  0178  0820               	movf	(0+(?___awmod)),w
  1146  0179  01F4               	clrf	(_mode)
  1147  017A  07F4               	addwf	(_mode)
  1148                           
  1149  017B  2982               	goto	l30001037
  1150                           	
  1151  017C                     l18:	
  1152                           	line	110
  1153  017C  1283               	bcf	status, 5	;RP0=0, select bank0
  1154  017D  1303               	bcf	status, 6	;RP1=0, select bank0
  1155  017E  1E05               	btfss	(44/8),(44)&7
  1156  017F  2981               	goto	u941
  1157  0180  2982               	goto	u940
  1158  0181                     u941:
  1159  0181  294C               	goto	l30001034
  1160  0182                     u940:
  1161                           	
  1162  0182                     l30001037:	
  1163                           	line	118
  1164                           ;test_led.c: 116: }
  1165                           ;test_led.c: 117: }
  1166                           ;test_led.c: 118: Tempo_us(20000);
  1167  0182  3020               	movlw	low(04E20h)
  1168  0183  00F6               	movwf	(?_Tempo_us)
  1169  0184  304E               	movlw	high(04E20h)
  1170  0185  00F7               	movwf	((?_Tempo_us))+1
  1171  0186  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1172  018B  29F7               	goto	l30001049
  1173                           	
  1174  018C                     l24:	
  1175                           	line	136
  1176                           ;test_led.c: 136: if(RB0 == 0)
  1177  018C  1283               	bcf	status, 5	;RP0=0, select bank0
  1178  018D  1303               	bcf	status, 6	;RP1=0, select bank0
  1179  018E  1806               	btfsc	(48/8),(48)&7
  1180  018F  2991               	goto	u951
  1181  0190  2992               	goto	u950
  1182  0191                     u951:
  1183  0191  29C1               	goto	l30001042
  1184  0192                     u950:
  1185                           	
  1186  0192                     l30001038:	
  1187                           	line	138
  1188                           ;test_led.c: 137: {
  1189                           ;test_led.c: 138: Tempo_us(20000);
  1190  0192  3020               	movlw	low(04E20h)
  1191  0193  00F6               	movwf	(?_Tempo_us)
  1192  0194  304E               	movlw	high(04E20h)
  1193  0195  00F7               	movwf	((?_Tempo_us))+1
  1194  0196  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1195                           	
  1196  019B                     l30001039:	
  1197                           	line	139
  1198                           ;test_led.c: 139: if(RB0 == 0)
  1199  019B  1283               	bcf	status, 5	;RP0=0, select bank0
  1200  019C  1303               	bcf	status, 6	;RP1=0, select bank0
  1201  019D  1806               	btfsc	(48/8),(48)&7
  1202  019E  29A0               	goto	u961
  1203  019F  29A1               	goto	u960
  1204  01A0                     u961:
  1205  01A0  29BC               	goto	l30001041
  1206  01A1                     u960:
  1207                           	
  1208  01A1                     l30001040:	
  1209                           	line	140
  1210                           ;test_led.c: 140: heure = heure + 1 + 2 * i;
  1211  01A1  0838               	movf	(reglage@i+1),w
  1212  01A2  00A5               	movwf	(??_reglage+0+0+1)
  1213  01A3  0837               	movf	(reglage@i),w
  1214  01A4  00A4               	movwf	(??_reglage+0+0)
  1215  01A5  3001               	movlw	01h
  1216  01A6  00A6               	movwf	(??_reglage+2+0)
  1217  01A7                     u975:
  1218  01A7  1003               	clrc
  1219  01A8  0DA4               	rlf	(??_reglage+0+0),f
  1220  01A9  0DA5               	rlf	(??_reglage+0+1),f
  1221  01AA  0BA6               	decfsz	(??_reglage+2+0),f
  1222  01AB  29A7               	goto	u975
  1223  01AC  0870               	movf	(_heure),w
  1224  01AD  0724               	addwf	0+(??_reglage+0+0),w
  1225  01AE  00A7               	movwf	(??_reglage+3+0)
  1226  01AF  0871               	movf	(_heure+1),w
  1227  01B0  1803               	skipnc
  1228  01B1  0A71               	incf	(_heure+1),w
  1229  01B2  0725               	addwf	1+(??_reglage+0+0),w
  1230  01B3  00A8               	movwf	1+(??_reglage+3+0)
  1231  01B4  0827               	movf	0+(??_reglage+3+0),w
  1232  01B5  3E01               	addlw	low(01h)
  1233  01B6  00F0               	movwf	(_heure)
  1234  01B7  0828               	movf	1+(??_reglage+3+0),w
  1235  01B8  1803               	skipnc
  1236  01B9  3E01               	addlw	1
  1237  01BA  3E00               	addlw	high(01h)
  1238  01BB  00F1               	movwf	1+(_heure)
  1239                           	
  1240  01BC                     l30001041:	
  1241                           	line	141
  1242                           ;test_led.c: 141: i = 1;
  1243  01BC  3001               	movlw	low(01h)
  1244  01BD  00B7               	movwf	(reglage@i)
  1245  01BE  3000               	movlw	high(01h)
  1246  01BF  00B8               	movwf	((reglage@i))+1
  1247  01C0  2A05               	goto	l30001050
  1248                           	
  1249  01C1                     l30001042:	
  1250                           	line	143
  1251                           ;test_led.c: 143: else i = 0;
  1252  01C1  3000               	movlw	low(0)
  1253  01C2  00B7               	movwf	(reglage@i)
  1254  01C3  3000               	movlw	high(0)
  1255  01C4  00B8               	movwf	((reglage@i))+1
  1256  01C5  2A05               	goto	l30001050
  1257                           	
  1258  01C6                     l28:	
  1259                           	line	146
  1260                           ;test_led.c: 146: if(RB0 == 0)
  1261  01C6  1283               	bcf	status, 5	;RP0=0, select bank0
  1262  01C7  1303               	bcf	status, 6	;RP1=0, select bank0
  1263  01C8  1806               	btfsc	(48/8),(48)&7
  1264  01C9  29CB               	goto	u981
  1265  01CA  29CC               	goto	u980
  1266  01CB                     u981:
  1267  01CB  29C1               	goto	l30001042
  1268  01CC                     u980:
  1269                           	
  1270  01CC                     l30001043:	
  1271                           	line	148
  1272                           ;test_led.c: 147: {
  1273                           ;test_led.c: 148: Tempo_us(20000);
  1274  01CC  3020               	movlw	low(04E20h)
  1275  01CD  00F6               	movwf	(?_Tempo_us)
  1276  01CE  304E               	movlw	high(04E20h)
  1277  01CF  00F7               	movwf	((?_Tempo_us))+1
  1278  01D0  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1279                           	
  1280  01D5                     l30001044:	
  1281                           	line	149
  1282                           ;test_led.c: 149: if(RB0 == 0)
  1283  01D5  1283               	bcf	status, 5	;RP0=0, select bank0
  1284  01D6  1303               	bcf	status, 6	;RP1=0, select bank0
  1285  01D7  1806               	btfsc	(48/8),(48)&7
  1286  01D8  29DA               	goto	u991
  1287  01D9  29DB               	goto	u990
  1288  01DA                     u991:
  1289  01DA  29BC               	goto	l30001041
  1290  01DB                     u990:
  1291                           	
  1292  01DB                     l30001045:	
  1293                           	line	150
  1294                           ;test_led.c: 150: minute = minute + 1 + 2 * i;
  1295  01DB  0838               	movf	(reglage@i+1),w
  1296  01DC  00A5               	movwf	(??_reglage+0+0+1)
  1297  01DD  0837               	movf	(reglage@i),w
  1298  01DE  00A4               	movwf	(??_reglage+0+0)
  1299  01DF  3001               	movlw	01h
  1300  01E0  00A6               	movwf	(??_reglage+2+0)
  1301  01E1                     u1005:
  1302  01E1  1003               	clrc
  1303  01E2  0DA4               	rlf	(??_reglage+0+0),f
  1304  01E3  0DA5               	rlf	(??_reglage+0+1),f
  1305  01E4  0BA6               	decfsz	(??_reglage+2+0),f
  1306  01E5  29E1               	goto	u1005
  1307  01E6  0872               	movf	(_minute),w
  1308  01E7  0724               	addwf	0+(??_reglage+0+0),w
  1309  01E8  00A7               	movwf	(??_reglage+3+0)
  1310  01E9  0873               	movf	(_minute+1),w
  1311  01EA  1803               	skipnc
  1312  01EB  0A73               	incf	(_minute+1),w
  1313  01EC  0725               	addwf	1+(??_reglage+0+0),w
  1314  01ED  00A8               	movwf	1+(??_reglage+3+0)
  1315  01EE  0827               	movf	0+(??_reglage+3+0),w
  1316  01EF  3E01               	addlw	low(01h)
  1317  01F0  00F2               	movwf	(_minute)
  1318  01F1  0828               	movf	1+(??_reglage+3+0),w
  1319  01F2  1803               	skipnc
  1320  01F3  3E01               	addlw	1
  1321  01F4  3E00               	addlw	high(01h)
  1322  01F5  00F3               	movwf	1+(_minute)
  1323  01F6  29BC               	goto	l30001041
  1324                           	
  1325  01F7                     l30001049:	
  1326                           	line	133
  1327  01F7  2A00               		goto	l30017
  1328  01F8                     l30018:
  1329  01F8  0874               	movf (_mode),w
  1330  01F9  3A01               	xorlw	1^0
  1331  01FA  1903               	skipnz
  1332  01FB  298C               	goto	l24
  1333  01FC  3A03               	xorlw	2^1
  1334  01FD  1903               	skipnz
  1335  01FE  29C6               	goto	l28
  1336  01FF  2A05               	goto	l30001050
  1337                           
  1338  0200                     l30017:
  1339  0200  0875               	movf (_mode+1),w
  1340  0201  3A00               	xorlw	0^0
  1341  0202  1903               	skipnz
  1342  0203  29F8               	goto	l30018
  1343  0204  2A05               	goto	l30001050
  1344                           
  1345                           	
  1346  0205                     l30001050:	
  1347                           	line	157
  1348                           ;test_led.c: 157: if(minute > 59)
  1349  0205  0873               	movf	(_minute+1),w
  1350  0206  3A80               	xorlw	80h
  1351  0207  1283               	bcf	status, 5	;RP0=0, select bank0
  1352  0208  1303               	bcf	status, 6	;RP1=0, select bank0
  1353  0209  00A4               	movwf	(??_reglage+0+0)
  1354  020A  3080               	movlw	(high(03Ch))^80h
  1355  020B  0224               	subwf	(??_reglage+0+0),w
  1356  020C  1D03               	skipz
  1357  020D  2A10               	goto	u1015
  1358  020E  303C               	movlw	low(03Ch)
  1359  020F  0272               	subwf	(_minute),w
  1360  0210                     u1015:
  1361                           
  1362  0210  1C03               	skipc
  1363  0211  2A13               	goto	u1011
  1364  0212  2A14               	goto	u1010
  1365  0213                     u1011:
  1366  0213  2A18               	goto	l32
  1367  0214                     u1010:
  1368                           	
  1369  0214                     l30001051:	
  1370                           	line	158
  1371                           ;test_led.c: 158: minute = 0;
  1372  0214  3000               	movlw	low(0)
  1373  0215  00F2               	movwf	(_minute)
  1374  0216  3000               	movlw	high(0)
  1375  0217  00F3               	movwf	((_minute))+1
  1376                           	
  1377  0218                     l32:	
  1378                           	line	159
  1379                           ;test_led.c: 159: if(heure > 23)
  1380  0218  0871               	movf	(_heure+1),w
  1381  0219  3A80               	xorlw	80h
  1382  021A  1283               	bcf	status, 5	;RP0=0, select bank0
  1383  021B  1303               	bcf	status, 6	;RP1=0, select bank0
  1384  021C  00A4               	movwf	(??_reglage+0+0)
  1385  021D  3080               	movlw	(high(018h))^80h
  1386  021E  0224               	subwf	(??_reglage+0+0),w
  1387  021F  1D03               	skipz
  1388  0220  2A23               	goto	u1025
  1389  0221  3018               	movlw	low(018h)
  1390  0222  0270               	subwf	(_heure),w
  1391  0223                     u1025:
  1392                           
  1393  0223  1C03               	skipc
  1394  0224  2A26               	goto	u1021
  1395  0225  2A27               	goto	u1020
  1396  0226                     u1021:
  1397  0226  2A2B               	goto	l16
  1398  0227                     u1020:
  1399                           	
  1400  0227                     l30001052:	
  1401                           	line	160
  1402                           ;test_led.c: 160: heure = 0;
  1403  0227  3000               	movlw	low(0)
  1404  0228  00F0               	movwf	(_heure)
  1405  0229  3000               	movlw	high(0)
  1406  022A  00F1               	movwf	((_heure))+1
  1407                           	
  1408  022B                     l16:	
  1409  022B  0008               	return
  1410                           	opt stack 0
  1411                           GLOBAL	__end_of_reglage
  1412  022C                     	__end_of_reglage:
  1413                           ; =============== function _reglage ends ============
  1414                           
  1415                           psect	text123,local,class=CODE,delta=2
  1416                           global __ptext123
  1417  0015                     __ptext123:
  1418                           	line	161
  1419                           	signat	_reglage,88
  1420                           	global	_affichageHeure
  1421                           
  1422                           ; *************** function _affichageHeure *****************
  1423                           ; Defined at:
  1424                           ;		line 57 in file "H:\MicroControleur\Projet\test_led.c"
  1425                           ; Parameters:    Size  Location     Type
  1426                           ;		None
  1427                           ; Auto vars:     Size  Location     Type
  1428                           ;		None
  1429                           ; Return value:  Size  Location     Type
  1430                           ;		None               void
  1431                           ; Registers used:
  1432                           ;		wreg, status,2, status,0, pclath, cstack
  1433                           ; Tracked objects:
  1434                           ;		On entry : 0/0
  1435                           ;		On exit  : 0/0
  1436                           ;		Unchanged: 0/0
  1437                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438                           ;      Locals:         2       0       0       0       0
  1439                           ;      Temp:     2
  1440                           ;      Total:    2
  1441                           ; This function calls:
  1442                           ;		_lcd_clear
  1443                           ;		_Tempo_us
  1444                           ;		_lcd_home
  1445                           ;		_lcd_putch
  1446                           ;		___awdiv
  1447                           ;		___awmod
  1448                           ; This function is called by:
  1449                           ;		_main
  1450                           ; This function uses a non-reentrant model
  1451                           ; 
  1452                           psect	text123
  1453                           	file	"H:\MicroControleur\Projet\test_led.c"
  1454                           	line	57
  1455                           	global	__size_of_affichageHeure
  1456  0121                     	__size_of_affichageHeure	equ	__end_of_affichageHeure-_affichageHeure
  1457                           ;test_led.c: 56: void affichageHeure(void)
  1458                           ;test_led.c: 57: {
  1459                           	
  1460  0015                     _affichageHeure:	
  1461                           	opt stack 5
  1462                           ; Regs used in _affichageHeure: [wreg+status,2+status,0+pclath+cstack]
  1463                           	line	59
  1464                           	
  1465  0015                     l30001084:	
  1466                           ;test_led.c: 58: static int i = 0;
  1467                           ;test_led.c: 59: lcd_clear();
  1468  0015  120A  118A  2530   	fcall	_lcd_clear
              120A  118A         
  1469                           	line	60
  1470                           ;test_led.c: 60: Tempo_us(200);
  1471  001A  30C8               	movlw	low(0C8h)
  1472  001B  00F6               	movwf	(?_Tempo_us)
  1473  001C  3000               	movlw	high(0C8h)
  1474  001D  00F7               	movwf	((?_Tempo_us))+1
  1475  001E  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1476                           	line	61
  1477                           ;test_led.c: 61: lcd_home();
  1478  0023  120A  118A  2529   	fcall	_lcd_home
              120A  118A         
  1479                           	line	62
  1480                           ;test_led.c: 62: Tempo_us(200);
  1481  0028  30C8               	movlw	low(0C8h)
  1482  0029  00F6               	movwf	(?_Tempo_us)
  1483  002A  3000               	movlw	high(0C8h)
  1484  002B  00F7               	movwf	((?_Tempo_us))+1
  1485  002C  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1486                           	
  1487  0031                     l30001085:	
  1488                           	line	63
  1489                           ;test_led.c: 63: if((mode == 1) && (i > 2))
  1490  0031  3001               	movlw	01h
  1491  0032  0674               	xorwf	(_mode),w
  1492  0033  0475               	iorwf	(_mode+1),w
  1493  0034  1D03               	skipz
  1494  0035  2837               	goto	u1051
  1495  0036  2838               	goto	u1050
  1496  0037                     u1051:
  1497  0037  2854               	goto	l30001088
  1498  0038                     u1050:
  1499                           	
  1500  0038                     l30001086:	
  1501  0038  1283               	bcf	status, 5	;RP0=0, select bank0
  1502  0039  1303               	bcf	status, 6	;RP1=0, select bank0
  1503  003A  0834               	movf	(affichageHeure@i+1),w
  1504  003B  3A80               	xorlw	80h
  1505  003C  00F9               	movwf	(??_affichageHeure+0+0)
  1506  003D  3080               	movlw	(high(03h))^80h
  1507  003E  0279               	subwf	(??_affichageHeure+0+0),w
  1508  003F  1D03               	skipz
  1509  0040  2843               	goto	u1065
  1510  0041  3003               	movlw	low(03h)
  1511  0042  0233               	subwf	(affichageHeure@i),w
  1512  0043                     u1065:
  1513                           
  1514  0043  1C03               	skipc
  1515  0044  2846               	goto	u1061
  1516  0045  2847               	goto	u1060
  1517  0046                     u1061:
  1518  0046  2854               	goto	l30001088
  1519  0047                     u1060:
  1520                           	
  1521  0047                     l30001087:	
  1522                           	line	65
  1523                           ;test_led.c: 64: {
  1524                           ;test_led.c: 65: lcd_putch(' ');
  1525  0047  3020               	movlw	(020h)
  1526  0048  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1527                           	line	66
  1528                           ;test_led.c: 66: lcd_putch(' ');
  1529  004D  3020               	movlw	(020h)
  1530  004E  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1531  0053  288A               	goto	l8
  1532                           	
  1533  0054                     l30001088:	
  1534                           	line	70
  1535                           ;test_led.c: 68: else
  1536                           ;test_led.c: 69: {
  1537                           ;test_led.c: 70: lcd_putch((heure / 10) + '0');
  1538  0054  0871               	movf	(_heure+1),w
  1539  0055  1283               	bcf	status, 5	;RP0=0, select bank0
  1540  0056  1303               	bcf	status, 6	;RP1=0, select bank0
  1541  0057  01A5               	clrf	(?___awdiv+1)
  1542  0058  07A5               	addwf	(?___awdiv+1)
  1543  0059  0870               	movf	(_heure),w
  1544  005A  01A4               	clrf	(?___awdiv)
  1545  005B  07A4               	addwf	(?___awdiv)
  1546                           
  1547  005C  300A               	movlw	low(0Ah)
  1548  005D  00A6               	movwf	0+(?___awdiv)+02h
  1549  005E  3000               	movlw	high(0Ah)
  1550  005F  00A7               	movwf	(0+(?___awdiv)+02h)+1
  1551  0060  120A  118A  222C   	fcall	___awdiv
              120A  118A         
  1552  0065  1383               	bcf	status, 7	;select IRP bank0
  1553  0066  1283               	bcf	status, 5	;RP0=0, select bank0
  1554  0067  1303               	bcf	status, 6	;RP1=0, select bank0
  1555  0068  0824               	movf	(0+(?___awdiv)),w
  1556  0069  3E30               	addlw	030h
  1557  006A  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1558                           	line	71
  1559                           ;test_led.c: 71: lcd_putch((heure % 10) + '0');
  1560  006F  0871               	movf	(_heure+1),w
  1561  0070  1283               	bcf	status, 5	;RP0=0, select bank0
  1562  0071  1303               	bcf	status, 6	;RP1=0, select bank0
  1563  0072  01A1               	clrf	(?___awmod+1)
  1564  0073  07A1               	addwf	(?___awmod+1)
  1565  0074  0870               	movf	(_heure),w
  1566  0075  01A0               	clrf	(?___awmod)
  1567  0076  07A0               	addwf	(?___awmod)
  1568                           
  1569  0077  300A               	movlw	low(0Ah)
  1570  0078  00A2               	movwf	0+(?___awmod)+02h
  1571  0079  3000               	movlw	high(0Ah)
  1572  007A  00A3               	movwf	(0+(?___awmod)+02h)+1
  1573  007B  120A  118A  2309   	fcall	___awmod
              120A  118A         
  1574  0080  1383               	bcf	status, 7	;select IRP bank0
  1575  0081  1283               	bcf	status, 5	;RP0=0, select bank0
  1576  0082  1303               	bcf	status, 6	;RP1=0, select bank0
  1577  0083  0820               	movf	(0+(?___awmod)),w
  1578  0084  3E30               	addlw	030h
  1579  0085  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1580                           	
  1581  008A                     l8:	
  1582                           	line	73
  1583                           ;test_led.c: 72: }
  1584                           ;test_led.c: 73: lcd_putch(':');
  1585  008A  303A               	movlw	(03Ah)
  1586  008B  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1587                           	
  1588  0090                     l30001089:	
  1589                           	line	74
  1590                           ;test_led.c: 74: if((mode == 2) && (i > 2))
  1591  0090  3002               	movlw	02h
  1592  0091  0674               	xorwf	(_mode),w
  1593  0092  0475               	iorwf	(_mode+1),w
  1594  0093  1D03               	skipz
  1595  0094  2896               	goto	u1071
  1596  0095  2897               	goto	u1070
  1597  0096                     u1071:
  1598  0096  28B3               	goto	l30001092
  1599  0097                     u1070:
  1600                           	
  1601  0097                     l30001090:	
  1602  0097  1283               	bcf	status, 5	;RP0=0, select bank0
  1603  0098  1303               	bcf	status, 6	;RP1=0, select bank0
  1604  0099  0834               	movf	(affichageHeure@i+1),w
  1605  009A  3A80               	xorlw	80h
  1606  009B  00F9               	movwf	(??_affichageHeure+0+0)
  1607  009C  3080               	movlw	(high(03h))^80h
  1608  009D  0279               	subwf	(??_affichageHeure+0+0),w
  1609  009E  1D03               	skipz
  1610  009F  28A2               	goto	u1085
  1611  00A0  3003               	movlw	low(03h)
  1612  00A1  0233               	subwf	(affichageHeure@i),w
  1613  00A2                     u1085:
  1614                           
  1615  00A2  1C03               	skipc
  1616  00A3  28A5               	goto	u1081
  1617  00A4  28A6               	goto	u1080
  1618  00A5                     u1081:
  1619  00A5  28B3               	goto	l30001092
  1620  00A6                     u1080:
  1621                           	
  1622  00A6                     l30001091:	
  1623                           	line	76
  1624                           ;test_led.c: 75: {
  1625                           ;test_led.c: 76: lcd_putch(' ');
  1626  00A6  3020               	movlw	(020h)
  1627  00A7  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1628                           	line	77
  1629                           ;test_led.c: 77: lcd_putch(' ');
  1630  00AC  3020               	movlw	(020h)
  1631  00AD  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1632  00B2  28E9               	goto	l10
  1633                           	
  1634  00B3                     l30001092:	
  1635                           	line	81
  1636                           ;test_led.c: 79: else
  1637                           ;test_led.c: 80: {
  1638                           ;test_led.c: 81: lcd_putch((minute / 10) + '0');
  1639  00B3  0873               	movf	(_minute+1),w
  1640  00B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1641  00B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1642  00B6  01A5               	clrf	(?___awdiv+1)
  1643  00B7  07A5               	addwf	(?___awdiv+1)
  1644  00B8  0872               	movf	(_minute),w
  1645  00B9  01A4               	clrf	(?___awdiv)
  1646  00BA  07A4               	addwf	(?___awdiv)
  1647                           
  1648  00BB  300A               	movlw	low(0Ah)
  1649  00BC  00A6               	movwf	0+(?___awdiv)+02h
  1650  00BD  3000               	movlw	high(0Ah)
  1651  00BE  00A7               	movwf	(0+(?___awdiv)+02h)+1
  1652  00BF  120A  118A  222C   	fcall	___awdiv
              120A  118A         
  1653  00C4  1383               	bcf	status, 7	;select IRP bank0
  1654  00C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1655  00C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1656  00C7  0824               	movf	(0+(?___awdiv)),w
  1657  00C8  3E30               	addlw	030h
  1658  00C9  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1659                           	line	82
  1660                           ;test_led.c: 82: lcd_putch((minute % 10) + '0');
  1661  00CE  0873               	movf	(_minute+1),w
  1662  00CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1663  00D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1664  00D1  01A1               	clrf	(?___awmod+1)
  1665  00D2  07A1               	addwf	(?___awmod+1)
  1666  00D3  0872               	movf	(_minute),w
  1667  00D4  01A0               	clrf	(?___awmod)
  1668  00D5  07A0               	addwf	(?___awmod)
  1669                           
  1670  00D6  300A               	movlw	low(0Ah)
  1671  00D7  00A2               	movwf	0+(?___awmod)+02h
  1672  00D8  3000               	movlw	high(0Ah)
  1673  00D9  00A3               	movwf	(0+(?___awmod)+02h)+1
  1674  00DA  120A  118A  2309   	fcall	___awmod
              120A  118A         
  1675  00DF  1383               	bcf	status, 7	;select IRP bank0
  1676  00E0  1283               	bcf	status, 5	;RP0=0, select bank0
  1677  00E1  1303               	bcf	status, 6	;RP1=0, select bank0
  1678  00E2  0820               	movf	(0+(?___awmod)),w
  1679  00E3  3E30               	addlw	030h
  1680  00E4  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1681                           	
  1682  00E9                     l10:	
  1683                           	line	84
  1684                           ;test_led.c: 83: }
  1685                           ;test_led.c: 84: lcd_putch(':');
  1686  00E9  303A               	movlw	(03Ah)
  1687  00EA  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1688                           	line	85
  1689                           ;test_led.c: 85: lcd_putch((seconde / 10) + '0');
  1690  00EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1691  00F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1692  00F1  0830               	movf	(_seconde+1),w
  1693  00F2  01A5               	clrf	(?___awdiv+1)
  1694  00F3  07A5               	addwf	(?___awdiv+1)
  1695  00F4  082F               	movf	(_seconde),w
  1696  00F5  01A4               	clrf	(?___awdiv)
  1697  00F6  07A4               	addwf	(?___awdiv)
  1698                           
  1699  00F7  300A               	movlw	low(0Ah)
  1700  00F8  00A6               	movwf	0+(?___awdiv)+02h
  1701  00F9  3000               	movlw	high(0Ah)
  1702  00FA  00A7               	movwf	(0+(?___awdiv)+02h)+1
  1703  00FB  120A  118A  222C   	fcall	___awdiv
              120A  118A         
  1704  0100  1383               	bcf	status, 7	;select IRP bank0
  1705  0101  1283               	bcf	status, 5	;RP0=0, select bank0
  1706  0102  1303               	bcf	status, 6	;RP1=0, select bank0
  1707  0103  0824               	movf	(0+(?___awdiv)),w
  1708  0104  3E30               	addlw	030h
  1709  0105  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1710                           	line	86
  1711                           ;test_led.c: 86: lcd_putch((seconde % 10) + '0');
  1712  010A  1283               	bcf	status, 5	;RP0=0, select bank0
  1713  010B  1303               	bcf	status, 6	;RP1=0, select bank0
  1714  010C  0830               	movf	(_seconde+1),w
  1715  010D  01A1               	clrf	(?___awmod+1)
  1716  010E  07A1               	addwf	(?___awmod+1)
  1717  010F  082F               	movf	(_seconde),w
  1718  0110  01A0               	clrf	(?___awmod)
  1719  0111  07A0               	addwf	(?___awmod)
  1720                           
  1721  0112  300A               	movlw	low(0Ah)
  1722  0113  00A2               	movwf	0+(?___awmod)+02h
  1723  0114  3000               	movlw	high(0Ah)
  1724  0115  00A3               	movwf	(0+(?___awmod)+02h)+1
  1725  0116  120A  118A  2309   	fcall	___awmod
              120A  118A         
  1726  011B  1383               	bcf	status, 7	;select IRP bank0
  1727  011C  1283               	bcf	status, 5	;RP0=0, select bank0
  1728  011D  1303               	bcf	status, 6	;RP1=0, select bank0
  1729  011E  0820               	movf	(0+(?___awmod)),w
  1730  011F  3E30               	addlw	030h
  1731  0120  120A  118A  23FB   	fcall	_lcd_putch
              120A  118A         
  1732                           	
  1733  0125                     l30001093:	
  1734                           	line	88
  1735                           ;test_led.c: 88: i = (i + 1) % 4;
  1736  0125  1283               	bcf	status, 5	;RP0=0, select bank0
  1737  0126  1303               	bcf	status, 6	;RP1=0, select bank0
  1738  0127  0833               	movf	(affichageHeure@i),w
  1739  0128  3E01               	addlw	low(01h)
  1740  0129  00F9               	movwf	(??_affichageHeure+0+0)
  1741  012A  0834               	movf	(affichageHeure@i+1),w
  1742  012B  1803               	skipnc
  1743  012C  3E01               	addlw	1
  1744  012D  3E00               	addlw	high(01h)
  1745  012E  00FA               	movwf	1+(??_affichageHeure+0+0)
  1746  012F  3003               	movlw	low(03h)
  1747  0130  0579               	andwf	0+(??_affichageHeure+0+0),w
  1748  0131  00B3               	movwf	(affichageHeure@i)
  1749  0132  3000               	movlw	high(03h)
  1750  0133  057A               	andwf	1+(??_affichageHeure+0+0),w
  1751  0134  00B4               	movwf	1+(affichageHeure@i)
  1752                           	
  1753  0135                     l6:	
  1754  0135  0008               	return
  1755                           	opt stack 0
  1756                           GLOBAL	__end_of_affichageHeure
  1757  0136                     	__end_of_affichageHeure:
  1758                           ; =============== function _affichageHeure ends ============
  1759                           
  1760                           psect	text124,local,class=CODE,delta=2
  1761                           global __ptext124
  1762  029E                     __ptext124:
  1763                           	line	89
  1764                           	signat	_affichageHeure,88
  1765                           	global	_lcd_init
  1766                           
  1767                           ; *************** function _lcd_init *****************
  1768                           ; Defined at:
  1769                           ;		line 17 in file "H:\MicroControleur\Projet\liblcd.c"
  1770                           ; Parameters:    Size  Location     Type
  1771                           ;		None
  1772                           ; Auto vars:     Size  Location     Type
  1773                           ;		None
  1774                           ; Return value:  Size  Location     Type
  1775                           ;		None               void
  1776                           ; Registers used:
  1777                           ;		wreg, status,2, status,0, pclath, cstack
  1778                           ; Tracked objects:
  1779                           ;		On entry : 0/0
  1780                           ;		On exit  : 0/0
  1781                           ;		Unchanged: 0/0
  1782                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783                           ;      Locals:         0       0       0       0       0
  1784                           ;      Temp:     0
  1785                           ;      Total:    0
  1786                           ; This function calls:
  1787                           ;		_Tempo_us
  1788                           ;		_lcd_write_instr
  1789                           ; This function is called by:
  1790                           ;		_main
  1791                           ; This function uses a non-reentrant model
  1792                           ; 
  1793                           psect	text124
  1794                           	file	"H:\MicroControleur\Projet\liblcd.c"
  1795                           	line	17
  1796                           	global	__size_of_lcd_init
  1797  006B                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1798                           ;liblcd.c: 16: void lcd_init(void)
  1799                           ;liblcd.c: 17: {
  1800                           	
  1801  029E                     _lcd_init:	
  1802                           	opt stack 5
  1803                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1804                           	line	18
  1805                           	
  1806  029E                     l30001078:	
  1807                           ;liblcd.c: 18: RD7 = 0;
  1808  029E  1283               	bcf	status, 5	;RP0=0, select bank0
  1809  029F  1303               	bcf	status, 6	;RP1=0, select bank0
  1810  02A0  1388               	bcf	(71/8),(71)&7
  1811                           	
  1812  02A1                     l30001079:	
  1813                           	line	19
  1814                           ;liblcd.c: 19: Tempo_us(500);
  1815  02A1  30F4               	movlw	low(01F4h)
  1816  02A2  00F6               	movwf	(?_Tempo_us)
  1817  02A3  3001               	movlw	high(01F4h)
  1818  02A4  00F7               	movwf	((?_Tempo_us))+1
  1819  02A5  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1820                           	
  1821  02AA                     l30001080:	
  1822                           	line	20
  1823                           ;liblcd.c: 20: RB2 = 1;
  1824  02AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1825  02AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1826  02AC  1506               	bsf	(50/8),(50)&7
  1827                           	
  1828  02AD                     l30001081:	
  1829                           	line	21
  1830                           ;liblcd.c: 21: RD7 = 1;
  1831  02AD  1788               	bsf	(71/8),(71)&7
  1832                           	line	22
  1833                           ;liblcd.c: 22: Tempo_us(20000);
  1834  02AE  3020               	movlw	low(04E20h)
  1835  02AF  00F6               	movwf	(?_Tempo_us)
  1836  02B0  304E               	movlw	high(04E20h)
  1837  02B1  00F7               	movwf	((?_Tempo_us))+1
  1838  02B2  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1839                           	line	23
  1840                           ;liblcd.c: 23: lcd_write_instr(0x30);
  1841  02B7  3030               	movlw	(030h)
  1842  02B8  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1843                           	line	24
  1844                           ;liblcd.c: 24: Tempo_us(4500);
  1845  02BD  3094               	movlw	low(01194h)
  1846  02BE  00F6               	movwf	(?_Tempo_us)
  1847  02BF  3011               	movlw	high(01194h)
  1848  02C0  00F7               	movwf	((?_Tempo_us))+1
  1849  02C1  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1850                           	line	25
  1851                           ;liblcd.c: 25: lcd_write_instr(0x30);
  1852  02C6  3030               	movlw	(030h)
  1853  02C7  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1854                           	line	26
  1855                           ;liblcd.c: 26: Tempo_us(200);
  1856  02CC  30C8               	movlw	low(0C8h)
  1857  02CD  00F6               	movwf	(?_Tempo_us)
  1858  02CE  3000               	movlw	high(0C8h)
  1859  02CF  00F7               	movwf	((?_Tempo_us))+1
  1860  02D0  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  1861                           	line	27
  1862                           ;liblcd.c: 27: lcd_write_instr(0x30);
  1863  02D5  3030               	movlw	(030h)
  1864  02D6  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1865                           	line	28
  1866                           ;liblcd.c: 28: lcd_write_instr(0x20);
  1867  02DB  3020               	movlw	(020h)
  1868  02DC  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1869                           	line	29
  1870                           ;liblcd.c: 29: lcd_write_instr(0x28);
  1871  02E1  3028               	movlw	(028h)
  1872  02E2  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1873                           	line	30
  1874                           ;liblcd.c: 30: lcd_write_instr(0x01);
  1875  02E7  3001               	movlw	(01h)
  1876  02E8  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1877                           	line	31
  1878                           ;liblcd.c: 31: lcd_write_instr(0x0C);
  1879  02ED  300C               	movlw	(0Ch)
  1880  02EE  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1881                           	line	32
  1882                           ;liblcd.c: 32: lcd_write_instr(0x06);
  1883  02F3  3006               	movlw	(06h)
  1884  02F4  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1885                           	line	33
  1886                           ;liblcd.c: 33: lcd_write_instr(0x06);
  1887  02F9  3006               	movlw	(06h)
  1888  02FA  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1889                           	line	34
  1890                           ;liblcd.c: 34: lcd_write_instr(0x0C);
  1891  02FF  300C               	movlw	(0Ch)
  1892  0300  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  1893                           	
  1894  0305                     l30001082:	
  1895                           	line	35
  1896                           ;liblcd.c: 35: RB2 = 0;
  1897  0305  1283               	bcf	status, 5	;RP0=0, select bank0
  1898  0306  1303               	bcf	status, 6	;RP1=0, select bank0
  1899  0307  1106               	bcf	(50/8),(50)&7
  1900                           	
  1901  0308                     l50:	
  1902  0308  0008               	return
  1903                           	opt stack 0
  1904                           GLOBAL	__end_of_lcd_init
  1905  0309                     	__end_of_lcd_init:
  1906                           ; =============== function _lcd_init ends ============
  1907                           
  1908                           psect	text125,local,class=CODE,delta=2
  1909                           global __ptext125
  1910  03B1                     __ptext125:
  1911                           	line	36
  1912                           	signat	_lcd_init,88
  1913                           	global	_init
  1914                           
  1915                           ; *************** function _init *****************
  1916                           ; Defined at:
  1917                           ;		line 13 in file "H:\MicroControleur\Projet\test_led.c"
  1918                           ; Parameters:    Size  Location     Type
  1919                           ;		None
  1920                           ; Auto vars:     Size  Location     Type
  1921                           ;		None
  1922                           ; Return value:  Size  Location     Type
  1923                           ;		None               void
  1924                           ; Registers used:
  1925                           ;		wreg, status,2, status,0
  1926                           ; Tracked objects:
  1927                           ;		On entry : 0/0
  1928                           ;		On exit  : 0/0
  1929                           ;		Unchanged: 0/0
  1930                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931                           ;      Locals:         0       0       0       0       0
  1932                           ;      Temp:     0
  1933                           ;      Total:    0
  1934                           ; This function calls:
  1935                           ;		Nothing
  1936                           ; This function is called by:
  1937                           ;		_main
  1938                           ; This function uses a non-reentrant model
  1939                           ; 
  1940                           psect	text125
  1941                           	file	"H:\MicroControleur\Projet\test_led.c"
  1942                           	line	13
  1943                           	global	__size_of_init
  1944  004A                     	__size_of_init	equ	__end_of_init-_init
  1945                           ;test_led.c: 4: asm("\tpsect config,class=CONFIG,delta=2"); asm("\tdw ""0x3FFD&0x3FFB&0x
                                 3FFF&0x3FFF&0x3F7F&0x3EFF&0x3FFF&0x37FF&0x1FFF");
  1946                           ;test_led.c: 6: static int seconde;
  1947                           ;test_led.c: 7: static int minute;
  1948                           ;test_led.c: 8: static int heure;
  1949                           ;test_led.c: 9: static int temp;
  1950                           ;test_led.c: 10: static int mode;
  1951                           ;test_led.c: 12: void init(void)
  1952                           ;test_led.c: 13: {
  1953                           	
  1954  03B1                     _init:	
  1955                           	opt stack 5
  1956                           ; Regs used in _init: [wreg+status,2+status,0]
  1957                           	line	14
  1958                           	
  1959  03B1                     l30001008:	
  1960                           ;test_led.c: 14: INTCON = 0xC4;
  1961  03B1  30C4               	movlw	(0C4h)
  1962  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1963  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1964  03B4  008B               	movwf	(11)	;volatile
  1965                           	line	15
  1966                           ;test_led.c: 15: PIE1 = 0x01;
  1967  03B5  3001               	movlw	(01h)
  1968  03B6  1683               	bsf	status, 5	;RP0=1, select bank1
  1969  03B7  1303               	bcf	status, 6	;RP1=0, select bank1
  1970  03B8  008C               	movwf	(140)^080h	;volatile
  1971                           	
  1972  03B9                     l30001009:	
  1973                           	line	16
  1974                           ;test_led.c: 16: PIR1 = 0x00;
  1975  03B9  1003               	clrc
  1976  03BA  3000               	movlw	0
  1977  03BB  1803               	btfsc	status,0
  1978  03BC  3001               	movlw	1
  1979  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1980  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1981  03BF  008C               	movwf	(12)	;volatile
  1982                           	
  1983  03C0                     l30001010:	
  1984                           	line	17
  1985                           ;test_led.c: 17: T1CON = 0x0F;
  1986  03C0  300F               	movlw	(0Fh)
  1987  03C1  0090               	movwf	(16)	;volatile
  1988                           	
  1989  03C2                     l30001011:	
  1990                           	line	18
  1991                           ;test_led.c: 18: T2CON = 0x04;
  1992  03C2  3004               	movlw	(04h)
  1993  03C3  0092               	movwf	(18)	;volatile
  1994                           	
  1995  03C4                     l30001012:	
  1996                           	line	20
  1997                           ;test_led.c: 20: TRISA = 0x1F;
  1998  03C4  301F               	movlw	(01Fh)
  1999  03C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2000  03C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2001  03C7  0085               	movwf	(133)^080h	;volatile
  2002                           	
  2003  03C8                     l30001013:	
  2004                           	line	21
  2005                           ;test_led.c: 21: TRISB = 0x01;
  2006  03C8  3001               	movlw	(01h)
  2007  03C9  0086               	movwf	(134)^080h	;volatile
  2008                           	
  2009  03CA                     l30001014:	
  2010                           	line	22
  2011                           ;test_led.c: 22: PORTB = 0x00;
  2012  03CA  1003               	clrc
  2013  03CB  3000               	movlw	0
  2014  03CC  1803               	btfsc	status,0
  2015  03CD  3001               	movlw	1
  2016  03CE  1283               	bcf	status, 5	;RP0=0, select bank0
  2017  03CF  1303               	bcf	status, 6	;RP1=0, select bank0
  2018  03D0  0086               	movwf	(6)	;volatile
  2019                           	line	23
  2020                           ;test_led.c: 23: TRISC = 0x02;
  2021  03D1  3002               	movlw	(02h)
  2022  03D2  1683               	bsf	status, 5	;RP0=1, select bank1
  2023  03D3  1303               	bcf	status, 6	;RP1=0, select bank1
  2024  03D4  0087               	movwf	(135)^080h	;volatile
  2025                           	
  2026  03D5                     l30001015:	
  2027                           	line	24
  2028                           ;test_led.c: 24: TRISD = 0x00;
  2029  03D5  1003               	clrc
  2030  03D6  3000               	movlw	0
  2031  03D7  1803               	btfsc	status,0
  2032  03D8  3001               	movlw	1
  2033  03D9  0088               	movwf	(136)^080h	;volatile
  2034                           	
  2035  03DA                     l30001016:	
  2036                           	line	27
  2037                           ;test_led.c: 27: TMR1L = 0xFF;
  2038  03DA  30FF               	movlw	(0FFh)
  2039  03DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2040  03DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2041  03DD  008E               	movwf	(14)	;volatile
  2042                           	
  2043  03DE                     l30001017:	
  2044                           	line	28
  2045                           ;test_led.c: 28: TMR1H = 0x7F;
  2046  03DE  307F               	movlw	(07Fh)
  2047  03DF  008F               	movwf	(15)	;volatile
  2048                           	
  2049  03E0                     l30001018:	
  2050                           	line	30
  2051                           ;test_led.c: 30: OPTION = 0x80;
  2052  03E0  3080               	movlw	(080h)
  2053  03E1  1683               	bsf	status, 5	;RP0=1, select bank1
  2054  03E2  1303               	bcf	status, 6	;RP1=0, select bank1
  2055  03E3  0081               	movwf	(129)^080h
  2056                           	
  2057  03E4                     l30001019:	
  2058                           	line	32
  2059                           ;test_led.c: 32: seconde = 0;
  2060  03E4  3000               	movlw	low(0)
  2061  03E5  1283               	bcf	status, 5	;RP0=0, select bank0
  2062  03E6  1303               	bcf	status, 6	;RP1=0, select bank0
  2063  03E7  00AF               	movwf	(_seconde)
  2064  03E8  3000               	movlw	high(0)
  2065  03E9  00B0               	movwf	((_seconde))+1
  2066                           	
  2067  03EA                     l30001020:	
  2068                           	line	33
  2069                           ;test_led.c: 33: minute = 0;
  2070  03EA  3000               	movlw	low(0)
  2071  03EB  00F2               	movwf	(_minute)
  2072  03EC  3000               	movlw	high(0)
  2073  03ED  00F3               	movwf	((_minute))+1
  2074                           	
  2075  03EE                     l30001021:	
  2076                           	line	34
  2077                           ;test_led.c: 34: heure = 0;
  2078  03EE  3000               	movlw	low(0)
  2079  03EF  00F0               	movwf	(_heure)
  2080  03F0  3000               	movlw	high(0)
  2081  03F1  00F1               	movwf	((_heure))+1
  2082                           	
  2083  03F2                     l30001022:	
  2084                           	line	35
  2085                           ;test_led.c: 35: temp = 0;
  2086  03F2  3000               	movlw	low(0)
  2087  03F3  00B1               	movwf	(_temp)
  2088  03F4  3000               	movlw	high(0)
  2089  03F5  00B2               	movwf	((_temp))+1
  2090                           	
  2091  03F6                     l30001023:	
  2092                           	line	36
  2093                           ;test_led.c: 36: mode = 0;
  2094  03F6  3000               	movlw	low(0)
  2095  03F7  00F4               	movwf	(_mode)
  2096  03F8  3000               	movlw	high(0)
  2097  03F9  00F5               	movwf	((_mode))+1
  2098                           	
  2099  03FA                     l1:	
  2100  03FA  0008               	return
  2101                           	opt stack 0
  2102                           GLOBAL	__end_of_init
  2103  03FB                     	__end_of_init:
  2104                           ; =============== function _init ends ============
  2105                           
  2106                           psect	text126,local,class=CODE,delta=2
  2107                           global __ptext126
  2108  0530                     __ptext126:
  2109                           	line	37
  2110                           	signat	_init,88
  2111                           	global	_lcd_clear
  2112                           
  2113                           ; *************** function _lcd_clear *****************
  2114                           ; Defined at:
  2115                           ;		line 108 in file "H:\MicroControleur\Projet\liblcd.c"
  2116                           ; Parameters:    Size  Location     Type
  2117                           ;		None
  2118                           ; Auto vars:     Size  Location     Type
  2119                           ;		None
  2120                           ; Return value:  Size  Location     Type
  2121                           ;		None               void
  2122                           ; Registers used:
  2123                           ;		wreg, status,2, status,0, pclath, cstack
  2124                           ; Tracked objects:
  2125                           ;		On entry : 0/0
  2126                           ;		On exit  : 0/0
  2127                           ;		Unchanged: 0/0
  2128                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129                           ;      Locals:         0       0       0       0       0
  2130                           ;      Temp:     0
  2131                           ;      Total:    0
  2132                           ; This function calls:
  2133                           ;		_lcd_write_instr
  2134                           ; This function is called by:
  2135                           ;		_affichageHeure
  2136                           ; This function uses a non-reentrant model
  2137                           ; 
  2138                           psect	text126
  2139                           	file	"H:\MicroControleur\Projet\liblcd.c"
  2140                           	line	108
  2141                           	global	__size_of_lcd_clear
  2142  0007                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  2143                           ;liblcd.c: 107: void lcd_clear(void)
  2144                           ;liblcd.c: 108: {
  2145                           	
  2146  0530                     _lcd_clear:	
  2147                           	opt stack 4
  2148                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2149                           	line	109
  2150                           	
  2151  0530                     l30001083:	
  2152                           ;liblcd.c: 109: lcd_write_instr(0x01);
  2153  0530  3001               	movlw	(01h)
  2154  0531  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  2155                           	
  2156  0536                     l65:	
  2157  0536  0008               	return
  2158                           	opt stack 0
  2159                           GLOBAL	__end_of_lcd_clear
  2160  0537                     	__end_of_lcd_clear:
  2161                           ; =============== function _lcd_clear ends ============
  2162                           
  2163                           psect	text127,local,class=CODE,delta=2
  2164                           global __ptext127
  2165  022C                     __ptext127:
  2166                           	line	110
  2167                           	signat	_lcd_clear,88
  2168                           	global	___awdiv
  2169                           
  2170                           ; *************** function ___awdiv *****************
  2171                           ; Defined at:
  2172                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  2173                           ; Parameters:    Size  Location     Type
  2174                           ;  dividend        2    4[BANK0 ] int 
  2175                           ;  divisor         2    6[BANK0 ] int 
  2176                           ; Auto vars:     Size  Location     Type
  2177                           ;  quotient        2    2[BANK0 ] int 
  2178                           ;  sign            1    1[BANK0 ] unsigned char 
  2179                           ;  counter         1    0[BANK0 ] unsigned char 
  2180                           ; Return value:  Size  Location     Type
  2181                           ;                  2    4[BANK0 ] int 
  2182                           ; Registers used:
  2183                           ;		wreg, status,2, status,0
  2184                           ; Tracked objects:
  2185                           ;		On entry : 0/0
  2186                           ;		On exit  : 0/0
  2187                           ;		Unchanged: 0/0
  2188                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189                           ;      Locals:         1       8       0       0       0
  2190                           ;      Temp:     1
  2191                           ;      Total:    9
  2192                           ; This function calls:
  2193                           ;		Nothing
  2194                           ; This function is called by:
  2195                           ;		_affichageHeure
  2196                           ; This function uses a non-reentrant model
  2197                           ; 
  2198                           psect	text127
  2199                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\awdiv.c"
  2200                           	line	5
  2201                           	global	__size_of___awdiv
  2202  0072                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2203                           	
  2204  022C                     ___awdiv:	
  2205                           	opt stack 4
  2206                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2207                           	line	9
  2208                           	
  2209  022C                     l30001110:	
  2210  022C  1003               	clrc
  2211  022D  3000               	movlw	0
  2212  022E  1803               	btfsc	status,0
  2213  022F  3001               	movlw	1
  2214  0230  1283               	bcf	status, 5	;RP0=0, select bank0
  2215  0231  1303               	bcf	status, 6	;RP1=0, select bank0
  2216  0232  00A1               	movwf	(___awdiv@sign)
  2217                           	
  2218  0233                     l30001111:	
  2219                           	line	10
  2220  0233  1FA7               	btfss	(___awdiv@divisor+1),7
  2221  0234  2A36               	goto	u1121
  2222  0235  2A37               	goto	u1120
  2223  0236                     u1121:
  2224  0236  2A3F               	goto	l30001113
  2225  0237                     u1120:
  2226                           	
  2227  0237                     l30001112:	
  2228                           	line	11
  2229  0237  09A6               	comf	(___awdiv@divisor),f
  2230  0238  09A7               	comf	(___awdiv@divisor+1),f
  2231  0239  0AA6               	incf	(___awdiv@divisor),f
  2232  023A  1903               	skipnz
  2233  023B  0AA7               	incf	(___awdiv@divisor+1),f
  2234                           	line	12
  2235  023C  01A1               	clrf	(___awdiv@sign)
  2236  023D  1403               	bsf	status,0
  2237  023E  0DA1               	rlf	(___awdiv@sign),f
  2238                           	
  2239  023F                     l30001113:	
  2240                           	line	14
  2241  023F  1FA5               	btfss	(___awdiv@dividend+1),7
  2242  0240  2A42               	goto	u1131
  2243  0241  2A43               	goto	u1130
  2244  0242                     u1131:
  2245  0242  2A4C               	goto	l218
  2246  0243                     u1130:
  2247                           	
  2248  0243                     l30001114:	
  2249                           	line	15
  2250  0243  09A4               	comf	(___awdiv@dividend),f
  2251  0244  09A5               	comf	(___awdiv@dividend+1),f
  2252  0245  0AA4               	incf	(___awdiv@dividend),f
  2253  0246  1903               	skipnz
  2254  0247  0AA5               	incf	(___awdiv@dividend+1),f
  2255                           	
  2256  0248                     l30001115:	
  2257                           	line	16
  2258  0248  3001               	movlw	(01h)
  2259  0249  00F6               	movwf	(??___awdiv+0+0)
  2260  024A  0876               	movf	(??___awdiv+0+0),w
  2261  024B  06A1               	xorwf	(___awdiv@sign),f
  2262                           	
  2263  024C                     l218:	
  2264                           	line	18
  2265  024C  3000               	movlw	low(0)
  2266  024D  00A2               	movwf	(___awdiv@quotient)
  2267  024E  3000               	movlw	high(0)
  2268  024F  00A3               	movwf	((___awdiv@quotient))+1
  2269                           	line	19
  2270  0250  0827               	movf	(___awdiv@divisor+1),w
  2271  0251  0426               	iorwf	(___awdiv@divisor),w
  2272  0252  1903               	skipnz
  2273  0253  2A55               	goto	u1141
  2274  0254  2A56               	goto	u1140
  2275  0255                     u1141:
  2276  0255  2A8E               	goto	l30001125
  2277  0256                     u1140:
  2278                           	
  2279  0256                     l30001116:	
  2280                           	line	20
  2281  0256  01A0               	clrf	(___awdiv@counter)
  2282  0257  1403               	bsf	status,0
  2283  0258  0DA0               	rlf	(___awdiv@counter),f
  2284  0259  2A65               	goto	l30001119
  2285                           	
  2286  025A                     l30001117:	
  2287                           	line	22
  2288  025A  3001               	movlw	01h
  2289  025B                     u1155:
  2290  025B  1003               	clrc
  2291  025C  0DA6               	rlf	(___awdiv@divisor),f
  2292  025D  0DA7               	rlf	(___awdiv@divisor+1),f
  2293  025E  3EFF               	addlw	-1
  2294  025F  1D03               	skipz
  2295  0260  2A5B               	goto	u1155
  2296                           	
  2297  0261                     l30001118:	
  2298                           	line	23
  2299  0261  3001               	movlw	(01h)
  2300  0262  00F6               	movwf	(??___awdiv+0+0)
  2301  0263  0876               	movf	(??___awdiv+0+0),w
  2302  0264  07A0               	addwf	(___awdiv@counter),f
  2303                           	
  2304  0265                     l30001119:	
  2305                           	line	21
  2306  0265  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
  2307  0266  2A68               	goto	u1161
  2308  0267  2A69               	goto	u1160
  2309  0268                     u1161:
  2310  0268  2A5A               	goto	l30001117
  2311  0269                     u1160:
  2312                           	
  2313  0269                     l30001120:	
  2314                           	line	26
  2315  0269  3001               	movlw	01h
  2316  026A                     u1175:
  2317  026A  1003               	clrc
  2318  026B  0DA2               	rlf	(___awdiv@quotient),f
  2319  026C  0DA3               	rlf	(___awdiv@quotient+1),f
  2320  026D  3EFF               	addlw	-1
  2321  026E  1D03               	skipz
  2322  026F  2A6A               	goto	u1175
  2323                           	line	27
  2324  0270  0827               	movf	(___awdiv@divisor+1),w
  2325  0271  0225               	subwf	(___awdiv@dividend+1),w
  2326  0272  1D03               	skipz
  2327  0273  2A76               	goto	u1185
  2328  0274  0826               	movf	(___awdiv@divisor),w
  2329  0275  0224               	subwf	(___awdiv@dividend),w
  2330  0276                     u1185:
  2331  0276  1C03               	skipc
  2332  0277  2A79               	goto	u1181
  2333  0278  2A7A               	goto	u1180
  2334  0279                     u1181:
  2335  0279  2A81               	goto	l30001123
  2336  027A                     u1180:
  2337                           	
  2338  027A                     l30001121:	
  2339                           	line	28
  2340  027A  0826               	movf	(___awdiv@divisor),w
  2341  027B  02A4               	subwf	(___awdiv@dividend),f
  2342  027C  0827               	movf	(___awdiv@divisor+1),w
  2343  027D  1C03               	skipc
  2344  027E  03A5               	decf	(___awdiv@dividend+1),f
  2345  027F  02A5               	subwf	(___awdiv@dividend+1),f
  2346                           	
  2347  0280                     l30001122:	
  2348                           	line	29
  2349  0280  1422               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2350                           	
  2351  0281                     l30001123:	
  2352                           	line	31
  2353  0281  3001               	movlw	01h
  2354  0282                     u1195:
  2355  0282  1003               	clrc
  2356  0283  0CA7               	rrf	(___awdiv@divisor+1),f
  2357  0284  0CA6               	rrf	(___awdiv@divisor),f
  2358  0285  3EFF               	addlw	-1
  2359  0286  1D03               	skipz
  2360  0287  2A82               	goto	u1195
  2361                           	
  2362  0288                     l30001124:	
  2363                           	line	32
  2364  0288  3001               	movlw	low(01h)
  2365  0289  02A0               	subwf	(___awdiv@counter),f
  2366  028A  1D03               	btfss	status,2
  2367  028B  2A8D               	goto	u1201
  2368  028C  2A8E               	goto	u1200
  2369  028D                     u1201:
  2370  028D  2A69               	goto	l30001120
  2371  028E                     u1200:
  2372                           	
  2373  028E                     l30001125:	
  2374                           	line	34
  2375  028E  0821               	movf	(___awdiv@sign),w
  2376  028F  1D03               	skipz
  2377  0290  2A92               	goto	u1210
  2378  0291  2A97               	goto	l30001127
  2379  0292                     u1210:
  2380                           	
  2381  0292                     l30001126:	
  2382                           	line	35
  2383  0292  09A2               	comf	(___awdiv@quotient),f
  2384  0293  09A3               	comf	(___awdiv@quotient+1),f
  2385  0294  0AA2               	incf	(___awdiv@quotient),f
  2386  0295  1903               	skipnz
  2387  0296  0AA3               	incf	(___awdiv@quotient+1),f
  2388                           	
  2389  0297                     l30001127:	
  2390                           	line	36
  2391  0297  0823               	movf	(___awdiv@quotient+1),w
  2392  0298  01A5               	clrf	(?___awdiv+1)
  2393  0299  07A5               	addwf	(?___awdiv+1)
  2394  029A  0822               	movf	(___awdiv@quotient),w
  2395  029B  01A4               	clrf	(?___awdiv)
  2396  029C  07A4               	addwf	(?___awdiv)
  2397                           
  2398                           	
  2399  029D                     l216:	
  2400  029D  0008               	return
  2401                           	opt stack 0
  2402                           GLOBAL	__end_of___awdiv
  2403  029E                     	__end_of___awdiv:
  2404                           ; =============== function ___awdiv ends ============
  2405                           
  2406                           psect	text128,local,class=CODE,delta=2
  2407                           global __ptext128
  2408  03FB                     __ptext128:
  2409                           	line	37
  2410                           	signat	___awdiv,8314
  2411                           	global	_lcd_putch
  2412                           
  2413                           ; *************** function _lcd_putch *****************
  2414                           ; Defined at:
  2415                           ;		line 72 in file "H:\MicroControleur\Projet\liblcd.c"
  2416                           ; Parameters:    Size  Location     Type
  2417                           ;  c               1    wreg     unsigned char 
  2418                           ; Auto vars:     Size  Location     Type
  2419                           ;  c               1    1[BANK0 ] unsigned char 
  2420                           ; Return value:  Size  Location     Type
  2421                           ;		None               void
  2422                           ; Registers used:
  2423                           ;		wreg, status,2, status,0, pclath, cstack
  2424                           ; Tracked objects:
  2425                           ;		On entry : 0/0
  2426                           ;		On exit  : 0/0
  2427                           ;		Unchanged: 0/0
  2428                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429                           ;      Locals:         1       1       0       0       0
  2430                           ;      Temp:     1
  2431                           ;      Total:    2
  2432                           ; This function calls:
  2433                           ;		_lcd_busy
  2434                           ;		_Tempo_us
  2435                           ; This function is called by:
  2436                           ;		_affichageHeure
  2437                           ; This function uses a non-reentrant model
  2438                           ; 
  2439                           psect	text128
  2440                           	file	"H:\MicroControleur\Projet\liblcd.c"
  2441                           	line	72
  2442                           	global	__size_of_lcd_putch
  2443  0036                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  2444                           ;liblcd.c: 71: void lcd_putch(unsigned char c)
  2445                           ;liblcd.c: 72: {
  2446                           	
  2447  03FB                     _lcd_putch:	
  2448                           	opt stack 4
  2449                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  2450                           ;lcd_putch@c stored from wreg
  2451  03FB  1283               	bcf	status, 5	;RP0=0, select bank0
  2452  03FC  1303               	bcf	status, 6	;RP1=0, select bank0
  2453  03FD  00A1               	movwf	(lcd_putch@c)
  2454                           	
  2455  03FE                     l30001095:	
  2456                           	line	73
  2457                           ;liblcd.c: 73: lcd_busy();
  2458  03FE  120A  118A  2467   	fcall	_lcd_busy
              120A  118A         
  2459                           	
  2460  0403                     l30001096:	
  2461                           	line	74
  2462                           ;liblcd.c: 74: RD6 = 0;
  2463  0403  1283               	bcf	status, 5	;RP0=0, select bank0
  2464  0404  1303               	bcf	status, 6	;RP1=0, select bank0
  2465  0405  1308               	bcf	(70/8),(70)&7
  2466                           	
  2467  0406                     l30001097:	
  2468                           	line	75
  2469                           ;liblcd.c: 75: PORTD = 0x90 | ((c >> 4) & 0x0F);
  2470  0406  0821               	movf	(lcd_putch@c),w
  2471  0407  00F8               	movwf	(??_lcd_putch+0+0)
  2472  0408  3004               	movlw	04h
  2473  0409                     u1095:
  2474  0409  1003               	clrc
  2475  040A  0CF8               	rrf	(??_lcd_putch+0+0),f
  2476  040B  3EFF               	addlw	-1
  2477  040C  1D03               	skipz
  2478  040D  2C09               	goto	u1095
  2479  040E  0878               	movf	0+(??_lcd_putch+0+0),w
  2480  040F  390F               	andlw	0Fh
  2481  0410  3890               	iorlw	090h
  2482  0411  0088               	movwf	(8)	;volatile
  2483                           	
  2484  0412                     l30001098:	
  2485                           	line	76
  2486                           ;liblcd.c: 76: RD6 = 1;
  2487  0412  1708               	bsf	(70/8),(70)&7
  2488                           	
  2489  0413                     l30001099:	
  2490                           	line	77
  2491                           ;liblcd.c: 77: Tempo_us(5);
  2492  0413  3005               	movlw	low(05h)
  2493  0414  00F6               	movwf	(?_Tempo_us)
  2494  0415  3000               	movlw	high(05h)
  2495  0416  00F7               	movwf	((?_Tempo_us))+1
  2496  0417  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  2497                           	
  2498  041C                     l30001100:	
  2499                           	line	78
  2500                           ;liblcd.c: 78: RD6 = 0;
  2501  041C  1283               	bcf	status, 5	;RP0=0, select bank0
  2502  041D  1303               	bcf	status, 6	;RP1=0, select bank0
  2503  041E  1308               	bcf	(70/8),(70)&7
  2504                           	
  2505  041F                     l30001101:	
  2506                           	line	79
  2507                           ;liblcd.c: 79: PORTD = 0x90 | (c & 0x0F);
  2508  041F  0821               	movf	(lcd_putch@c),w
  2509  0420  390F               	andlw	0Fh
  2510  0421  3890               	iorlw	090h
  2511  0422  0088               	movwf	(8)	;volatile
  2512                           	
  2513  0423                     l30001102:	
  2514                           	line	80
  2515                           ;liblcd.c: 80: RD6 = 1;
  2516  0423  1708               	bsf	(70/8),(70)&7
  2517                           	
  2518  0424                     l30001103:	
  2519                           	line	81
  2520                           ;liblcd.c: 81: Tempo_us(5);
  2521  0424  3005               	movlw	low(05h)
  2522  0425  00F6               	movwf	(?_Tempo_us)
  2523  0426  3000               	movlw	high(05h)
  2524  0427  00F7               	movwf	((?_Tempo_us))+1
  2525  0428  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  2526                           	
  2527  042D                     l30001104:	
  2528                           	line	82
  2529                           ;liblcd.c: 82: RD6 = 0;
  2530  042D  1283               	bcf	status, 5	;RP0=0, select bank0
  2531  042E  1303               	bcf	status, 6	;RP1=0, select bank0
  2532  042F  1308               	bcf	(70/8),(70)&7
  2533                           	
  2534  0430                     l56:	
  2535  0430  0008               	return
  2536                           	opt stack 0
  2537                           GLOBAL	__end_of_lcd_putch
  2538  0431                     	__end_of_lcd_putch:
  2539                           ; =============== function _lcd_putch ends ============
  2540                           
  2541                           psect	text129,local,class=CODE,delta=2
  2542                           global __ptext129
  2543  0529                     __ptext129:
  2544                           	line	83
  2545                           	signat	_lcd_putch,4216
  2546                           	global	_lcd_home
  2547                           
  2548                           ; *************** function _lcd_home *****************
  2549                           ; Defined at:
  2550                           ;		line 113 in file "H:\MicroControleur\Projet\liblcd.c"
  2551                           ; Parameters:    Size  Location     Type
  2552                           ;		None
  2553                           ; Auto vars:     Size  Location     Type
  2554                           ;		None
  2555                           ; Return value:  Size  Location     Type
  2556                           ;		None               void
  2557                           ; Registers used:
  2558                           ;		wreg, status,2, status,0, pclath, cstack
  2559                           ; Tracked objects:
  2560                           ;		On entry : 0/0
  2561                           ;		On exit  : 0/0
  2562                           ;		Unchanged: 0/0
  2563                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564                           ;      Locals:         0       0       0       0       0
  2565                           ;      Temp:     0
  2566                           ;      Total:    0
  2567                           ; This function calls:
  2568                           ;		_lcd_write_instr
  2569                           ; This function is called by:
  2570                           ;		_affichageHeure
  2571                           ; This function uses a non-reentrant model
  2572                           ; 
  2573                           psect	text129
  2574                           	file	"H:\MicroControleur\Projet\liblcd.c"
  2575                           	line	113
  2576                           	global	__size_of_lcd_home
  2577  0007                     	__size_of_lcd_home	equ	__end_of_lcd_home-_lcd_home
  2578                           ;liblcd.c: 112: void lcd_home(void)
  2579                           ;liblcd.c: 113: {
  2580                           	
  2581  0529                     _lcd_home:	
  2582                           	opt stack 4
  2583                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  2584                           	line	114
  2585                           	
  2586  0529                     l30001094:	
  2587                           ;liblcd.c: 114: lcd_write_instr(0x02);
  2588  0529  3002               	movlw	(02h)
  2589  052A  120A  118A  2431   	fcall	_lcd_write_instr
              120A  118A         
  2590                           	
  2591  052F                     l66:	
  2592  052F  0008               	return
  2593                           	opt stack 0
  2594                           GLOBAL	__end_of_lcd_home
  2595  0530                     	__end_of_lcd_home:
  2596                           ; =============== function _lcd_home ends ============
  2597                           
  2598                           psect	text130,local,class=CODE,delta=2
  2599                           global __ptext130
  2600  0309                     __ptext130:
  2601                           	line	115
  2602                           	signat	_lcd_home,88
  2603                           	global	___awmod
  2604                           
  2605                           ; *************** function ___awmod *****************
  2606                           ; Defined at:
  2607                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\awmod.c"
  2608                           ; Parameters:    Size  Location     Type
  2609                           ;  dividend        2    0[BANK0 ] int 
  2610                           ;  divisor         2    2[BANK0 ] int 
  2611                           ; Auto vars:     Size  Location     Type
  2612                           ;  sign            1    1[COMMON] unsigned char 
  2613                           ;  counter         1    2[COMMON] unsigned char 
  2614                           ; Return value:  Size  Location     Type
  2615                           ;                  2    0[BANK0 ] int 
  2616                           ; Registers used:
  2617                           ;		wreg, status,2, status,0
  2618                           ; Tracked objects:
  2619                           ;		On entry : 0/0
  2620                           ;		On exit  : 0/0
  2621                           ;		Unchanged: 0/0
  2622                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623                           ;      Locals:         3       4       0       0       0
  2624                           ;      Temp:     1
  2625                           ;      Total:    7
  2626                           ; This function calls:
  2627                           ;		Nothing
  2628                           ; This function is called by:
  2629                           ;		_affichageHeure
  2630                           ;		_reglage
  2631                           ; This function uses a non-reentrant model
  2632                           ; 
  2633                           psect	text130
  2634                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\awmod.c"
  2635                           	line	5
  2636                           	global	__size_of___awmod
  2637  005C                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  2638                           	
  2639  0309                     ___awmod:	
  2640                           	opt stack 4
  2641                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2642                           	line	8
  2643                           	
  2644  0309                     l30000881:	
  2645  0309  1003               	clrc
  2646  030A  3000               	movlw	0
  2647  030B  1803               	btfsc	status,0
  2648  030C  3001               	movlw	1
  2649  030D  00F7               	movwf	(___awmod@sign)
  2650                           	
  2651  030E                     l30000882:	
  2652                           	line	9
  2653  030E  1283               	bcf	status, 5	;RP0=0, select bank0
  2654  030F  1303               	bcf	status, 6	;RP1=0, select bank0
  2655  0310  1FA1               	btfss	(___awmod@dividend+1),7
  2656  0311  2B13               	goto	u461
  2657  0312  2B14               	goto	u460
  2658  0313                     u461:
  2659  0313  2B1C               	goto	l30000884
  2660  0314                     u460:
  2661                           	
  2662  0314                     l30000883:	
  2663                           	line	10
  2664  0314  09A0               	comf	(___awmod@dividend),f
  2665  0315  09A1               	comf	(___awmod@dividend+1),f
  2666  0316  0AA0               	incf	(___awmod@dividend),f
  2667  0317  1903               	skipnz
  2668  0318  0AA1               	incf	(___awmod@dividend+1),f
  2669                           	line	11
  2670  0319  01F7               	clrf	(___awmod@sign)
  2671  031A  1403               	bsf	status,0
  2672  031B  0DF7               	rlf	(___awmod@sign),f
  2673                           	
  2674  031C                     l30000884:	
  2675                           	line	13
  2676  031C  1FA3               	btfss	(___awmod@divisor+1),7
  2677  031D  2B1F               	goto	u471
  2678  031E  2B20               	goto	u470
  2679  031F                     u471:
  2680  031F  2B25               	goto	l30000886
  2681  0320                     u470:
  2682                           	
  2683  0320                     l30000885:	
  2684                           	line	14
  2685  0320  09A2               	comf	(___awmod@divisor),f
  2686  0321  09A3               	comf	(___awmod@divisor+1),f
  2687  0322  0AA2               	incf	(___awmod@divisor),f
  2688  0323  1903               	skipnz
  2689  0324  0AA3               	incf	(___awmod@divisor+1),f
  2690                           	
  2691  0325                     l30000886:	
  2692                           	line	15
  2693  0325  0823               	movf	(___awmod@divisor+1),w
  2694  0326  0422               	iorwf	(___awmod@divisor),w
  2695  0327  1903               	skipnz
  2696  0328  2B2A               	goto	u481
  2697  0329  2B2B               	goto	u480
  2698  032A                     u481:
  2699  032A  2B5B               	goto	l30000895
  2700  032B                     u480:
  2701                           	
  2702  032B                     l30000887:	
  2703                           	line	16
  2704  032B  01F8               	clrf	(___awmod@counter)
  2705  032C  1403               	bsf	status,0
  2706  032D  0DF8               	rlf	(___awmod@counter),f
  2707  032E  2B3A               	goto	l30000890
  2708                           	
  2709  032F                     l30000888:	
  2710                           	line	18
  2711  032F  3001               	movlw	01h
  2712  0330                     u495:
  2713  0330  1003               	clrc
  2714  0331  0DA2               	rlf	(___awmod@divisor),f
  2715  0332  0DA3               	rlf	(___awmod@divisor+1),f
  2716  0333  3EFF               	addlw	-1
  2717  0334  1D03               	skipz
  2718  0335  2B30               	goto	u495
  2719                           	
  2720  0336                     l30000889:	
  2721                           	line	19
  2722  0336  3001               	movlw	(01h)
  2723  0337  00F6               	movwf	(??___awmod+0+0)
  2724  0338  0876               	movf	(??___awmod+0+0),w
  2725  0339  07F8               	addwf	(___awmod@counter),f
  2726                           	
  2727  033A                     l30000890:	
  2728                           	line	17
  2729  033A  1FA3               	btfss	(___awmod@divisor+1),(15)&7
  2730  033B  2B3D               	goto	u501
  2731  033C  2B3E               	goto	u500
  2732  033D                     u501:
  2733  033D  2B2F               	goto	l30000888
  2734  033E                     u500:
  2735                           	
  2736  033E                     l30000891:	
  2737                           	line	22
  2738  033E  0823               	movf	(___awmod@divisor+1),w
  2739  033F  0221               	subwf	(___awmod@dividend+1),w
  2740  0340  1D03               	skipz
  2741  0341  2B44               	goto	u515
  2742  0342  0822               	movf	(___awmod@divisor),w
  2743  0343  0220               	subwf	(___awmod@dividend),w
  2744  0344                     u515:
  2745  0344  1C03               	skipc
  2746  0345  2B47               	goto	u511
  2747  0346  2B48               	goto	u510
  2748  0347                     u511:
  2749  0347  2B4E               	goto	l30000893
  2750  0348                     u510:
  2751                           	
  2752  0348                     l30000892:	
  2753                           	line	23
  2754  0348  0822               	movf	(___awmod@divisor),w
  2755  0349  02A0               	subwf	(___awmod@dividend),f
  2756  034A  0823               	movf	(___awmod@divisor+1),w
  2757  034B  1C03               	skipc
  2758  034C  03A1               	decf	(___awmod@dividend+1),f
  2759  034D  02A1               	subwf	(___awmod@dividend+1),f
  2760                           	
  2761  034E                     l30000893:	
  2762                           	line	24
  2763  034E  3001               	movlw	01h
  2764  034F                     u525:
  2765  034F  1003               	clrc
  2766  0350  0CA3               	rrf	(___awmod@divisor+1),f
  2767  0351  0CA2               	rrf	(___awmod@divisor),f
  2768  0352  3EFF               	addlw	-1
  2769  0353  1D03               	skipz
  2770  0354  2B4F               	goto	u525
  2771                           	
  2772  0355                     l30000894:	
  2773                           	line	25
  2774  0355  3001               	movlw	low(01h)
  2775  0356  02F8               	subwf	(___awmod@counter),f
  2776  0357  1D03               	btfss	status,2
  2777  0358  2B5A               	goto	u531
  2778  0359  2B5B               	goto	u530
  2779  035A                     u531:
  2780  035A  2B3E               	goto	l30000891
  2781  035B                     u530:
  2782                           	
  2783  035B                     l30000895:	
  2784                           	line	27
  2785  035B  0877               	movf	(___awmod@sign),w
  2786  035C  1D03               	skipz
  2787  035D  2B5F               	goto	u540
  2788  035E  2B64               	goto	l30000897
  2789  035F                     u540:
  2790                           	
  2791  035F                     l30000896:	
  2792                           	line	28
  2793  035F  09A0               	comf	(___awmod@dividend),f
  2794  0360  09A1               	comf	(___awmod@dividend+1),f
  2795  0361  0AA0               	incf	(___awmod@dividend),f
  2796  0362  1903               	skipnz
  2797  0363  0AA1               	incf	(___awmod@dividend+1),f
  2798                           	
  2799  0364                     l30000897:	
  2800                           	line	29
  2801                           	
  2802  0364                     l296:	
  2803  0364  0008               	return
  2804                           	opt stack 0
  2805                           GLOBAL	__end_of___awmod
  2806  0365                     	__end_of___awmod:
  2807                           ; =============== function ___awmod ends ============
  2808                           
  2809                           psect	text131,local,class=CODE,delta=2
  2810                           global __ptext131
  2811  0431                     __ptext131:
  2812                           	line	30
  2813                           	signat	___awmod,8314
  2814                           	global	_lcd_write_instr
  2815                           
  2816                           ; *************** function _lcd_write_instr *****************
  2817                           ; Defined at:
  2818                           ;		line 58 in file "H:\MicroControleur\Projet\liblcd.c"
  2819                           ; Parameters:    Size  Location     Type
  2820                           ;  c               1    wreg     unsigned char 
  2821                           ; Auto vars:     Size  Location     Type
  2822                           ;  c               1    1[BANK0 ] unsigned char 
  2823                           ; Return value:  Size  Location     Type
  2824                           ;		None               void
  2825                           ; Registers used:
  2826                           ;		wreg, status,2, status,0, pclath, cstack
  2827                           ; Tracked objects:
  2828                           ;		On entry : 0/0
  2829                           ;		On exit  : 0/0
  2830                           ;		Unchanged: 0/0
  2831                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832                           ;      Locals:         1       1       0       0       0
  2833                           ;      Temp:     1
  2834                           ;      Total:    2
  2835                           ; This function calls:
  2836                           ;		_lcd_busy
  2837                           ;		_Tempo_us
  2838                           ; This function is called by:
  2839                           ;		_lcd_init
  2840                           ;		_lcd_clear
  2841                           ;		_lcd_home
  2842                           ; This function uses a non-reentrant model
  2843                           ; 
  2844                           psect	text131
  2845                           	file	"H:\MicroControleur\Projet\liblcd.c"
  2846                           	line	58
  2847                           	global	__size_of_lcd_write_instr
  2848  0036                     	__size_of_lcd_write_instr	equ	__end_of_lcd_write_instr-_lcd_write_instr
  2849                           ;liblcd.c: 57: void lcd_write_instr(unsigned char c)
  2850                           ;liblcd.c: 58: {
  2851                           	
  2852  0431                     _lcd_write_instr:	
  2853                           	opt stack 3
  2854                           ; Regs used in _lcd_write_instr: [wreg+status,2+status,0+pclath+cstack]
  2855                           ;lcd_write_instr@c stored from wreg
  2856  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  2857  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  2858  0433  00A1               	movwf	(lcd_write_instr@c)
  2859                           	
  2860  0434                     l30001068:	
  2861                           	line	59
  2862                           ;liblcd.c: 59: lcd_busy();
  2863  0434  120A  118A  2467   	fcall	_lcd_busy
              120A  118A         
  2864                           	
  2865  0439                     l30001069:	
  2866                           	line	60
  2867                           ;liblcd.c: 60: RD6 = 0;
  2868  0439  1283               	bcf	status, 5	;RP0=0, select bank0
  2869  043A  1303               	bcf	status, 6	;RP1=0, select bank0
  2870  043B  1308               	bcf	(70/8),(70)&7
  2871                           	
  2872  043C                     l30001070:	
  2873                           	line	61
  2874                           ;liblcd.c: 61: PORTD = 0x80 | ((c >> 4) & 0x0F);
  2875  043C  0821               	movf	(lcd_write_instr@c),w
  2876  043D  00F8               	movwf	(??_lcd_write_instr+0+0)
  2877  043E  3004               	movlw	04h
  2878  043F                     u1045:
  2879  043F  1003               	clrc
  2880  0440  0CF8               	rrf	(??_lcd_write_instr+0+0),f
  2881  0441  3EFF               	addlw	-1
  2882  0442  1D03               	skipz
  2883  0443  2C3F               	goto	u1045
  2884  0444  0878               	movf	0+(??_lcd_write_instr+0+0),w
  2885  0445  390F               	andlw	0Fh
  2886  0446  3880               	iorlw	080h
  2887  0447  0088               	movwf	(8)	;volatile
  2888                           	
  2889  0448                     l30001071:	
  2890                           	line	62
  2891                           ;liblcd.c: 62: RD6 = 1;
  2892  0448  1708               	bsf	(70/8),(70)&7
  2893                           	
  2894  0449                     l30001072:	
  2895                           	line	63
  2896                           ;liblcd.c: 63: Tempo_us(5);
  2897  0449  3005               	movlw	low(05h)
  2898  044A  00F6               	movwf	(?_Tempo_us)
  2899  044B  3000               	movlw	high(05h)
  2900  044C  00F7               	movwf	((?_Tempo_us))+1
  2901  044D  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  2902                           	
  2903  0452                     l30001073:	
  2904                           	line	64
  2905                           ;liblcd.c: 64: RD6 = 0;
  2906  0452  1283               	bcf	status, 5	;RP0=0, select bank0
  2907  0453  1303               	bcf	status, 6	;RP1=0, select bank0
  2908  0454  1308               	bcf	(70/8),(70)&7
  2909                           	
  2910  0455                     l30001074:	
  2911                           	line	65
  2912                           ;liblcd.c: 65: PORTD = 0x80 | (c & 0x0F);
  2913  0455  0821               	movf	(lcd_write_instr@c),w
  2914  0456  390F               	andlw	0Fh
  2915  0457  3880               	iorlw	080h
  2916  0458  0088               	movwf	(8)	;volatile
  2917                           	
  2918  0459                     l30001075:	
  2919                           	line	66
  2920                           ;liblcd.c: 66: RD6 = 1;
  2921  0459  1708               	bsf	(70/8),(70)&7
  2922                           	
  2923  045A                     l30001076:	
  2924                           	line	67
  2925                           ;liblcd.c: 67: Tempo_us(5);
  2926  045A  3005               	movlw	low(05h)
  2927  045B  00F6               	movwf	(?_Tempo_us)
  2928  045C  3000               	movlw	high(05h)
  2929  045D  00F7               	movwf	((?_Tempo_us))+1
  2930  045E  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  2931                           	
  2932  0463                     l30001077:	
  2933                           	line	68
  2934                           ;liblcd.c: 68: RD6 = 0;
  2935  0463  1283               	bcf	status, 5	;RP0=0, select bank0
  2936  0464  1303               	bcf	status, 6	;RP1=0, select bank0
  2937  0465  1308               	bcf	(70/8),(70)&7
  2938                           	
  2939  0466                     l55:	
  2940  0466  0008               	return
  2941                           	opt stack 0
  2942                           GLOBAL	__end_of_lcd_write_instr
  2943  0467                     	__end_of_lcd_write_instr:
  2944                           ; =============== function _lcd_write_instr ends ============
  2945                           
  2946                           psect	text132,local,class=CODE,delta=2
  2947                           global __ptext132
  2948  0467                     __ptext132:
  2949                           	line	69
  2950                           	signat	_lcd_write_instr,4216
  2951                           	global	_lcd_busy
  2952                           
  2953                           ; *************** function _lcd_busy *****************
  2954                           ; Defined at:
  2955                           ;		line 39 in file "H:\MicroControleur\Projet\liblcd.c"
  2956                           ; Parameters:    Size  Location     Type
  2957                           ;		None
  2958                           ; Auto vars:     Size  Location     Type
  2959                           ;  c               1    0[BANK0 ] unsigned char 
  2960                           ; Return value:  Size  Location     Type
  2961                           ;		None               void
  2962                           ; Registers used:
  2963                           ;		wreg, status,2, status,0, pclath, cstack
  2964                           ; Tracked objects:
  2965                           ;		On entry : 0/0
  2966                           ;		On exit  : 0/0
  2967                           ;		Unchanged: 0/0
  2968                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969                           ;      Locals:         0       1       0       0       0
  2970                           ;      Temp:     0
  2971                           ;      Total:    1
  2972                           ; This function calls:
  2973                           ;		_Tempo_us
  2974                           ; This function is called by:
  2975                           ;		_lcd_write_instr
  2976                           ;		_lcd_putch
  2977                           ; This function uses a non-reentrant model
  2978                           ; 
  2979                           psect	text132
  2980                           	file	"H:\MicroControleur\Projet\liblcd.c"
  2981                           	line	39
  2982                           	global	__size_of_lcd_busy
  2983  0034                     	__size_of_lcd_busy	equ	__end_of_lcd_busy-_lcd_busy
  2984                           ;liblcd.c: 38: void lcd_busy(void)
  2985                           ;liblcd.c: 39: {
  2986                           	
  2987  0467                     _lcd_busy:	
  2988                           	opt stack 2
  2989                           ; Regs used in _lcd_busy: [wreg+status,2+status,0+pclath+cstack]
  2990                           	line	41
  2991                           	
  2992  0467                     l30001057:	
  2993                           ;liblcd.c: 40: char c;
  2994                           ;liblcd.c: 41: RB3 = 1;
  2995  0467  1283               	bcf	status, 5	;RP0=0, select bank0
  2996  0468  1303               	bcf	status, 6	;RP1=0, select bank0
  2997  0469  1586               	bsf	(51/8),(51)&7
  2998                           	
  2999  046A                     l30001058:	
  3000                           	line	42
  3001                           ;liblcd.c: 42: TRISD = 0x08;
  3002  046A  3008               	movlw	(08h)
  3003  046B  1683               	bsf	status, 5	;RP0=1, select bank1
  3004  046C  1303               	bcf	status, 6	;RP1=0, select bank1
  3005  046D  0088               	movwf	(136)^080h	;volatile
  3006                           	
  3007  046E                     l30001059:	
  3008                           	line	43
  3009                           ;liblcd.c: 43: RD4 = 0;
  3010  046E  1283               	bcf	status, 5	;RP0=0, select bank0
  3011  046F  1303               	bcf	status, 6	;RP1=0, select bank0
  3012  0470  1208               	bcf	(68/8),(68)&7
  3013                           	
  3014  0471                     l30001060:	
  3015                           	line	44
  3016                           ;liblcd.c: 44: RD5 = 1;
  3017  0471  1688               	bsf	(69/8),(69)&7
  3018                           	
  3019  0472                     l30001061:	
  3020                           	line	47
  3021                           ;liblcd.c: 46: {
  3022                           ;liblcd.c: 47: RD6 = 1;
  3023  0472  1708               	bsf	(70/8),(70)&7
  3024                           	
  3025  0473                     l30001062:	
  3026                           	line	48
  3027                           ;liblcd.c: 48: Tempo_us(5);
  3028  0473  3005               	movlw	low(05h)
  3029  0474  00F6               	movwf	(?_Tempo_us)
  3030  0475  3000               	movlw	high(05h)
  3031  0476  00F7               	movwf	((?_Tempo_us))+1
  3032  0477  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  3033                           	
  3034  047C                     l30001063:	
  3035                           	line	49
  3036                           ;liblcd.c: 49: c = PORTD;
  3037  047C  1283               	bcf	status, 5	;RP0=0, select bank0
  3038  047D  1303               	bcf	status, 6	;RP1=0, select bank0
  3039  047E  0808               	movf	(8),w	;volatile
  3040  047F  00A0               	movwf	(lcd_busy@c)
  3041                           	
  3042  0480                     l30001064:	
  3043                           	line	50
  3044                           ;liblcd.c: 50: RD6 = 0;
  3045  0480  1308               	bcf	(70/8),(70)&7
  3046                           	line	51
  3047                           ;liblcd.c: 51: Tempo_us(5);
  3048  0481  3005               	movlw	low(05h)
  3049  0482  00F6               	movwf	(?_Tempo_us)
  3050  0483  3000               	movlw	high(05h)
  3051  0484  00F7               	movwf	((?_Tempo_us))+1
  3052  0485  120A  118A  24FC   	fcall	_Tempo_us
              120A  118A         
  3053                           	
  3054  048A                     l30001065:	
  3055                           	line	52
  3056                           ;liblcd.c: 52: }while((c & 0x08) == 0x08);
  3057  048A  1283               	bcf	status, 5	;RP0=0, select bank0
  3058  048B  1303               	bcf	status, 6	;RP1=0, select bank0
  3059  048C  19A0               	btfsc	(lcd_busy@c),(3)&7
  3060  048D  2C8F               	goto	u1031
  3061  048E  2C90               	goto	u1030
  3062  048F                     u1031:
  3063  048F  2C72               	goto	l30001061
  3064  0490                     u1030:
  3065                           	
  3066  0490                     l30001066:	
  3067                           	line	53
  3068                           ;liblcd.c: 53: TRISD = 0x00;
  3069  0490  1003               	clrc
  3070  0491  3000               	movlw	0
  3071  0492  1803               	btfsc	status,0
  3072  0493  3001               	movlw	1
  3073  0494  1683               	bsf	status, 5	;RP0=1, select bank1
  3074  0495  1303               	bcf	status, 6	;RP1=0, select bank1
  3075  0496  0088               	movwf	(136)^080h	;volatile
  3076                           	
  3077  0497                     l30001067:	
  3078                           	line	54
  3079                           ;liblcd.c: 54: RB3 = 0;
  3080  0497  1283               	bcf	status, 5	;RP0=0, select bank0
  3081  0498  1303               	bcf	status, 6	;RP1=0, select bank0
  3082  0499  1186               	bcf	(51/8),(51)&7
  3083                           	
  3084  049A                     l51:	
  3085  049A  0008               	return
  3086                           	opt stack 0
  3087                           GLOBAL	__end_of_lcd_busy
  3088  049B                     	__end_of_lcd_busy:
  3089                           ; =============== function _lcd_busy ends ============
  3090                           
  3091                           psect	text133,local,class=CODE,delta=2
  3092                           global __ptext133
  3093  04FC                     __ptext133:
  3094                           	line	55
  3095                           	signat	_lcd_busy,88
  3096                           	global	_Tempo_us
  3097                           
  3098                           ; *************** function _Tempo_us *****************
  3099                           ; Defined at:
  3100                           ;		line 5 in file "H:\MicroControleur\Projet\liblcd.c"
  3101                           ; Parameters:    Size  Location     Type
  3102                           ;  nb_us           2    0[COMMON] unsigned short 
  3103                           ; Auto vars:     Size  Location     Type
  3104                           ;		None
  3105                           ; Return value:  Size  Location     Type
  3106                           ;		None               void
  3107                           ; Registers used:
  3108                           ;		wreg, status,2, status,0
  3109                           ; Tracked objects:
  3110                           ;		On entry : 0/0
  3111                           ;		On exit  : 0/0
  3112                           ;		Unchanged: 0/0
  3113                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3114                           ;      Locals:         2       0       0       0       0
  3115                           ;      Temp:     0
  3116                           ;      Total:    2
  3117                           ; This function calls:
  3118                           ;		Nothing
  3119                           ; This function is called by:
  3120                           ;		_affichageHeure
  3121                           ;		_reglage
  3122                           ;		_main
  3123                           ;		_lcd_init
  3124                           ;		_lcd_busy
  3125                           ;		_lcd_write_instr
  3126                           ;		_lcd_putch
  3127                           ; This function uses a non-reentrant model
  3128                           ; 
  3129                           psect	text133
  3130                           	file	"H:\MicroControleur\Projet\liblcd.c"
  3131                           	line	5
  3132                           	global	__size_of_Tempo_us
  3133  0019                     	__size_of_Tempo_us	equ	__end_of_Tempo_us-_Tempo_us
  3134                           ;liblcd.c: 4: void Tempo_us(unsigned short nb_us)
  3135                           ;liblcd.c: 5: {
  3136                           	
  3137  04FC                     _Tempo_us:	
  3138                           	opt stack 1
  3139                           ; Regs used in _Tempo_us: [wreg+status,2+status,0]
  3140                           	line	6
  3141                           	
  3142  04FC                     l30001105:	
  3143                           ;liblcd.c: 6: PR2 = 0x20;
  3144  04FC  3020               	movlw	(020h)
  3145  04FD  1683               	bsf	status, 5	;RP0=1, select bank1
  3146  04FE  1303               	bcf	status, 6	;RP1=0, select bank1
  3147  04FF  0092               	movwf	(146)^080h	;volatile
  3148                           	
  3149  0500                     l30001106:	
  3150                           	line	7
  3151                           ;liblcd.c: 7: for(;nb_us > 0;nb_us--)
  3152  0500  0877               	movf	((Tempo_us@nb_us+1)),w
  3153  0501  0476               	iorwf	((Tempo_us@nb_us)),w
  3154  0502  1D03               	skipz
  3155  0503  2D05               	goto	u1101
  3156  0504  2D06               	goto	u1100
  3157  0505                     u1101:
  3158  0505  2D07               	goto	l47
  3159  0506                     u1100:
  3160  0506  2D14               	goto	l43
  3161                           	
  3162  0507                     l47:	
  3163                           	line	9
  3164  0507  1283               	bcf	status, 5	;RP0=0, select bank0
  3165  0508  1C8C               	btfss	(97/8),(97)&7
  3166  0509  2D0B               	goto	u1111
  3167  050A  2D0C               	goto	u1110
  3168  050B                     u1111:
  3169  050B  2D07               	goto	l47
  3170  050C                     u1110:
  3171                           	
  3172  050C                     l49:	
  3173                           	line	10
  3174                           ;liblcd.c: 10: TMR2IF = 0;
  3175  050C  108C               	bcf	(97/8),(97)&7
  3176                           	
  3177  050D                     l30001108:	
  3178                           	line	7
  3179  050D  3001               	movlw	low(01h)
  3180  050E  02F6               	subwf	(Tempo_us@nb_us),f
  3181  050F  3000               	movlw	high(01h)
  3182  0510  1C03               	skipc
  3183  0511  03F7               	decf	(Tempo_us@nb_us+1),f
  3184  0512  02F7               	subwf	(Tempo_us@nb_us+1),f
  3185  0513  2D00               	goto	l30001106
  3186                           	
  3187  0514                     l43:	
  3188  0514  0008               	return
  3189                           	opt stack 0
  3190                           GLOBAL	__end_of_Tempo_us
  3191  0515                     	__end_of_Tempo_us:
  3192                           ; =============== function _Tempo_us ends ============
  3193                           
  3194                           psect	text134,local,class=CODE,delta=2
  3195                           global __ptext134
  3196  049B                     __ptext134:
  3197                           	line	14
  3198                           	signat	_Tempo_us,4216
  3199                           	global	_timer
  3200                           
  3201                           ; *************** function _timer *****************
  3202                           ; Defined at:
  3203                           ;		line 186 in file "H:\MicroControleur\Projet\test_led.c"
  3204                           ; Parameters:    Size  Location     Type
  3205                           ;		None
  3206                           ; Auto vars:     Size  Location     Type
  3207                           ;		None
  3208                           ; Return value:  Size  Location     Type
  3209                           ;		None               void
  3210                           ; Registers used:
  3211                           ;		wreg, status,2, status,0, pclath, cstack
  3212                           ; Tracked objects:
  3213                           ;		On entry : 0/0
  3214                           ;		On exit  : 0/0
  3215                           ;		Unchanged: 0/0
  3216                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217                           ;      Locals:         0       4       0       0       0
  3218                           ;      Temp:     4
  3219                           ;      Total:    4
  3220                           ; This function calls:
  3221                           ;		_heartBeat
  3222                           ;		_horloge
  3223                           ; This function is called by:
  3224                           ;		Interrupt level 1
  3225                           ; This function uses a non-reentrant model
  3226                           ; 
  3227                           psect	text134
  3228                           	file	"H:\MicroControleur\Projet\test_led.c"
  3229                           	line	186
  3230                           	global	__size_of_timer
  3231  0026                     	__size_of_timer	equ	__end_of_timer-_timer
  3232                           ;test_led.c: 185: void interrupt timer(void)
  3233                           ;test_led.c: 186: {
  3234                           	
  3235  049B                     _timer:	
  3236                           	opt stack 3
  3237                           ; Regs used in _timer: [wreg+status,2+status,0+pclath+cstack]
  3238                           psect	intentry,class=CODE,delta=2
  3239                           global __pintentry
  3240  0004                     __pintentry:
  3241                           global interrupt_function
  3242  0004                     interrupt_function:
  3243                           	global saved_w
  3244  007F                     	saved_w	set	btemp+1
  3245  0004  00FF               	movwf	saved_w
  3246  0005  0803               	movf	status,w
  3247  0006  1283               	bcf	status, 5	;RP0=0, select bank0
  3248  0007  1303               	bcf	status, 6	;RP1=0, select bank0
  3249  0008  00AB               	movwf	(??_timer+0)
  3250  0009  0804               	movf	fsr0,w
  3251  000A  00AC               	movwf	(??_timer+1)
  3252  000B  080A               	movf	pclath,w
  3253  000C  00AD               	movwf	(??_timer+2)
  3254  000D  087E               	movf	btemp+0,w
  3255  000E  00AE               	movwf	(??_timer+3)
  3256  000F  120A  118A  2C9B   	ljmp	_timer
  3257                           psect	text134
  3258                           	line	187
  3259                           	
  3260  049B                     i1l30000957:	
  3261                           ;test_led.c: 187: if(TMR1IF == 1)
  3262  049B  1C0C               	btfss	(96/8),(96)&7
  3263  049C  2C9E               	goto	u84_21
  3264  049D  2C9F               	goto	u84_20
  3265  049E                     u84_21:
  3266  049E  2CB5               	goto	i1l30000961
  3267  049F                     u84_20:
  3268                           	
  3269  049F                     i1l30000958:	
  3270                           	line	189
  3271                           ;test_led.c: 188: {
  3272                           ;test_led.c: 189: TMR1L = 0xFF;
  3273  049F  30FF               	movlw	(0FFh)
  3274  04A0  008E               	movwf	(14)	;volatile
  3275                           	line	190
  3276                           ;test_led.c: 190: TMR1H = 0x7F;
  3277  04A1  307F               	movlw	(07Fh)
  3278  04A2  008F               	movwf	(15)	;volatile
  3279                           	
  3280  04A3                     i1l30000959:	
  3281                           	line	191
  3282                           ;test_led.c: 191: heartBeat();
  3283  04A3  120A  118A  24E2   	fcall	_heartBeat
              120A  118A         
  3284                           	
  3285  04A8                     i1l30000960:	
  3286                           	line	192
  3287                           ;test_led.c: 192: horloge();
  3288  04A8  120A  118A  2365   	fcall	_horloge
              120A  118A         
  3289                           	line	193
  3290                           ;test_led.c: 193: temp++;
  3291  04AD  3001               	movlw	low(01h)
  3292  04AE  1283               	bcf	status, 5	;RP0=0, select bank0
  3293  04AF  1303               	bcf	status, 6	;RP1=0, select bank0
  3294  04B0  07B1               	addwf	(_temp),f
  3295  04B1  1803               	skipnc
  3296  04B2  0AB2               	incf	(_temp+1),f
  3297  04B3  3000               	movlw	high(01h)
  3298  04B4  07B2               	addwf	(_temp+1),f
  3299                           	
  3300  04B5                     i1l30000961:	
  3301                           	line	195
  3302                           ;test_led.c: 194: }
  3303                           ;test_led.c: 195: TMR1IF = 0;
  3304  04B5  100C               	bcf	(96/8),(96)&7
  3305                           	
  3306  04B6                     i1l41:	
  3307  04B6  082E               	movf	(??_timer+3),w
  3308  04B7  00FE               	movwf	btemp+0
  3309  04B8  082D               	movf	(??_timer+2),w
  3310  04B9  008A               	movwf	pclath
  3311  04BA  082C               	movf	(??_timer+1),w
  3312  04BB  0084               	movwf	fsr0
  3313  04BC  082B               	movf	(??_timer+0),w
  3314  04BD  0083               	movwf	status
  3315  04BE  0EFF               	swapf	saved_w,f
  3316  04BF  0E7F               	swapf	saved_w,w
  3317  04C0  0009               	retfie
  3318                           	opt stack 0
  3319                           GLOBAL	__end_of_timer
  3320  04C1                     	__end_of_timer:
  3321                           ; =============== function _timer ends ============
  3322                           
  3323                           psect	text135,local,class=CODE,delta=2
  3324                           global __ptext135
  3325  0365                     __ptext135:
  3326                           	line	196
  3327                           	signat	_timer,88
  3328                           	global	_horloge
  3329                           
  3330                           ; *************** function _horloge *****************
  3331                           ; Defined at:
  3332                           ;		line 40 in file "H:\MicroControleur\Projet\test_led.c"
  3333                           ; Parameters:    Size  Location     Type
  3334                           ;		None
  3335                           ; Auto vars:     Size  Location     Type
  3336                           ;		None
  3337                           ; Return value:  Size  Location     Type
  3338                           ;		None               void
  3339                           ; Registers used:
  3340                           ;		wreg
  3341                           ; Tracked objects:
  3342                           ;		On entry : 0/0
  3343                           ;		On exit  : 0/0
  3344                           ;		Unchanged: 0/0
  3345                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346                           ;      Locals:         0       1       0       0       0
  3347                           ;      Temp:     1
  3348                           ;      Total:    1
  3349                           ; This function calls:
  3350                           ;		Nothing
  3351                           ; This function is called by:
  3352                           ;		_timer
  3353                           ; This function uses a non-reentrant model
  3354                           ; 
  3355                           psect	text135
  3356                           	file	"H:\MicroControleur\Projet\test_led.c"
  3357                           	line	40
  3358                           	global	__size_of_horloge
  3359  004C                     	__size_of_horloge	equ	__end_of_horloge-_horloge
  3360                           ;test_led.c: 39: void horloge(void)
  3361                           ;test_led.c: 40: {
  3362                           	
  3363  0365                     _horloge:	
  3364                           	opt stack 2
  3365                           ; Regs used in _horloge: [wreg]
  3366                           	line	41
  3367                           	
  3368  0365                     i1l30000953:	
  3369                           ;test_led.c: 41: seconde++;
  3370  0365  3001               	movlw	low(01h)
  3371  0366  1283               	bcf	status, 5	;RP0=0, select bank0
  3372  0367  1303               	bcf	status, 6	;RP1=0, select bank0
  3373  0368  07AF               	addwf	(_seconde),f
  3374  0369  1803               	skipnc
  3375  036A  0AB0               	incf	(_seconde+1),f
  3376  036B  3000               	movlw	high(01h)
  3377  036C  07B0               	addwf	(_seconde+1),f
  3378                           	line	42
  3379                           ;test_led.c: 42: if(seconde > 59)
  3380  036D  0830               	movf	(_seconde+1),w
  3381  036E  3A80               	xorlw	80h
  3382  036F  00A9               	movwf	(??_horloge+0+0)
  3383  0370  3080               	movlw	(high(03Ch))^80h
  3384  0371  0229               	subwf	(??_horloge+0+0),w
  3385  0372  1D03               	skipz
  3386  0373  2B76               	goto	u81_25
  3387  0374  303C               	movlw	low(03Ch)
  3388  0375  022F               	subwf	(_seconde),w
  3389  0376                     u81_25:
  3390                           
  3391  0376  1C03               	skipc
  3392  0377  2B79               	goto	u81_21
  3393  0378  2B7A               	goto	u81_20
  3394  0379                     u81_21:
  3395  0379  2BB0               	goto	i1l2
  3396  037A                     u81_20:
  3397                           	
  3398  037A                     i1l30000954:	
  3399                           	line	44
  3400                           ;test_led.c: 43: {
  3401                           ;test_led.c: 44: seconde = 0;
  3402  037A  3000               	movlw	low(0)
  3403  037B  1283               	bcf	status, 5	;RP0=0, select bank0
  3404  037C  1303               	bcf	status, 6	;RP1=0, select bank0
  3405  037D  00AF               	movwf	(_seconde)
  3406  037E  3000               	movlw	high(0)
  3407  037F  00B0               	movwf	((_seconde))+1
  3408                           	line	45
  3409                           ;test_led.c: 45: minute++;
  3410  0380  3001               	movlw	low(01h)
  3411  0381  07F2               	addwf	(_minute),f
  3412  0382  1803               	skipnc
  3413  0383  0AF3               	incf	(_minute+1),f
  3414  0384  3000               	movlw	high(01h)
  3415  0385  07F3               	addwf	(_minute+1),f
  3416                           	line	46
  3417                           ;test_led.c: 46: if(minute > 59)
  3418  0386  0873               	movf	(_minute+1),w
  3419  0387  3A80               	xorlw	80h
  3420  0388  00A9               	movwf	(??_horloge+0+0)
  3421  0389  3080               	movlw	(high(03Ch))^80h
  3422  038A  0229               	subwf	(??_horloge+0+0),w
  3423  038B  1D03               	skipz
  3424  038C  2B8F               	goto	u82_25
  3425  038D  303C               	movlw	low(03Ch)
  3426  038E  0272               	subwf	(_minute),w
  3427  038F                     u82_25:
  3428                           
  3429  038F  1C03               	skipc
  3430  0390  2B92               	goto	u82_21
  3431  0391  2B93               	goto	u82_20
  3432  0392                     u82_21:
  3433  0392  2BB0               	goto	i1l2
  3434  0393                     u82_20:
  3435                           	
  3436  0393                     i1l30000955:	
  3437                           	line	48
  3438                           ;test_led.c: 47: {
  3439                           ;test_led.c: 48: minute = 0;
  3440  0393  3000               	movlw	low(0)
  3441  0394  00F2               	movwf	(_minute)
  3442  0395  3000               	movlw	high(0)
  3443  0396  00F3               	movwf	((_minute))+1
  3444                           	line	49
  3445                           ;test_led.c: 49: heure++;
  3446  0397  3001               	movlw	low(01h)
  3447  0398  07F0               	addwf	(_heure),f
  3448  0399  1803               	skipnc
  3449  039A  0AF1               	incf	(_heure+1),f
  3450  039B  3000               	movlw	high(01h)
  3451  039C  07F1               	addwf	(_heure+1),f
  3452                           	line	50
  3453                           ;test_led.c: 50: if(heure > 23)
  3454  039D  0871               	movf	(_heure+1),w
  3455  039E  3A80               	xorlw	80h
  3456  039F  1283               	bcf	status, 5	;RP0=0, select bank0
  3457  03A0  1303               	bcf	status, 6	;RP1=0, select bank0
  3458  03A1  00A9               	movwf	(??_horloge+0+0)
  3459  03A2  3080               	movlw	(high(018h))^80h
  3460  03A3  0229               	subwf	(??_horloge+0+0),w
  3461  03A4  1D03               	skipz
  3462  03A5  2BA8               	goto	u83_25
  3463  03A6  3018               	movlw	low(018h)
  3464  03A7  0270               	subwf	(_heure),w
  3465  03A8                     u83_25:
  3466                           
  3467  03A8  1C03               	skipc
  3468  03A9  2BAB               	goto	u83_21
  3469  03AA  2BAC               	goto	u83_20
  3470  03AB                     u83_21:
  3471  03AB  2BB0               	goto	i1l2
  3472  03AC                     u83_20:
  3473                           	
  3474  03AC                     i1l30000956:	
  3475                           	line	51
  3476                           ;test_led.c: 51: heure = 0;
  3477  03AC  3000               	movlw	low(0)
  3478  03AD  00F0               	movwf	(_heure)
  3479  03AE  3000               	movlw	high(0)
  3480  03AF  00F1               	movwf	((_heure))+1
  3481                           	
  3482  03B0                     i1l2:	
  3483  03B0  0008               	return
  3484                           	opt stack 0
  3485                           GLOBAL	__end_of_horloge
  3486  03B1                     	__end_of_horloge:
  3487                           ; =============== function _horloge ends ============
  3488                           
  3489                           psect	text136,local,class=CODE,delta=2
  3490                           global __ptext136
  3491  04E2                     __ptext136:
  3492                           	line	54
  3493                           	signat	_horloge,88
  3494                           	global	_heartBeat
  3495                           
  3496                           ; *************** function _heartBeat *****************
  3497                           ; Defined at:
  3498                           ;		line 177 in file "H:\MicroControleur\Projet\test_led.c"
  3499                           ; Parameters:    Size  Location     Type
  3500                           ;		None
  3501                           ; Auto vars:     Size  Location     Type
  3502                           ;		None
  3503                           ; Return value:  Size  Location     Type
  3504                           ;		None               void
  3505                           ; Registers used:
  3506                           ;		wreg, status,2, status,0
  3507                           ; Tracked objects:
  3508                           ;		On entry : 0/0
  3509                           ;		On exit  : 0/0
  3510                           ;		Unchanged: 0/0
  3511                           ; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512                           ;      Locals:         0       2       0       0       0
  3513                           ;      Temp:     2
  3514                           ;      Total:    2
  3515                           ; This function calls:
  3516                           ;		Nothing
  3517                           ; This function is called by:
  3518                           ;		_timer
  3519                           ; This function uses a non-reentrant model
  3520                           ; 
  3521                           psect	text136
  3522                           	file	"H:\MicroControleur\Projet\test_led.c"
  3523                           	line	177
  3524                           	global	__size_of_heartBeat
  3525  001A                     	__size_of_heartBeat	equ	__end_of_heartBeat-_heartBeat
  3526                           ;test_led.c: 176: void heartBeat(void)
  3527                           ;test_led.c: 177: {
  3528                           	
  3529  04E2                     _heartBeat:	
  3530                           	opt stack 2
  3531                           ; Regs used in _heartBeat: [wreg+status,2+status,0]
  3532                           	line	179
  3533                           	
  3534  04E2                     i1l30000962:	
  3535                           ;test_led.c: 178: static unsigned short n = 0;
  3536                           ;test_led.c: 179: if(n == 0)
  3537  04E2  1283               	bcf	status, 5	;RP0=0, select bank0
  3538  04E3  1303               	bcf	status, 6	;RP1=0, select bank0
  3539  04E4  0836               	movf	((heartBeat@n+1)),w
  3540  04E5  0435               	iorwf	((heartBeat@n)),w
  3541  04E6  1D03               	skipz
  3542  04E7  2CE9               	goto	u85_21
  3543  04E8  2CEA               	goto	u85_20
  3544  04E9                     u85_21:
  3545  04E9  2CEC               	goto	i1l39
  3546  04EA                     u85_20:
  3547                           	
  3548  04EA                     i1l30000963:	
  3549                           	line	180
  3550                           ;test_led.c: 180: RB1 = 1;
  3551  04EA  1486               	bsf	(49/8),(49)&7
  3552  04EB  2CED               	goto	i1l30000964
  3553                           	
  3554  04EC                     i1l39:	
  3555                           	line	181
  3556                           ;test_led.c: 181: else RB1 = 0;
  3557  04EC  1086               	bcf	(49/8),(49)&7
  3558                           	
  3559  04ED                     i1l30000964:	
  3560                           	line	182
  3561                           ;test_led.c: 182: n = (n + 1) % 2;
  3562  04ED  0835               	movf	(heartBeat@n),w
  3563  04EE  3E01               	addlw	low(01h)
  3564  04EF  00A9               	movwf	(??_heartBeat+0+0)
  3565  04F0  0836               	movf	(heartBeat@n+1),w
  3566  04F1  1803               	skipnc
  3567  04F2  3E01               	addlw	1
  3568  04F3  3E00               	addlw	high(01h)
  3569  04F4  00AA               	movwf	1+(??_heartBeat+0+0)
  3570  04F5  3001               	movlw	low(01h)
  3571  04F6  0529               	andwf	0+(??_heartBeat+0+0),w
  3572  04F7  00B5               	movwf	(heartBeat@n)
  3573  04F8  3000               	movlw	high(01h)
  3574  04F9  052A               	andwf	1+(??_heartBeat+0+0),w
  3575  04FA  00B6               	movwf	1+(heartBeat@n)
  3576                           	
  3577  04FB                     i1l38:	
  3578  04FB  0008               	return
  3579                           	opt stack 0
  3580                           GLOBAL	__end_of_heartBeat
  3581  04FC                     	__end_of_heartBeat:
  3582                           ; =============== function _heartBeat ends ============
  3583                           
  3584                           psect	text137,local,class=CODE,delta=2
  3585                           global __ptext137
  3586  0537                     __ptext137:
  3587                           	line	183
  3588                           	signat	_heartBeat,88
  3589                           	global	btemp
  3590  007E                     	btemp set 07Eh


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Fri May 28 12:35:59 2010

        ___awdiv@dividend 0024                         l1 03FA                         l6 0135  
                       l8 008A  __size_of_lcd_write_instr 0036                  _Tempo_us 04FC  
                      l10 00E9                        _DA 04A5                        _BF 04A0  
                      _DC 0019                        l16 022B                        l32 0218  
                      l24 018C                        l50 0308                        l18 017C  
                      l43 0514                        l51 049A                        l28 01C6  
                      l47 0507                        l55 0466                        l56 0430  
                      l49 050C                        l65 0536                        l66 052F  
                      _PD 001B                        _RD 0C60                        _UA 04A1  
                      _TO 001C                        _RW 04A2                        _WR 0C61  
               ?_Tempo_us 0076            __size_of_timer 0026               __pbssCOMMON 0070  
              ??_Tempo_us 0076                       l216 029D                       l218 024C  
                     _CM0 04E0                       _CM1 04E1                       l296 0364  
                     _CM2 04E2                       _CKE 04A6                       _IBF 044F  
                     _CIS 04E3                       _CKP 00A4                       _GIE 005F  
                     _BOR 0470                       _RA0 0028                       _RA1 0029  
                     _RB0 0030                       _RA2 002A                       _RB1 0031  
                     _RA3 002B                       _RC0 0038                       _RB2 0032  
                     _RA4 002C                       _RC1 0039                       _RB3 0033  
                     _RA5 002D                       _RD0 0040                       _RC2 003A  
                     _RB4 0034                       _RD1 0041                       _RC3 003B  
                     _RB5 0035                       _RE0 0048                       _RD2 0042  
                     _RC4 003C                       _RB6 0036                       _RE1 0049  
                     _RD3 0043                       _RC5 003D                       _RB7 0037  
                     _RE2 004A                       _RD4 0044                       _RC6 003E  
                     _RD5 0045                       _RC7 003F                       _OBF 044E  
                     _RD6 0046                       _RD7 0047                       _FSR 0004  
                     _PCL 0002                       u500 033E                       u501 033D  
                     u510 0348                       _PS0 0408                       _PR2 0092  
                     u511 0347                       _PS1 0409                       _PS2 040A  
                     _PEN 048A                       _RP0 001D                       _IRP 001F  
                     _RP1 001E                       u530 035B                       u531 035A  
                     u515 0344                       u540 035F                       u460 0314  
                     u525 034F                       u461 0313                       i1l2 03B0  
                     u470 0320                       u471 031F                       u480 032B  
                     u481 032A                       _SEN 0488                       u910 013C  
                     u495 0330                       u911 013B                       _PSA 040B  
                     u920 0159                       u921 0158                       u930 015F  
                     u931 015E                       u940 0182                       u941 0181  
                     u925 0155                       u950 0192                       u951 0191  
                     u960 01A1                       _POR 0471                       u961 01A0  
                     _RX9 00C6                       u980 01CC                       u981 01CB  
                     u990 01DB                       _SMP 04A7                       u991 01DA  
                     u975 01A7                       _TX9 04C6                       fsr0 0004  
        __size_of___awdiv 0072          __size_of___awmod 005C                heartBeat@n 0035  
                    _ADIE 0466                      _ADIF 0066                      _ADFM 04FF  
                    _ADGO 00FA                      _ADON 00F8                      _CHS0 00FB  
                    _CHS1 00FC                      _CHS2 00FD                      _EEIE 046C  
                    _EEIF 006C                      _GCEN 048F                      _CMIE 046E  
                    _CMIF 006E                   ??_timer 002B                      _BRGH 04C2  
                    _T0IE 005D                      _T0IF 005A                      _CREN 00C4  
                    _T0CS 040D                      u1010 0214                      _FERR 00C2  
                    u1011 0213                      u1100 0506                      u1020 0227  
                    u1101 0505                      u1021 0226                      u1005 01E1  
                    u1110 050C                      u1030 0490                      u1111 050B  
                    u1031 048F                      u1015 0210                      u1200 028E  
                    u1120 0237                      u1201 028D                      u1121 0236  
                    u1025 0223                      u1210 0292                      u1130 0243  
                    u1050 0038                      u1131 0242                      u1051 0037  
                    u1140 0256                      u1060 0047                      _IBOV 044D  
                    _CVR0 04E8                      u1045 043F                      u1141 0255  
                    u1061 0046                      _CVR1 04E9                      u1070 0097  
                    _CVR2 04EA                      u1071 0096                      _CVR3 04EB  
                    u1160 0269                      u1080 00A6                      u1161 0268  
                    u1081 00A5                      u1065 0043                      u1155 025B  
                    _T0SE 040C                      _CSRC 04C7                      u1180 027A  
                    u1181 0279                      u1085 00A2                      _INDF 0000  
                    u1095 0409                      u1175 026A                      u1185 0276  
                    u1195 0282                      _PIE1 008C                      _PIE2 008D  
                    _CVRR 04ED                      _PEIE 005E                      _INTE 005C  
                    _INTF 0059                      _RBIE 005B                      _RBIF 0058  
                    i1l41 04B6                      _RCIE 0465                      _RCEN 048B  
                    _RCIF 0065                      i1l38 04FB                      i1l39 04EC  
                    _PCON 008E                      _PIR1 000C                      _PIR2 000D  
                    _OERR 00C1          ___awdiv@quotient 0022                      _RBPU 040F  
                    _RX9D 00C0                      _TMR0 0001                      _TMR2 0011  
                    _WCOL 00A7                      _SPEN 00C7                      _RSEN 0489  
                    _TX9D 04C0                      _SREN 00C5                      _TRMT 04C1  
                    _STOP 04A4                      _TXIE 0464                      _ZERO 001A  
                    _WREN 0C62                      _TXEN 04C5                      _TXIF 0064  
                    _SYNC 04C4         __size_of_Tempo_us 0019                  _lcd_home 0529  
                _lcd_busy 0467                  _lcd_init 029E          __size_of_horloge 004C  
            ___awdiv@sign 0021                 ?_lcd_home 0079                 ?_lcd_busy 0078  
               ?_lcd_init 0079          __size_of_reglage 00F6                      _main 04C1  
                    _init 03B1                      _mode 0074                      _temp 0031  
                    btemp 007E            _affichageHeure 0015                      start 0012  
              ??_lcd_home 0077                ??_lcd_busy 0076                ??_lcd_init 0077  
         ?_affichageHeure 007B         interrupt_function 0004       start_initialization 0515  
            ___awmod@sign 0077           _lcd_write_instr 0431          ??_affichageHeure 0079  
        ?_lcd_write_instr 0079           __end_of___awdiv 029E           __end_of___awmod 0365  
                 _CCP1CON 0017                   _CCP2CON 001D                   _ACKSTAT 048E  
                   l30017 0200                     l30018 01F8                     _C1INV 04E4  
                   _C2INV 04E5                     _C1OUT 04E6                     _C2OUT 04E7  
                   _ADCS0 00FE                     _ADCS1 00FF                     _ADCS2 04FE  
                   _ADDEN 00C3                     ?_main 007B                     _ACKEN 048C  
                   _ACKDT 048D         __size_of_lcd_home 0007                 __ptext121 0537  
               __ptext130 0309                 __ptext122 0136                 _heartBeat 04E2  
               __ptext131 0431                 __ptext123 0015                 __ptext132 0467  
               __ptext124 029E                     ?_init 0076                 __ptext133 04FC  
               __ptext125 03B1                 __ptext134 049B                 __ptext126 0530  
               __ptext135 0365                 __ptext127 022C                 __ptext136 04E2  
               __ptext128 03FB                 __ptext137 0537         __size_of_lcd_busy 0034  
               __ptext129 0529         __size_of_lcd_init 006B                     _BCLIE 046B  
                   _BCLIF 006B                     _CCP1X 00BD                     _CCP1Y 00BC  
                   _CCP2X 00ED                     _CCP2Y 00EC                     _EEADR 010D  
                   _CARRY 0018         __end_of_heartBeat 04FC                     _EEPGD 0C67  
              lcd_putch@c 0021                     _CMCON 009C                     _T1CON 0010  
                   _T2CON 0012                   _T1CKPS0 0084                   _T1CKPS1 0085  
                   _PCFG0 04F8                     _PCFG1 04F9                     _PCFG2 04FA  
                   _PCFG3 04FB                   _T2CKPS0 0090                   _T2CKPS1 0091  
                   _CVREN 04EF                     _CVROE 04EE                     _RCREG 001A  
                   _RCSTA 0018             __end_of_timer 04C1                     _TMR1H 000F  
                   _TMR1L 000E                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                   _T1OSCEN 0083                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _PSPIE 0467  
                   _PSPIF 0067         ??_lcd_write_instr 0078                     _START 04A3  
                   _SSPM0 00A0                 _lcd_clear 0530                     _SSPM1 00A1  
                   _SSPM2 00A2                     _SSPM3 00A3                     u81_20 037A  
                   u81_21 0379                     _TRISA 0085                     _TRISB 0086  
                   u81_25 0376                     _TRISC 0087                     _TRISD 0088  
                   _SSPIE 0463                     _TRISE 0089                     u82_20 0393  
                   _SSPIF 0063                     _SSPEN 00A5                     u82_21 0392  
                   u82_25 038F                     u83_20 03AC                     u83_21 03AB  
                   u83_25 03A8                     u84_20 049F                     u84_21 049E  
                   u85_20 04EA                     u85_21 04E9                     _SSPOV 00A6  
                   _WRERR 0C63                     _TXREG 0019         __end_of_lcd_clear 0537  
              ?_heartBeat 002B                     _TXSTA 0098           __end_of_horloge 03B1  
               _lcd_putch 03FB           __end_of_reglage 022C         __end_of_lcd_putch 0431  
  __end_of_affichageHeure 0136                ?_lcd_clear 0079            __pcstackCOMMON 0076  
                   _heure 0070                   _PSPMODE 044C                ?_lcd_putch 0079  
                 _SSPCON2 0091                     _timer 049B                   _SSPSTAT 0094  
                 _TOUTPS0 0093                   _TOUTPS1 0094                   _TOUTPS2 0095  
                 _TOUTPS3 0096               ??_heartBeat 0029                     pclath 000A  
                intlevel1 0004               ??_lcd_clear 0077                     status 0003  
                reglage@i 0037               ??_lcd_putch 0078           ___awdiv@divisor 0026  
           __size_of_main 0021                __pbssBANK0 002F             __size_of_init 004A  
                l30001010 03C0                  l30001011 03C2                  l30001100 041C  
                l30001020 03EA                  l30001012 03C4                  l30001101 041F  
                l30001021 03EE                  l30001013 03C8                  l30001102 0423  
                l30001110 022C                  l30001022 03F2                  l30001014 03CA  
                l30001103 0424                  l30001111 0233                  l30001023 03F6  
                l30001015 03D5                  l30001031 0136                  l30001104 042D  
                l30001120 0269                  l30001112 0237                  l30001016 03DA  
                l30001008 03B1                  l30001040 01A1                  l30001032 013C  
                l30001105 04FC                  l30001121 027A                  l30001113 023F  
                l30001017 03DE                  l30001009 03B9                  l30001041 01BC  
                l30001033 0145                  l30001106 0500                  l30001122 0280  
                l30001114 0243                  l30001018 03E0                  l30001050 0205  
                l30001042 01C1                  l30001034 014C                  l30001123 0281  
                l30001115 0248                  l30001019 03E4                  l30001051 0214  
                l30001043 01CC                  l30001035 0159                  l30001108 050D  
                l30001060 0471                  l30001124 0288                  l30001116 0256  
                l30001052 0227                  l30001044 01D5                  l30001036 015F  
                l30001061 0472                  l30001117 025A                  l30001125 028E  
                l30001045 01DB                  l30001037 0182                  l30001053 04C1  
         ___awdiv@counter 0020                  l30001062 0473                  l30001070 043C  
                l30001126 0292                  l30001118 0261                  l30001038 0192  
                l30001054 04CB                  l30001063 047C                  l30001071 0448  
                l30001127 0297                  l30001119 0265                  l30001039 019B  
                l30001055 04D0                  l30001064 0480                  l30001072 0449  
                l30001080 02AA                  l30001056 04D5                  l30001065 048A  
                l30001057 0467                  l30001073 0452                  l30001081 02AD  
                l30001049 01F7                  l30001066 0490                  l30001058 046A  
                l30001074 0455                  l30001082 0305                  l30001090 0097  
                l30001067 0497                  l30001059 046E                  l30001075 0459  
                l30001083 0530                  l30001091 00A6                  l30001076 045A  
                l30001068 0434                  l30001092 00B3                  l30001084 0015  
                l30001077 0463                  l30001069 0439                  l30001093 0125  
                l30001085 0031                  l30001094 0529                  l30001078 029E  
                l30001086 0038                  l30001095 03FE                  l30001079 02A1  
                l30001087 0047                  l30001096 0403                  l30001088 0054  
                l30001097 0406                  l30001089 0090                  l30001098 0412  
                l30001099 0413                  l30000881 0309                  l30000890 033A  
                l30000882 030E                  l30000891 033E                  l30000883 0314  
                l30000892 0348                  l30000884 031C                  l30000893 034E  
                l30000885 0320                  l30000894 0355                  l30000886 0325  
                l30000887 032B                  l30000895 035B                  l30000896 035F  
                l30000888 032F                  l30000897 0364                  l30000889 0336  
        __end_of_Tempo_us 0515                   ___awdiv 022C                   ___awmod 0309  
                ?___awdiv 0024                  ?___awmod 0020                 ??___awdiv 0076  
               ??___awmod 0076                    ??_main 0079                    ??_init 0076  
 __end_of_lcd_write_instr 0467                __pmaintext 04C1   __size_of_affichageHeure 0121  
                 _horloge 0365        __size_of_heartBeat 001A                   _reglage 0136  
                ?_horloge 002A                   _seconde 002F                  ?_reglage 0079  
              __pintentry 0004                 lcd_busy@c 0020                 ??_horloge 0029  
      __size_of_lcd_clear 0007                 ??_reglage 0024                    _ADCON0 001F  
                  _ADCON1 009F                    _CCP1M0 00B8                    _CCP1M1 00B9  
                  _CCP1M2 00BA                    _CCP1M3 00BB                    _CCP2M0 00E8  
                  _CCP2M1 00E9                    _CCP2M2 00EA                    _CCP2M3 00EB  
                  _CCP1IE 0462                    _CCP1IF 0062                    _CCP2IE 0468  
                  _CCP2IF 0068                    _ADRESH 001E                    _EEADRH 010F  
                  _ADRESL 009E                    _EEADRL 010D                    _EEDATA 010C  
                  _CCPR1H 0016                    _EEDATH 010E                    _CCPR2H 001C  
                  _CCPR1L 0015                    _CCPR2L 001B                    _EECON1 018C  
                  _EECON2 018D                    ?_timer 002F        __size_of_lcd_putch 0036  
            __end_of_main 04E2              __end_of_init 03FB                    _GODONE 00FA  
    end_of_initialization 0525                    _CVRCON 009D                    _T1SYNC 0082  
                  _INTEDG 040E                    _PCLATH 000A          __end_of_lcd_home 0530  
                  _INTCON 000B          __end_of_lcd_busy 049B          __end_of_lcd_init 0309  
           __pcstackBANK0 0020                    _TMR0IE 005D                    _TMR0IF 005A  
                  _TMR1IE 0460                    _TMR1IF 0060                    _TMR1CS 0081  
                  _TMR2IE 0461                    _TMR2IF 0061                    _OPTION 0081  
                  _TMR1ON 0080                    _TMR2ON 0092                    _SSPADD 0093  
                  _TRISA0 0428                    _TRISA1 0429                    _TRISB0 0430  
                  _TRISA2 042A                    _TRISB1 0431                    _TRISA3 042B  
                  _TRISC0 0438                    _TRISB2 0432                    _TRISA4 042C  
                  _TRISC1 0439                    _TRISB3 0433                    _TRISA5 042D  
                  _TRISD0 0440                    _TRISC2 043A                    _TRISB4 0434  
                  _TRISD1 0441                    _TRISC3 043B                    _TRISB5 0435  
                  _TRISE0 0448                    _TRISD2 0442                    _TRISC4 043C  
                  _TRISB6 0436                    _TRISE1 0449                    _TRISD3 0443  
                  _TRISC5 043D                    _TRISB7 0437                    _TRISE2 044A  
                  _TRISD4 0444                    _TRISC6 043E                    _TRISD5 0445  
                  _TRISC7 043F                    _TRISD6 0446                    _TRISD7 0447  
                  _STATUS 0003                    _SSPCON 0014                    _SSPBUF 0013  
         affichageHeure@i 0033             Tempo_us@nb_us 0076                i1l30000960 04A8  
              i1l30000953 0365                i1l30000961 04B5                i1l30000962 04E2  
              i1l30000954 037A                i1l30000963 04EA                i1l30000955 0393  
              i1l30000964 04ED                i1l30000956 03AC                i1l30000957 049B  
              i1l30000958 049F                i1l30000959 04A3                    _minute 0072  
        lcd_write_instr@c 0021                    saved_w 007F          ___awmod@dividend 0020  
         ___awmod@divisor 0022           ___awmod@counter 0078  
