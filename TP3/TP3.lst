

HI-TECH Software PIC LITE Macro Assembler V9.70 build 5239 
                                                                                               Tue May 11 19:53:10 2010

HI-TECH Software Omniscient Code Generator (Lite mode) build 5239
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 5239"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F84A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 3 "H:\MicroControleur\TP3\mes.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 3 "H:\MicroControleur\TP3\mes.c"
    45  2007  3FF2               	dw 0x3FFE&0x3FFB&0x3FF7 ;#
    46                           # 4 "H:\MicroControleur\TP3\mes.c"
    47                           	psect eeprom_data,class=EEDATA,delta=2,space=2 ;#
    48                           # 4 "H:\MicroControleur\TP3\mes.c"
    49  0000  0007 0060 00BE     	db	0x07,0x60,0xBE,0x8E,0xFE,0x66,0x00,0 ;#
              008E 00FE 0066     
              0000 0000          
    50                           	FNCALL	_main,_init
    51                           	FNCALL	_init,_eeprom_read
    52                           	FNROOT	_main
    53                           	FNCALL	_inter,_caractere
    54                           	FNCALL	_inter,_vitesse
    55                           	FNCALL	_inter,_tempo
    56                           	FNCALL	_inter,___awmod
    57                           	FNCALL	_vitesse,_eeprom_write
    58                           	FNCALL	intlevel1,_inter
    59                           	global	intlevel1
    60                           	FNROOT	intlevel1
    61                           	global	caractere@n
    62                           	global	inter@n
    63                           	global	_EEADR
    64                           psect	text44,local,class=CODE,delta=2
    65                           global __ptext44
    66  019E                     __ptext44:
    67  0009                     _EEADR  equ     9
    68                           	global	_EEDATA
    69  0008                     _EEDATA  equ     8
    70                           	global	_FSR
    71  0004                     _FSR  equ     4
    72                           	global	_INDF
    73  0000                     _INDF  equ     0
    74                           	global	_INTCON
    75  000B                     _INTCON  equ     11
    76                           	global	_PCL
    77  0002                     _PCL  equ     2
    78                           	global	_PCLATH
    79  000A                     _PCLATH  equ     10
    80                           	global	_PORTA
    81  0005                     _PORTA  equ     5
    82                           	global	_PORTB
    83  0006                     _PORTB  equ     6
    84                           	global	_RTCC
    85  0001                     _RTCC  equ     1
    86                           	global	_STATUS
    87  0003                     _STATUS  equ     3
    88                           	global	_TMR0
    89  0001                     _TMR0  equ     1
    90                           	global	_CARRY
    91  0018                     _CARRY  equ     24
    92                           	global	_DC
    93  0019                     _DC  equ     25
    94                           	global	_EEIE
    95  005E                     _EEIE  equ     94
    96                           	global	_GIE
    97  005F                     _GIE  equ     95
    98                           	global	_INT
    99  0030                     _INT  equ     48
   100                           	global	_INTE
   101  005C                     _INTE  equ     92
   102                           	global	_INTF
   103  0059                     _INTF  equ     89
   104                           	global	_PD
   105  001B                     _PD  equ     27
   106                           	global	_RA0
   107  0028                     _RA0  equ     40
   108                           	global	_RA1
   109  0029                     _RA1  equ     41
   110                           	global	_RA2
   111  002A                     _RA2  equ     42
   112                           	global	_RA3
   113  002B                     _RA3  equ     43
   114                           	global	_RA4
   115  002C                     _RA4  equ     44
   116                           	global	_RB0
   117  0030                     _RB0  equ     48
   118                           	global	_RB1
   119  0031                     _RB1  equ     49
   120                           	global	_RB2
   121  0032                     _RB2  equ     50
   122                           	global	_RB3
   123  0033                     _RB3  equ     51
   124                           	global	_RB4
   125  0034                     _RB4  equ     52
   126                           	global	_RB5
   127  0035                     _RB5  equ     53
   128                           	global	_RB6
   129  0036                     _RB6  equ     54
   130                           	global	_RB7
   131  0037                     _RB7  equ     55
   132                           	global	_RBIE
   133  005B                     _RBIE  equ     91
   134                           	global	_RBIF
   135  0058                     _RBIF  equ     88
   136                           	global	_RP0
   137  001D                     _RP0  equ     29
   138                           	global	_T0IE
   139  005D                     _T0IE  equ     93
   140                           	global	_T0IF
   141  005A                     _T0IF  equ     90
   142                           	global	_TO
   143  001C                     _TO  equ     28
   144                           	global	_ZERO
   145  001A                     _ZERO  equ     26
   146                           	global	_EECON1
   147  0088                     _EECON1  equ     136
   148                           	global	_EECON2
   149  0089                     _EECON2  equ     137
   150                           	global	_OPTION
   151  0081                     _OPTION  equ     129
   152                           	global	_TRISA
   153  0085                     _TRISA  equ     133
   154                           	global	_TRISB
   155  0086                     _TRISB  equ     134
   156                           	global	_EEIF
   157  0444                     _EEIF  equ     1092
   158                           	global	_INTEDG
   159  040E                     _INTEDG  equ     1038
   160                           	global	_PS0
   161  0408                     _PS0  equ     1032
   162                           	global	_PS1
   163  0409                     _PS1  equ     1033
   164                           	global	_PS2
   165  040A                     _PS2  equ     1034
   166                           	global	_PSA
   167  040B                     _PSA  equ     1035
   168                           	global	_RBPU
   169  040F                     _RBPU  equ     1039
   170                           	global	_RD
   171  0440                     _RD  equ     1088
   172                           	global	_T0CS
   173  040D                     _T0CS  equ     1037
   174                           	global	_T0SE
   175  040C                     _T0SE  equ     1036
   176                           	global	_TRISA0
   177  0428                     _TRISA0  equ     1064
   178                           	global	_TRISA1
   179  0429                     _TRISA1  equ     1065
   180                           	global	_TRISA2
   181  042A                     _TRISA2  equ     1066
   182                           	global	_TRISA3
   183  042B                     _TRISA3  equ     1067
   184                           	global	_TRISA4
   185  042C                     _TRISA4  equ     1068
   186                           	global	_TRISB0
   187  0430                     _TRISB0  equ     1072
   188                           	global	_TRISB1
   189  0431                     _TRISB1  equ     1073
   190                           	global	_TRISB2
   191  0432                     _TRISB2  equ     1074
   192                           	global	_TRISB3
   193  0433                     _TRISB3  equ     1075
   194                           	global	_TRISB4
   195  0434                     _TRISB4  equ     1076
   196                           	global	_TRISB5
   197  0435                     _TRISB5  equ     1077
   198                           	global	_TRISB6
   199  0436                     _TRISB6  equ     1078
   200                           	global	_TRISB7
   201  0437                     _TRISB7  equ     1079
   202                           	global	_WR
   203  0441                     _WR  equ     1089
   204                           	global	_WREN
   205  0442                     _WREN  equ     1090
   206                           	global	_WRERR
   207  0443                     _WRERR  equ     1091
   208                           	file	"TP3.as"
   209                           	line	#
   210                           psect cinit,class=CODE,delta=2
   211                           global start_initialization
   212  0195                     start_initialization:
   213                           
   214                           psect	bssBANK0,class=BANK0,space=1
   215                           global __pbssBANK0
   216  001B                     __pbssBANK0:
   217  001B                     caractere@n:
   218  001B                            ds      2
   219                           
   220  001D                     inter@n:
   221  001D                            ds      2
   222                           
   223                           ; Clear objects allocated to BANK0
   224                           psect cinit,class=CODE,delta=2
   225  0195  019B               	clrf	((__pbssBANK0)+0)&07Fh
   226+ 0196  019C               	clrf	((__pbssBANK0)+1)&07Fh
   227+ 0197  019D               	clrf	((__pbssBANK0)+2)&07Fh
   228+ 0198  019E               	clrf	((__pbssBANK0)+3)&07Fh
   229+                          psect cinit,class=CODE,delta=2
   230+                          global end_of_initialization
   231+                          
   232+                          ;End of C runtime variable initationation code
   233+                          
   234+ 0199                     end_of_initialization:
   235+ 0199  0183               clrf status
   236  019A  299B               ljmp _main	;jump to C main() function
   237+                          psect	cstackCOMMON,class=COMMON,space=1
   238+                          global __pcstackCOMMON
   239+ 004E                     __pcstackCOMMON:
   240+                          	global	??_vitesse
   241+ 004E                     ??_vitesse: ;@ 0x0
   242+                          	global	??_init
   243+ 004E                     ??_init: ;@ 0x0
   244+                          	global	??_caractere
   245+ 004E                     ??_caractere: ;@ 0x0
   246+                          	global	??_main
   247+ 004E                     ??_main: ;@ 0x0
   248                           psect	cstackBANK0,class=BANK0,space=1
   249                           global __pcstackBANK0
   250  000C                     __pcstackBANK0:
   251+                          	global	??_eeprom_read
   252+ 000C                     ??_eeprom_read: ;@ 0x0
   253  000C                     	ds	3
   254+                          	global	eeprom_read@addr
   255+ 000F                     eeprom_read@addr:	; 1 bytes @ 0x3
   256+ 000F                     	ds	1
   257+                          	global	??_tempo
   258+ 0010                     ??_tempo: ;@ 0x4
   259+                          	global	?_caractere
   260+ 0010                     ?_caractere: ;@ 0x4
   261+                          	global	??___awmod
   262+ 0010                     ??___awmod: ;@ 0x4
   263                           	global	?_init
   264  0010                     ?_init: ;@ 0x4
   265+                          	global	??_eeprom_write
   266+ 0010                     ??_eeprom_write: ;@ 0x4
   267+                          	global	?_eeprom_read
   268+ 0010                     ?_eeprom_read: ;@ 0x4
   269+                          	global	?_main
   270+ 0010                     ?_main: ;@ 0x4
   271+ 0010                     	ds	1
   272+                          	global	eeprom_write@addr
   273+ 0011                     eeprom_write@addr:	; 1 bytes @ 0x5
   274                           	global	___awmod@sign
   275  0011                     ___awmod@sign:	; 1 bytes @ 0x5
   276+                          	global	tempo@i
   277+ 0011                     tempo@i:	; 4 bytes @ 0x5
   278  0011                     	ds	1
   279+                          	global	?_eeprom_write
   280+ 0012                     ?_eeprom_write: ;@ 0x6
   281+                          	global	eeprom_write@value
   282+ 0012                     eeprom_write@value:	; 1 bytes @ 0x6
   283+                          	global	___awmod@counter
   284+ 0012                     ___awmod@counter:	; 1 bytes @ 0x6
   285+ 0012                     	ds	1
   286+                          	global	?_vitesse
   287+ 0013                     ?_vitesse: ;@ 0x7
   288                           	global	?___awmod
   289  0013                     ?___awmod: ;@ 0x7
   290+                          	global	___awmod@dividend
   291+ 0013                     ___awmod@dividend:	; 2 bytes @ 0x7
   292+ 0013                     	ds	2
   293+                          	global	?_tempo
   294+ 0015                     ?_tempo: ;@ 0x9
   295+                          	global	___awmod@divisor
   296+ 0015                     ___awmod@divisor:	; 2 bytes @ 0x9
   297+ 0015                     	ds	2
   298                           	global	??_inter
   299  0017                     ??_inter: ;@ 0xB
   300+ 0017                     	ds	4
   301                           	global	?_inter
   302  001B                     ?_inter: ;@ 0xF
   303+                          ;Data sizes: Strings 0, constant 0, data 0, bss 4, persistent 0 stack 0
   304+                          ;Auto spaces:   Size  Autos    Used
   305+                          ; COMMON           0      0       0
   306+                          ; BANK0           66     15      19
   307+                          
   308+                          
   309+                          ;Pointer list with targets:
   310+                          
   311+                          ;?___awmod	int  size(1); Largest target is 0
   312+                          
   313+                          
   314+                          ;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   315+                          
   316+                          
   317+                          ;Call graph:                      Base Space Used Autos Args Refs Density
   318+                          ;_main                                                0    0   10   0.00
   319+                          ;               _init
   320+                          ;  _init                                              0    0   10   0.00
   321+                          ;        _eeprom_read
   322+                          ;    _eeprom_read                                     4    0   10   0.00
   323+                          ;                                    0 BANK0    4
   324+                          ; Estimated maximum call depth 2
   325+                          ;_inter                                               4    0  170   0.00
   326+                          ;                                   11 BANK0    4
   327+                          ;          _caractere
   328+                          ;            _vitesse
   329+                          ;              _tempo
   330+                          ;            ___awmod
   331+                          ;  _tempo                                             5    0   20   0.00
   332+                          ;                                    4 BANK0    5
   333+                          ;  ___awmod                                           3    4  130   0.00
   334+                          ;                                    4 BANK0    7
   335+                          ;  _caractere                                         0    0    0   0.00
   336+                          ;  _vitesse                                           0    0   20   0.00
   337+                          ;       _eeprom_write
   338+                          ;    _eeprom_write                                    2    1   20   0.00
   339+                          ;                                    4 BANK0    3
   340+                          ; Estimated maximum call depth 2
   341+                          ; Address spaces:
   342+                          
   343+                          ;Name               Size   Autos  Total    Cost      Usage
   344+                          ;BITCOMMON            0      0       0       0        0.0%
   345+                          ;NULL                 0      0       0       0        0.0%
   346+                          ;CODE                 0      0       0       0        0.0%
   347+                          ;COMMON               0      0       0       1        0.0%
   348+                          ;SFR0                 0      0       0       1        0.0%
   349+                          ;BITSFR0              0      0       0       1        0.0%
   350+                          ;SFR1                 0      0       0       2        0.0%
   351+                          ;BITSFR1              0      0       0       2        0.0%
   352+                          ;STACK                0      0       0       2        0.0%
   353+                          ;BITBANK0            42      0       0       3        0.0%
   354+                          ;BANK0               42      F      13       4       28.8%
   355+                          ;ABS                  0      0      13       5        0.0%
   356+                          ;DATA                 0      0      13       6        0.0%
   357+                          ;EEDATA              40      0       0    1000        0.0%
   358+                          
   359+                          	global	_main
   360+                          psect	maintext,local,class=CODE,delta=2
   361+                          global __pmaintext
   362+ 019B                     __pmaintext:
   363+                          
   364+                          ; *************** function _main *****************
   365+                          ; Defined at:
   366+                          ;		line 65 in file "H:\MicroControleur\TP3\mes.c"
   367+                          ; Parameters:    Size  Location     Type
   368+                          ;		None
   369+                          ; Auto vars:     Size  Location     Type
   370+                          ;		None
   371+                          ; Return value:  Size  Location     Type
   372+                          ;                  2    4[BANK0 ] int 
   373+                          ; Registers used:
   374+                          ;		wreg, status,2, status,0, pclath, cstack
   375+                          ; Tracked objects:
   376+                          ;		On entry : 17F/0
   377+                          ;		On exit  : 0/0
   378+                          ;		Unchanged: 0/0
   379+                          ; Data sizes:     COMMON   BANK0
   380+                          ;      Locals:         0       0
   381+                          ;      Temp:     0
   382+                          ;      Total:    0
   383+                          ; This function calls:
   384+                          ;		_init
   385+                          ; This function is called by:
   386+                          ;		Startup code after reset
   387+                          ; This function uses a non-reentrant model
   388+                          ; 
   389+                          psect	maintext
   390+                          	file	"H:\MicroControleur\TP3\mes.c"
   391+                          	line	65
   392+                          	global	__size_of_main
   393+ 0003                     	__size_of_main	equ	__end_of_main-_main
   394+                          ;mes.c: 64: main(void)
   395+                          ;mes.c: 65: {
   396+                          	
   397+ 019B                     _main:	
   398+                          	opt stack 5
   399+                          ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   400+                          	line	66
   401+                          	
   402+ 019B                     l30000337:	
   403+                          ;mes.c: 66: init ();
   404+ 019B  2148               	fcall	_init
   405                           	
   406  019C                     l20:	
   407+ 019C  299C               	goto	l20
   408+                          	global	start
   409+ 019D  280F               	ljmp	start
   410+                          	opt stack 0
   411+                          GLOBAL	__end_of_main
   412+ 019E                     	__end_of_main:
   413+                          ; =============== function _main ends ============
   414+                          
   415+                          psect	maintext
   416+                          	line	71
   417+                          	signat	_main,90
   418+                          	global	_init
   419+                          psect	text45,local,class=CODE,delta=2
   420+                          global __ptext45
   421+ 0148                     __ptext45:
   422+                          
   423+                          ; *************** function _init *****************
   424+                          ; Defined at:
   425+                          ;		line 9 in file "H:\MicroControleur\TP3\mes.c"
   426+                          ; Parameters:    Size  Location     Type
   427+                          ;		None
   428+                          ; Auto vars:     Size  Location     Type
   429+                          ;		None
   430+                          ; Return value:  Size  Location     Type
   431+                          ;		None               void
   432+                          ; Registers used:
   433+                          ;		wreg, status,2, status,0, pclath, cstack
   434+                          ; Tracked objects:
   435+                          ;		On entry : 0/0
   436+                          ;		On exit  : 0/0
   437+                          ;		Unchanged: 0/0
   438+                          ; Data sizes:     COMMON   BANK0
   439+                          ;      Locals:         0       0
   440+                          ;      Temp:     0
   441+                          ;      Total:    0
   442+                          ; This function calls:
   443+                          ;		_eeprom_read
   444+                          ; This function is called by:
   445+                          ;		_main
   446+                          ; This function uses a non-reentrant model
   447+                          ; 
   448+                          psect	text45
   449+                          	file	"H:\MicroControleur\TP3\mes.c"
   450+                          	line	9
   451+                          	global	__size_of_init
   452+ 001C                     	__size_of_init	equ	__end_of_init-_init
   453                           ;pic1684.h: 17: volatile unsigned char INDF @ 0x00;
   454                           ;pic1684.h: 18: volatile unsigned char RTCC @ 0x01;
   455                           ;pic1684.h: 19: volatile unsigned char TMR0 @ 0x01;
   456                           ;pic1684.h: 20: volatile unsigned char PCL @ 0x02;
   457                           ;pic1684.h: 21: volatile unsigned char STATUS @ 0x03;
   458                           ;pic1684.h: 22: unsigned char FSR @ 0x04;
   459                           ;pic1684.h: 23: volatile unsigned char PORTA @ 0x05;
   460                           ;pic1684.h: 24: volatile unsigned char PORTB @ 0x06;
   461                           ;pic1684.h: 25: volatile unsigned char EEDATA @ 0x08;
   462                           ;pic1684.h: 26: volatile unsigned char EEADR @ 0x09;
   463                           	
   464  0148                     _init:	
   465+                          	opt stack 4
   466+                          ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   467+                          	line	10
   468+                          	
   469+ 0148                     l30000331:	
   470                           ;mes.c: 10: STATUS = 0x20;
   471  0148  3020               	movlw	(020h)
   472+ 0149  1283               	bcf	status, 5	;RP0=0, select bank0
   473+ 014A  0083               	movwf	(3)	;volatile
   474+                          	line	11
   475+                          ;mes.c: 11: INTCON = 0xB0;
   476+ 014B  30B0               	movlw	(0B0h)
   477+ 014C  008B               	movwf	(11)	;volatile
   478+                          	
   479+ 014D                     l30000332:	
   480                           	line	12
   481                           ;mes.c: 12: TRISA = 0x00;
   482  014D  1003               	clrc
   483+ 014E  3000               	movlw	0
   484+ 014F  1803               	btfsc	status,0
   485+ 0150  3001               	movlw	1
   486+ 0151  1683               	bsf	status, 5	;RP0=1, select bank1
   487+ 0152  0085               	movwf	(133)^080h	;volatile
   488                           	
   489  0153                     l30000333:	
   490+                          	line	13
   491+                          ;mes.c: 13: PORTA = 0x1F;
   492+ 0153  301F               	movlw	(01Fh)
   493  0154  1283               	bcf	status, 5	;RP0=0, select bank0
   494+ 0155  0085               	movwf	(5)	;volatile
   495+                          	
   496+ 0156                     l30000334:	
   497+                          	line	14
   498+                          ;mes.c: 14: TRISB = 0x01;
   499+ 0156  3001               	movlw	(01h)
   500+ 0157  1683               	bsf	status, 5	;RP0=1, select bank1
   501+ 0158  0086               	movwf	(134)^080h	;volatile
   502                           	
   503  0159                     l30000335:	
   504                           	line	15
   505                           ;mes.c: 15: PORTB = 0x00;
   506  0159  1003               	clrc
   507+ 015A  3000               	movlw	0
   508+ 015B  1803               	btfsc	status,0
   509  015C  3001               	movlw	1
   510+ 015D  1283               	bcf	status, 5	;RP0=0, select bank0
   511  015E  0086               	movwf	(6)	;volatile
   512+                          	
   513+ 015F                     l30000336:	
   514                           	line	16
   515                           ;mes.c: 16: OPTION = eeprom_read(0x00);;
   516  015F  3000               	movlw	(0)
   517+ 0160  2164               	fcall	_eeprom_read
   518+ 0161  1683               	bsf	status, 5	;RP0=1, select bank1
   519+ 0162  0081               	movwf	(129)^080h
   520+                          	
   521+ 0163                     l4:	
   522+ 0163  0008               	return
   523                           	opt stack 0
   524                           GLOBAL	__end_of_init
   525  0164                     	__end_of_init:
   526                           ; =============== function _init ends ============
   527                           
   528                           psect	text46,local,class=CODE,delta=2
   529                           global __ptext46
   530  0164                     __ptext46:
   531+                          	line	17
   532+                          	signat	_init,88
   533+                          	global	_eeprom_read
   534+                          
   535+                          ; *************** function _eeprom_read *****************
   536+                          ; Defined at:
   537+                          ;		line 8 in file "eeread.c"
   538+                          ; Parameters:    Size  Location     Type
   539+                          ;  addr            1    wreg     unsigned char 
   540+                          ; Auto vars:     Size  Location     Type
   541+                          ;  addr            1    3[BANK0 ] unsigned char 
   542+                          ; Return value:  Size  Location     Type
   543+                          ;                  1    wreg      unsigned char 
   544+                          ; Registers used:
   545+                          ;		wreg, status,2, status,0
   546+                          ; Tracked objects:
   547+                          ;		On entry : 0/0
   548+                          ;		On exit  : 0/0
   549+                          ;		Unchanged: 0/0
   550+                          ; Data sizes:     COMMON   BANK0
   551+                          ;      Locals:         0       4
   552+                          ;      Temp:     3
   553+                          ;      Total:    4
   554+                          ; This function calls:
   555+                          ;		Nothing
   556+                          ; This function is called by:
   557+                          ;		_init
   558+                          ; This function uses a non-reentrant model
   559+                          ; 
   560+                          psect	text46
   561+                          	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\eeread.c"
   562+                          	line	8
   563+                          	global	__size_of_eeprom_read
   564+ 001B                     	__size_of_eeprom_read	equ	__end_of_eeprom_read-_eeprom_read
   565+                          	
   566+ 0164                     _eeprom_read:	
   567+                          	opt stack 3
   568+                          ; Regs used in _eeprom_read: [wreg+status,2+status,0]
   569+                          ;eeprom_read@addr stored from wreg
   570+ 0164  1283               	bcf	status, 5	;RP0=0, select bank0
   571+ 0165  008F               	movwf	(eeprom_read@addr)
   572                           	
   573  0166                     l30000299:	
   574+                          	
   575+ 0166                     l27:	
   576                           	line	9
   577  0166  1683               	bsf	status, 5	;RP0=1, select bank1
   578+ 0167  1888               	btfsc	(1089/8)^080h,(1089)&7
   579+ 0168  296A               	goto	u71
   580  0169  296B               	goto	u70
   581  016A                     u71:
   582  016A  2966               	goto	l27
   583  016B                     u70:
   584                           	
   585  016B                     l30000300:	
   586                           	line	10
   587  016B  1283               	bcf	status, 5	;RP0=0, select bank0
   588  016C  080F               	movf	(eeprom_read@addr),w
   589  016D  0089               	movwf	(9)	;volatile
   590  016E  303F               	movlw	(03Fh)
   591  016F  008C               	movwf	(??_eeprom_read+0+0)
   592  0170  080C               	movf	(??_eeprom_read+0+0),w
   593  0171  1683               	bsf	status, 5	;RP0=1, select bank1
   594  0172  0588               	andwf	(136)^080h,f	;volatile
   595  0173  1408               	bsf	(1088/8)^080h,(1088)&7
   596  0174  1003               	clrc
   597  0175  1808               	btfsc	(1088/8)^080h,(1088)&7
   598  0176  1403               	setc
   599  0177  3000               	movlw	0
   600  0178  1803               	skipnc
   601  0179  3001               	movlw	1
   602                           
   603  017A  1283               	bcf	status, 5	;RP0=0, select bank0
   604  017B  008D               	movwf	(??_eeprom_read+1+0)
   605  017C  018E               	clrf	(??_eeprom_read+1+0+1)
   606  017D  0808               	movf	(8),w	;volatile
   607                           	
   608  017E                     l26:	
   609  017E  0008               	return
   610                           	opt stack 0
   611                           GLOBAL	__end_of_eeprom_read
   612  017F                     	__end_of_eeprom_read:
   613                           ; =============== function _eeprom_read ends ============
   614                           
   615                           psect	text47,local,class=CODE,delta=2
   616                           global __ptext47
   617  00B0                     __ptext47:
   618                           	line	11
   619                           	signat	_eeprom_read,4217
   620                           	global	_inter
   621                           
   622                           ; *************** function _inter *****************
   623                           ; Defined at:
   624                           ;		line 74 in file "H:\MicroControleur\TP3\mes.c"
   625                           ; Parameters:    Size  Location     Type
   626                           ;		None
   627                           ; Auto vars:     Size  Location     Type
   628                           ;		None
   629                           ; Return value:  Size  Location     Type
   630                           ;		None               void
   631                           ; Registers used:
   632                           ;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, btemp+2, btem
                                 p+3, pclath, cstack
   633                           ; Tracked objects:
   634                           ;		On entry : 0/0
   635                           ;		On exit  : 0/0
   636                           ;		Unchanged: 0/0
   637                           ; Data sizes:     COMMON   BANK0
   638                           ;      Locals:         0       4
   639                           ;      Temp:     4
   640                           ;      Total:    4
   641                           ; This function calls:
   642                           ;		_caractere
   643                           ;		_vitesse
   644                           ;		_tempo
   645                           ;		___awmod
   646                           ; This function is called by:
   647                           ;		Interrupt level 1
   648                           ; This function uses a non-reentrant model
   649                           ; 
   650                           psect	text47
   651                           	file	"H:\MicroControleur\TP3\mes.c"
   652                           	line	74
   653                           	global	__size_of_inter
   654  003A                     	__size_of_inter	equ	__end_of_inter-_inter
   655                           ;mes.c: 73: void interrupt inter (void)
   656                           ;mes.c: 74: {
   657                           	
   658  00B0                     _inter:	
   659                           	opt stack 6
   660                           ; Regs used in _inter: [allreg]
   661                           psect	intentry,class=CODE,delta=2
   662                           global __pintentry
   663  0004                     __pintentry:
   664                           global interrupt_function
   665  0004                     interrupt_function:
   666                           	global saved_w
   667  004F                     	saved_w	set	btemp+1
   668  0004  00CF               	movwf	saved_w
   669  0005  0803               	movf	status,w
   670  0006  1283               	bcf	status, 5	;RP0=0, select bank0
   671  0007  0097               	movwf	(??_inter+0)
   672  0008  0804               	movf	fsr0,w
   673  0009  0098               	movwf	(??_inter+1)
   674  000A  080A               	movf	pclath,w
   675  000B  0099               	movwf	(??_inter+2)
   676  000C  084E               	movf	btemp+0,w
   677  000D  009A               	movwf	(??_inter+3)
   678  000E  28B0               	ljmp	_inter
   679                           psect	text47
   680                           	line	76
   681                           	
   682  00B0                     i1l30000350:	
   683                           ;mes.c: 75: static int n = 0;
   684                           ;mes.c: 76: if (T0IF == 1 && n == 8)
   685  00B0  1D0B               	btfss	(90/8),(90)&7
   686  00B1  28B3               	goto	u20_21
   687  00B2  28B4               	goto	u20_20
   688  00B3                     u20_21:
   689  00B3  28BC               	goto	i1l30000353
   690  00B4                     u20_20:
   691                           	
   692  00B4                     i1l30000351:	
   693  00B4  3008               	movlw	08h
   694  00B5  061D               	xorwf	(inter@n),w
   695  00B6  041E               	iorwf	(inter@n+1),w
   696  00B7  1D03               	skipz
   697  00B8  28BA               	goto	u21_21
   698  00B9  28BB               	goto	u21_20
   699  00BA                     u21_21:
   700  00BA  28BC               	goto	i1l30000353
   701  00BB                     u21_20:
   702                           	
   703  00BB                     i1l30000352:	
   704                           	line	78
   705                           ;mes.c: 77: {
   706                           ;mes.c: 78: caractere();
   707  00BB  206B               	fcall	_caractere
   708                           	
   709  00BC                     i1l30000353:	
   710                           	line	81
   711                           ;mes.c: 79: }
   712                           ;mes.c: 81: if (INTF == 1)
   713  00BC  1283               	bcf	status, 5	;RP0=0, select bank0
   714  00BD  1C8B               	btfss	(89/8),(89)&7
   715  00BE  28C0               	goto	u22_21
   716  00BF  28C1               	goto	u22_20
   717  00C0                     u22_21:
   718  00C0  28C3               	goto	i1l30000356
   719  00C1                     u22_20:
   720                           	
   721  00C1                     i1l30000354:	
   722                           	line	83
   723                           ;mes.c: 82: {
   724                           ;mes.c: 83: vitesse();
   725  00C1  217F               	fcall	_vitesse
   726                           	
   727  00C2                     i1l30000355:	
   728                           	line	84
   729                           ;mes.c: 84: tempo();
   730  00C2  20EA               	fcall	_tempo
   731                           	
   732  00C3                     i1l30000356:	
   733                           	line	86
   734                           ;mes.c: 85: }
   735                           ;mes.c: 86: n++;
   736  00C3  3001               	movlw	low(01h)
   737  00C4  1283               	bcf	status, 5	;RP0=0, select bank0
   738  00C5  079D               	addwf	(inter@n),f
   739  00C6  1803               	skipnc
   740  00C7  0A9E               	incf	(inter@n+1),f
   741  00C8  3000               	movlw	high(01h)
   742  00C9  079E               	addwf	(inter@n+1),f
   743                           	
   744  00CA                     i1l30000357:	
   745                           	line	87
   746                           ;mes.c: 87: n %= 9;
   747  00CA  081E               	movf	(inter@n+1),w
   748  00CB  0194               	clrf	(?___awmod+1)
   749  00CC  0794               	addwf	(?___awmod+1)
   750  00CD  081D               	movf	(inter@n),w
   751  00CE  0193               	clrf	(?___awmod)
   752  00CF  0793               	addwf	(?___awmod)
   753                           
   754  00D0  3009               	movlw	low(09h)
   755  00D1  0095               	movwf	0+(?___awmod)+02h
   756  00D2  3000               	movlw	high(09h)
   757  00D3  0096               	movwf	(0+(?___awmod)+02h)+1
   758  00D4  2010               	fcall	___awmod
   759  00D5  1383               	bcf	status, 7	;select IRP bank0
   760  00D6  1283               	bcf	status, 5	;RP0=0, select bank0
   761  00D7  0814               	movf	(1+(?___awmod)),w
   762  00D8  019E               	clrf	(inter@n+1)
   763  00D9  079E               	addwf	(inter@n+1)
   764  00DA  0813               	movf	(0+(?___awmod)),w
   765  00DB  019D               	clrf	(inter@n)
   766  00DC  079D               	addwf	(inter@n)
   767                           
   768                           	
   769  00DD                     i1l30000358:	
   770                           	line	88
   771                           ;mes.c: 88: INTF = 0;
   772  00DD  108B               	bcf	(89/8),(89)&7
   773                           	
   774  00DE                     i1l30000359:	
   775                           	line	89
   776                           ;mes.c: 89: T0IF = 0;
   777  00DE  110B               	bcf	(90/8),(90)&7
   778                           	
   779  00DF                     i1l23:	
   780  00DF  081A               	movf	(??_inter+3),w
   781  00E0  00CE               	movwf	btemp+0
   782  00E1  0819               	movf	(??_inter+2),w
   783  00E2  008A               	movwf	pclath
   784  00E3  0818               	movf	(??_inter+1),w
   785  00E4  0084               	movwf	fsr0
   786  00E5  0817               	movf	(??_inter+0),w
   787  00E6  0083               	movwf	status
   788  00E7  0ECF               	swapf	saved_w,f
   789  00E8  0E4F               	swapf	saved_w,w
   790  00E9  0009               	retfie
   791                           	opt stack 0
   792                           GLOBAL	__end_of_inter
   793  00EA                     	__end_of_inter:
   794                           ; =============== function _inter ends ============
   795                           
   796                           psect	text48,local,class=CODE,delta=2
   797                           global __ptext48
   798  00EA                     __ptext48:
   799                           	line	90
   800                           	signat	_inter,88
   801                           	global	_tempo
   802                           
   803                           ; *************** function _tempo *****************
   804                           ; Defined at:
   805                           ;		line 5 in file "H:\MicroControleur\TP3\tempo.c"
   806                           ; Parameters:    Size  Location     Type
   807                           ;		None
   808                           ; Auto vars:     Size  Location     Type
   809                           ;  i               4    5[BANK0 ] long 
   810                           ; Return value:  Size  Location     Type
   811                           ;                  2    9[BANK0 ] int 
   812                           ; Registers used:
   813                           ;		wreg, status,2, status,0
   814                           ; Tracked objects:
   815                           ;		On entry : 0/0
   816                           ;		On exit  : 0/0
   817                           ;		Unchanged: 0/0
   818                           ; Data sizes:     COMMON   BANK0
   819                           ;      Locals:         0       5
   820                           ;      Temp:     1
   821                           ;      Total:    5
   822                           ; This function calls:
   823                           ;		Nothing
   824                           ; This function is called by:
   825                           ;		_inter
   826                           ; This function uses a non-reentrant model
   827                           ; 
   828                           psect	text48
   829                           	file	"H:\MicroControleur\TP3\tempo.c"
   830                           	line	5
   831                           	global	__size_of_tempo
   832  0036                     	__size_of_tempo	equ	__end_of_tempo-_tempo
   833                           ;tempo.c: 4: tempo (void)
   834                           ;tempo.c: 5: {
   835                           	
   836  00EA                     _tempo:	
   837                           	opt stack 5
   838                           ; Regs used in _tempo: [wreg+status,2+status,0]
   839                           	line	7
   840                           	
   841  00EA                     i1l30000260:	
   842                           ;tempo.c: 6: long i;
   843                           ;tempo.c: 7: for (i=1; i<=10000 ; i++);
   844  00EA  3000               	movlw	0
   845  00EB  1283               	bcf	status, 5	;RP0=0, select bank0
   846  00EC  0094               	movwf	(tempo@i+3)
   847  00ED  3000               	movlw	0
   848  00EE  0093               	movwf	(tempo@i+2)
   849  00EF  3000               	movlw	0
   850  00F0  0092               	movwf	(tempo@i+1)
   851  00F1  3001               	movlw	01h
   852  00F2  0091               	movwf	(tempo@i)
   853                           
   854                           	
   855  00F3                     i1l30000263:	
   856  00F3  3001               	movlw	01h
   857  00F4  0791               	addwf	(tempo@i),f
   858  00F5  3000               	movlw	0
   859  00F6  1103               	clrz
   860  00F7  1803               	skipnc
   861  00F8  3E01               	addlw	1
   862  00F9  1903               	skipnz
   863  00FA  28FC               	goto	u1_21
   864  00FB  0792               	addwf	(tempo@i+1),f
   865  00FC                     u1_21:
   866  00FC  3000               	movlw	0
   867  00FD  1103               	clrz
   868  00FE  1803               	skipnc
   869  00FF  3E01               	addlw	1
   870  0100  1903               	skipnz
   871  0101  2903               	goto	u1_22
   872  0102  0793               	addwf	(tempo@i+2),f
   873  0103                     u1_22:
   874  0103  3000               	movlw	0
   875  0104  1103               	clrz
   876  0105  1803               	skipnc
   877  0106  3E01               	addlw	1
   878  0107  1903               	skipnz
   879  0108  290A               	goto	u1_23
   880  0109  0794               	addwf	(tempo@i+3),f
   881  010A                     u1_23:
   882                           
   883                           	
   884  010A                     i1l30000264:	
   885  010A  0814               	movf	(tempo@i+3),w
   886  010B  3A80               	xorlw	80h
   887  010C  0090               	movwf	(??_tempo+0+0)
   888  010D  3080               	movlw	high highword(02711h)^80h
   889  010E  0210               	subwf	(??_tempo+0+0),w
   890  010F  1D03               	skipz
   891  0110  291B               	goto	u2_24
   892  0111  3000               	movlw	low highword(02711h)
   893  0112  0213               	subwf	(tempo@i+2),w
   894  0113  1D03               	skipz
   895  0114  291B               	goto	u2_24
   896  0115  3027               	movlw	high(02711h)
   897  0116  0212               	subwf	(tempo@i+1),w
   898  0117  1D03               	skipz
   899  0118  291B               	goto	u2_24
   900  0119  3011               	movlw	low(02711h)
   901  011A  0211               	subwf	(tempo@i),w
   902  011B                     u2_24:
   903                           
   904  011B  1C03               	skipc
   905  011C  291E               	goto	u2_21
   906  011D  291F               	goto	u2_20
   907  011E                     u2_21:
   908  011E  28F3               	goto	i1l30000263
   909  011F                     u2_20:
   910                           	
   911  011F                     i1l1:	
   912  011F  0008               	return
   913                           	opt stack 0
   914                           GLOBAL	__end_of_tempo
   915  0120                     	__end_of_tempo:
   916                           ; =============== function _tempo ends ============
   917                           
   918                           psect	text49,local,class=CODE,delta=2
   919                           global __ptext49
   920  0010                     __ptext49:
   921                           	line	8
   922                           	signat	_tempo,90
   923                           	global	___awmod
   924                           
   925                           ; *************** function ___awmod *****************
   926                           ; Defined at:
   927                           ;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\awmod.c"
   928                           ; Parameters:    Size  Location     Type
   929                           ;  dividend        2    7[BANK0 ] int 
   930                           ;  divisor         2    9[BANK0 ] int 
   931                           ; Auto vars:     Size  Location     Type
   932                           ;  sign            1    5[BANK0 ] unsigned char 
   933                           ;  counter         1    6[BANK0 ] unsigned char 
   934                           ; Return value:  Size  Location     Type
   935                           ;                  2    7[BANK0 ] int 
   936                           ; Registers used:
   937                           ;		wreg, status,2, status,0
   938                           ; Tracked objects:
   939                           ;		On entry : 0/0
   940                           ;		On exit  : 0/0
   941                           ;		Unchanged: 0/0
   942                           ; Data sizes:     COMMON   BANK0
   943                           ;      Locals:         0       7
   944                           ;      Temp:     1
   945                           ;      Total:    7
   946                           ; This function calls:
   947                           ;		Nothing
   948                           ; This function is called by:
   949                           ;		_inter
   950                           ; This function uses a non-reentrant model
   951                           ; 
   952                           psect	text49
   953                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\awmod.c"
   954                           	line	5
   955                           	global	__size_of___awmod
   956  005B                     	__size_of___awmod	equ	__end_of___awmod-___awmod
   957                           	
   958  0010                     ___awmod:	
   959                           	opt stack 5
   960                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   961                           	line	8
   962                           	
   963  0010                     i1l30000312:	
   964  0010  1003               	clrc
   965  0011  3000               	movlw	0
   966  0012  1803               	btfsc	status,0
   967  0013  3001               	movlw	1
   968  0014  1283               	bcf	status, 5	;RP0=0, select bank0
   969  0015  0091               	movwf	(___awmod@sign)
   970                           	
   971  0016                     i1l30000313:	
   972                           	line	9
   973  0016  1F94               	btfss	(___awmod@dividend+1),7
   974  0017  2819               	goto	u11_21
   975  0018  281A               	goto	u11_20
   976  0019                     u11_21:
   977  0019  2822               	goto	i1l30000315
   978  001A                     u11_20:
   979                           	
   980  001A                     i1l30000314:	
   981                           	line	10
   982  001A  0993               	comf	(___awmod@dividend),f
   983  001B  0994               	comf	(___awmod@dividend+1),f
   984  001C  0A93               	incf	(___awmod@dividend),f
   985  001D  1903               	skipnz
   986  001E  0A94               	incf	(___awmod@dividend+1),f
   987                           	line	11
   988  001F  0191               	clrf	(___awmod@sign)
   989  0020  1403               	bsf	status,0
   990  0021  0D91               	rlf	(___awmod@sign),f
   991                           	
   992  0022                     i1l30000315:	
   993                           	line	13
   994  0022  1F96               	btfss	(___awmod@divisor+1),7
   995  0023  2825               	goto	u12_21
   996  0024  2826               	goto	u12_20
   997  0025                     u12_21:
   998  0025  282B               	goto	i1l30000317
   999  0026                     u12_20:
  1000                           	
  1001  0026                     i1l30000316:	
  1002                           	line	14
  1003  0026  0995               	comf	(___awmod@divisor),f
  1004  0027  0996               	comf	(___awmod@divisor+1),f
  1005  0028  0A95               	incf	(___awmod@divisor),f
  1006  0029  1903               	skipnz
  1007  002A  0A96               	incf	(___awmod@divisor+1),f
  1008                           	
  1009  002B                     i1l30000317:	
  1010                           	line	15
  1011  002B  0816               	movf	(___awmod@divisor+1),w
  1012  002C  0415               	iorwf	(___awmod@divisor),w
  1013  002D  1903               	skipnz
  1014  002E  2830               	goto	u13_21
  1015  002F  2831               	goto	u13_20
  1016  0030                     u13_21:
  1017  0030  2861               	goto	i1l30000326
  1018  0031                     u13_20:
  1019                           	
  1020  0031                     i1l30000318:	
  1021                           	line	16
  1022  0031  0192               	clrf	(___awmod@counter)
  1023  0032  1403               	bsf	status,0
  1024  0033  0D92               	rlf	(___awmod@counter),f
  1025  0034  2840               	goto	i1l30000321
  1026                           	
  1027  0035                     i1l30000319:	
  1028                           	line	18
  1029  0035  3001               	movlw	01h
  1030  0036                     u14_25:
  1031  0036  1003               	clrc
  1032  0037  0D95               	rlf	(___awmod@divisor),f
  1033  0038  0D96               	rlf	(___awmod@divisor+1),f
  1034  0039  3EFF               	addlw	-1
  1035  003A  1D03               	skipz
  1036  003B  2836               	goto	u14_25
  1037                           	
  1038  003C                     i1l30000320:	
  1039                           	line	19
  1040  003C  3001               	movlw	(01h)
  1041  003D  0090               	movwf	(??___awmod+0+0)
  1042  003E  0810               	movf	(??___awmod+0+0),w
  1043  003F  0792               	addwf	(___awmod@counter),f
  1044                           	
  1045  0040                     i1l30000321:	
  1046                           	line	17
  1047  0040  1F96               	btfss	(___awmod@divisor+1),(15)&7
  1048  0041  2843               	goto	u15_21
  1049  0042  2844               	goto	u15_20
  1050  0043                     u15_21:
  1051  0043  2835               	goto	i1l30000319
  1052  0044                     u15_20:
  1053                           	
  1054  0044                     i1l30000322:	
  1055                           	line	22
  1056  0044  0816               	movf	(___awmod@divisor+1),w
  1057  0045  0214               	subwf	(___awmod@dividend+1),w
  1058  0046  1D03               	skipz
  1059  0047  284A               	goto	u16_25
  1060  0048  0815               	movf	(___awmod@divisor),w
  1061  0049  0213               	subwf	(___awmod@dividend),w
  1062  004A                     u16_25:
  1063  004A  1C03               	skipc
  1064  004B  284D               	goto	u16_21
  1065  004C  284E               	goto	u16_20
  1066  004D                     u16_21:
  1067  004D  2854               	goto	i1l30000324
  1068  004E                     u16_20:
  1069                           	
  1070  004E                     i1l30000323:	
  1071                           	line	23
  1072  004E  0815               	movf	(___awmod@divisor),w
  1073  004F  0293               	subwf	(___awmod@dividend),f
  1074  0050  0816               	movf	(___awmod@divisor+1),w
  1075  0051  1C03               	skipc
  1076  0052  0394               	decf	(___awmod@dividend+1),f
  1077  0053  0294               	subwf	(___awmod@dividend+1),f
  1078                           	
  1079  0054                     i1l30000324:	
  1080                           	line	24
  1081  0054  3001               	movlw	01h
  1082  0055                     u17_25:
  1083  0055  1003               	clrc
  1084  0056  0C96               	rrf	(___awmod@divisor+1),f
  1085  0057  0C95               	rrf	(___awmod@divisor),f
  1086  0058  3EFF               	addlw	-1
  1087  0059  1D03               	skipz
  1088  005A  2855               	goto	u17_25
  1089                           	
  1090  005B                     i1l30000325:	
  1091                           	line	25
  1092  005B  3001               	movlw	low(01h)
  1093  005C  0292               	subwf	(___awmod@counter),f
  1094  005D  1D03               	btfss	status,2
  1095  005E  2860               	goto	u18_21
  1096  005F  2861               	goto	u18_20
  1097  0060                     u18_21:
  1098  0060  2844               	goto	i1l30000322
  1099  0061                     u18_20:
  1100                           	
  1101  0061                     i1l30000326:	
  1102                           	line	27
  1103  0061  0811               	movf	(___awmod@sign),w
  1104  0062  1D03               	skipz
  1105  0063  2865               	goto	u19_20
  1106  0064  286A               	goto	i1l30000328
  1107  0065                     u19_20:
  1108                           	
  1109  0065                     i1l30000327:	
  1110                           	line	28
  1111  0065  0993               	comf	(___awmod@dividend),f
  1112  0066  0994               	comf	(___awmod@dividend+1),f
  1113  0067  0A93               	incf	(___awmod@dividend),f
  1114  0068  1903               	skipnz
  1115  0069  0A94               	incf	(___awmod@dividend+1),f
  1116                           	
  1117  006A                     i1l30000328:	
  1118                           	line	29
  1119                           	
  1120  006A                     i1l268:	
  1121  006A  0008               	return
  1122                           	opt stack 0
  1123                           GLOBAL	__end_of___awmod
  1124  006B                     	__end_of___awmod:
  1125                           ; =============== function ___awmod ends ============
  1126                           
  1127                           psect	text50,local,class=CODE,delta=2
  1128                           global __ptext50
  1129  006B                     __ptext50:
  1130                           	line	30
  1131                           	signat	___awmod,8314
  1132                           	global	_caractere
  1133                           
  1134                           ; *************** function _caractere *****************
  1135                           ; Defined at:
  1136                           ;		line 20 in file "H:\MicroControleur\TP3\mes.c"
  1137                           ; Parameters:    Size  Location     Type
  1138                           ;		None
  1139                           ; Auto vars:     Size  Location     Type
  1140                           ;		None
  1141                           ; Return value:  Size  Location     Type
  1142                           ;		None               void
  1143                           ; Registers used:
  1144                           ;		wreg, fsr0l, fsr0h, status,2, status,0
  1145                           ; Tracked objects:
  1146                           ;		On entry : 0/0
  1147                           ;		On exit  : 0/0
  1148                           ;		Unchanged: 0/0
  1149                           ; Data sizes:     COMMON   BANK0
  1150                           ;      Locals:         0       0
  1151                           ;      Temp:     0
  1152                           ;      Total:    0
  1153                           ; This function calls:
  1154                           ;		Nothing
  1155                           ; This function is called by:
  1156                           ;		_inter
  1157                           ; This function uses a non-reentrant model
  1158                           ; 
  1159                           psect	text50
  1160                           	file	"H:\MicroControleur\TP3\mes.c"
  1161                           	line	20
  1162                           	global	__size_of_caractere
  1163  0045                     	__size_of_caractere	equ	__end_of_caractere-_caractere
  1164                           ;mes.c: 19: void caractere()
  1165                           ;mes.c: 20: {
  1166                           	
  1167  006B                     _caractere:	
  1168                           	opt stack 5
  1169                           ; Regs used in _caractere: [wreg-fsr0h+status,2+status,0]
  1170                           	
  1171  006B                     i1l30000338:	
  1172  006B  2884               	goto	i1l30000348
  1173                           	
  1174  006C                     i1l30000339:	
  1175                           	line	25
  1176                           ;mes.c: 25: PORTB = 0xFA;
  1177  006C  30FA               	movlw	(0FAh)
  1178  006D  0086               	movwf	(6)	;volatile
  1179  006E  28A5               	goto	i1l30000349
  1180                           	
  1181  006F                     i1l30000340:	
  1182                           	line	28
  1183                           ;mes.c: 28: PORTB = 0x3E;
  1184  006F  303E               	movlw	(03Eh)
  1185  0070  0086               	movwf	(6)	;volatile
  1186  0071  28A5               	goto	i1l30000349
  1187                           	
  1188  0072                     i1l30000341:	
  1189                           	line	31
  1190                           ;mes.c: 31: PORTB = 0x1A;
  1191  0072  301A               	movlw	(01Ah)
  1192  0073  0086               	movwf	(6)	;volatile
  1193  0074  28A5               	goto	i1l30000349
  1194                           	
  1195  0075                     i1l30000342:	
  1196                           	line	34
  1197                           ;mes.c: 34: PORTB = 0x7A;
  1198  0075  307A               	movlw	(07Ah)
  1199  0076  0086               	movwf	(6)	;volatile
  1200  0077  28A5               	goto	i1l30000349
  1201                           	
  1202  0078                     i1l30000343:	
  1203                           	line	37
  1204                           ;mes.c: 37: PORTB = 0xDE;
  1205  0078  30DE               	movlw	(0DEh)
  1206  0079  0086               	movwf	(6)	;volatile
  1207  007A  28A5               	goto	i1l30000349
  1208                           	
  1209  007B                     i1l30000344:	
  1210                           	line	40
  1211                           ;mes.c: 40: PORTB = 0x8E;
  1212  007B  308E               	movlw	(08Eh)
  1213  007C  0086               	movwf	(6)	;volatile
  1214  007D  28A5               	goto	i1l30000349
  1215                           	
  1216  007E                     i1l30000345:	
  1217                           	line	43
  1218                           ;mes.c: 43: PORTB = 0xF6;
  1219  007E  30F6               	movlw	(0F6h)
  1220  007F  0086               	movwf	(6)	;volatile
  1221  0080  28A5               	goto	i1l30000349
  1222                           	
  1223  0081                     i1l30000346:	
  1224                           	line	46
  1225                           ;mes.c: 46: PORTB = 0xFC;
  1226  0081  30FC               	movlw	(0FCh)
  1227  0082  0086               	movwf	(6)	;volatile
  1228  0083  28A5               	goto	i1l30000349
  1229                           	
  1230  0084                     i1l30000348:	
  1231                           	line	22
  1232  0084  28A0               		goto	i1l30013
  1233  0085                     i1l30014:
  1234  0085  1283               	bcf	status, 5	;RP0=0, select bank0
  1235  0086  081B               	movf (caractere@n),w
  1236  0087  3A00               	xorlw	0^0
  1237  0088  1903               	skipnz
  1238  0089  286C               	goto	i1l30000339
  1239  008A  3A01               	xorlw	1^0
  1240  008B  1903               	skipnz
  1241  008C  286F               	goto	i1l30000340
  1242  008D  3A03               	xorlw	2^1
  1243  008E  1903               	skipnz
  1244  008F  2872               	goto	i1l30000341
  1245  0090  3A01               	xorlw	3^2
  1246  0091  1903               	skipnz
  1247  0092  2875               	goto	i1l30000342
  1248  0093  3A07               	xorlw	4^3
  1249  0094  1903               	skipnz
  1250  0095  2878               	goto	i1l30000343
  1251  0096  3A01               	xorlw	5^4
  1252  0097  1903               	skipnz
  1253  0098  287B               	goto	i1l30000344
  1254  0099  3A03               	xorlw	6^5
  1255  009A  1903               	skipnz
  1256  009B  287E               	goto	i1l30000345
  1257  009C  3A01               	xorlw	7^6
  1258  009D  1903               	skipnz
  1259  009E  2881               	goto	i1l30000346
  1260  009F  28A5               	goto	i1l30000349
  1261                           
  1262  00A0                     i1l30013:
  1263  00A0  081C               	movf (caractere@n+1),w
  1264  00A1  3A00               	xorlw	0^0
  1265  00A2  1903               	skipnz
  1266  00A3  2885               	goto	i1l30014
  1267  00A4  28A5               	goto	i1l30000349
  1268                           
  1269                           	
  1270  00A5                     i1l30000349:	
  1271                           	line	49
  1272                           ;mes.c: 49: n++;
  1273  00A5  3001               	movlw	low(01h)
  1274  00A6  079B               	addwf	(caractere@n),f
  1275  00A7  1803               	skipnc
  1276  00A8  0A9C               	incf	(caractere@n+1),f
  1277  00A9  3000               	movlw	high(01h)
  1278  00AA  079C               	addwf	(caractere@n+1),f
  1279                           	line	50
  1280                           ;mes.c: 50: n %= 8;
  1281  00AB  3007               	movlw	low(07h)
  1282  00AC  059B               	andwf	(caractere@n),f
  1283  00AD  3000               	movlw	high(07h)
  1284  00AE  059C               	andwf	(caractere@n+1),f
  1285                           	
  1286  00AF                     i1l5:	
  1287  00AF  0008               	return
  1288                           	opt stack 0
  1289                           GLOBAL	__end_of_caractere
  1290  00B0                     	__end_of_caractere:
  1291                           ; =============== function _caractere ends ============
  1292                           
  1293                           psect	text51,local,class=CODE,delta=2
  1294                           global __ptext51
  1295  017F                     __ptext51:
  1296                           	line	51
  1297                           	signat	_caractere,88
  1298                           	global	_vitesse
  1299                           
  1300                           ; *************** function _vitesse *****************
  1301                           ; Defined at:
  1302                           ;		line 54 in file "H:\MicroControleur\TP3\mes.c"
  1303                           ; Parameters:    Size  Location     Type
  1304                           ;		None
  1305                           ; Auto vars:     Size  Location     Type
  1306                           ;		None
  1307                           ; Return value:  Size  Location     Type
  1308                           ;		None               void
  1309                           ; Registers used:
  1310                           ;		wreg, status,2, status,0, pclath, cstack
  1311                           ; Tracked objects:
  1312                           ;		On entry : 0/0
  1313                           ;		On exit  : 0/0
  1314                           ;		Unchanged: 0/0
  1315                           ; Data sizes:     COMMON   BANK0
  1316                           ;      Locals:         0       0
  1317                           ;      Temp:     0
  1318                           ;      Total:    0
  1319                           ; This function calls:
  1320                           ;		_eeprom_write
  1321                           ; This function is called by:
  1322                           ;		_inter
  1323                           ; This function uses a non-reentrant model
  1324                           ; 
  1325                           psect	text51
  1326                           	file	"H:\MicroControleur\TP3\mes.c"
  1327                           	line	54
  1328                           	global	__size_of_vitesse
  1329  0016                     	__size_of_vitesse	equ	__end_of_vitesse-_vitesse
  1330                           ;mes.c: 53: void vitesse()
  1331                           ;mes.c: 54: {
  1332                           	
  1333  017F                     _vitesse:	
  1334                           	opt stack 5
  1335                           ; Regs used in _vitesse: [wreg+status,2+status,0+pclath+cstack]
  1336                           	line	55
  1337                           	
  1338  017F                     i1l30000360:	
  1339                           ;mes.c: 55: if(OPTION == 0x00)
  1340  017F  1683               	bsf	status, 5	;RP0=1, select bank1
  1341  0180  0881               	movf	(129)^080h,f
  1342  0181  1D03               	skipz
  1343  0182  2984               	goto	u23_21
  1344  0183  2985               	goto	u23_20
  1345  0184                     u23_21:
  1346  0184  2988               	goto	i1l30000362
  1347  0185                     u23_20:
  1348                           	
  1349  0185                     i1l30000361:	
  1350                           	line	56
  1351                           ;mes.c: 56: OPTION = 0x07;
  1352  0185  3007               	movlw	(07h)
  1353  0186  0081               	movwf	(129)^080h
  1354  0187  298A               	goto	i1l30000363
  1355                           	
  1356  0188                     i1l30000362:	
  1357                           	line	58
  1358                           ;mes.c: 57: else
  1359                           ;mes.c: 58: OPTION--;
  1360  0188  3001               	movlw	low(01h)
  1361  0189  0281               	subwf	(129)^080h,f
  1362                           	
  1363  018A                     i1l30000363:	
  1364                           	line	59
  1365                           ;mes.c: 59: eeprom_write (0x00,OPTION);
  1366  018A  0801               	movf	(129)^080h,w
  1367  018B  1283               	bcf	status, 5	;RP0=0, select bank0
  1368  018C  0092               	movwf	(?_eeprom_write)
  1369  018D  3000               	movlw	(0)
  1370  018E  2120               	fcall	_eeprom_write
  1371                           	
  1372  018F                     i1l30000364:	
  1373                           	line	60
  1374                           ;mes.c: 60: PORTA = OPTION | 0xF8;
  1375  018F  1683               	bsf	status, 5	;RP0=1, select bank1
  1376  0190  0801               	movf	(129)^080h,w
  1377  0191  38F8               	iorlw	0F8h
  1378  0192  1283               	bcf	status, 5	;RP0=0, select bank0
  1379  0193  0085               	movwf	(5)	;volatile
  1380                           	
  1381  0194                     i1l16:	
  1382  0194  0008               	return
  1383                           	opt stack 0
  1384                           GLOBAL	__end_of_vitesse
  1385  0195                     	__end_of_vitesse:
  1386                           ; =============== function _vitesse ends ============
  1387                           
  1388                           psect	text52,local,class=CODE,delta=2
  1389                           global __ptext52
  1390  0120                     __ptext52:
  1391                           	line	61
  1392                           	signat	_vitesse,88
  1393                           	global	_eeprom_write
  1394                           
  1395                           ; *************** function _eeprom_write *****************
  1396                           ; Defined at:
  1397                           ;		line 8 in file "C:\Program Files\HI-TECH Software\PICC\9.70\sources\eewrite.c"
  1398                           ; Parameters:    Size  Location     Type
  1399                           ;  addr            1    wreg     unsigned char 
  1400                           ;  value           1    6[BANK0 ] unsigned char 
  1401                           ; Auto vars:     Size  Location     Type
  1402                           ;  addr            1    5[BANK0 ] unsigned char 
  1403                           ; Return value:  Size  Location     Type
  1404                           ;		None               void
  1405                           ; Registers used:
  1406                           ;		wreg, status,2, status,0
  1407                           ; Tracked objects:
  1408                           ;		On entry : 0/0
  1409                           ;		On exit  : 0/0
  1410                           ;		Unchanged: 0/0
  1411                           ; Data sizes:     COMMON   BANK0
  1412                           ;      Locals:         0       3
  1413                           ;      Temp:     1
  1414                           ;      Total:    3
  1415                           ; This function calls:
  1416                           ;		Nothing
  1417                           ; This function is called by:
  1418                           ;		_vitesse
  1419                           ; This function uses a non-reentrant model
  1420                           ; 
  1421                           psect	text52
  1422                           	file	"C:\Program Files\HI-TECH Software\PICC\9.70\sources\eewrite.c"
  1423                           	line	8
  1424                           	global	__size_of_eeprom_write
  1425  0028                     	__size_of_eeprom_write	equ	__end_of_eeprom_write-_eeprom_write
  1426                           	
  1427  0120                     _eeprom_write:	
  1428                           	opt stack 4
  1429                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  1430                           ;eeprom_write@addr stored from wreg
  1431  0120  1283               	bcf	status, 5	;RP0=0, select bank0
  1432  0121  0091               	movwf	(eeprom_write@addr)
  1433                           	
  1434  0122                     i1l33:	
  1435                           	
  1436  0122                     i1l34:	
  1437                           	line	9
  1438  0122  1683               	bsf	status, 5	;RP0=1, select bank1
  1439  0123  1888               	btfsc	(1089/8)^080h,(1089)&7
  1440  0124  2926               	goto	u8_21
  1441  0125  2927               	goto	u8_20
  1442  0126                     u8_21:
  1443  0126  2922               	goto	i1l34
  1444  0127                     u8_20:
  1445                           	
  1446  0127                     i1l30000302:	
  1447  0127  1283               	bcf	status, 5	;RP0=0, select bank0
  1448  0128  0811               	movf	(eeprom_write@addr),w
  1449  0129  0089               	movwf	(9)	;volatile
  1450  012A  0812               	movf	(eeprom_write@value),w
  1451  012B  0088               	movwf	(8)	;volatile
  1452                           	
  1453  012C                     i1l30000303:	
  1454  012C  303F               	movlw	(03Fh)
  1455  012D  0090               	movwf	(??_eeprom_write+0+0)
  1456  012E  0810               	movf	(??_eeprom_write+0+0),w
  1457  012F  1683               	bsf	status, 5	;RP0=1, select bank1
  1458  0130  0588               	andwf	(136)^080h,f	;volatile
  1459                           	
  1460  0131                     i1l30000304:	
  1461  0131  1283               	bcf	status, 5	;RP0=0, select bank0
  1462  0132  1003               	bcf	(24/8),(24)&7
  1463                           	
  1464  0133                     i1l30000305:	
  1465  0133  1F8B               	btfss	(95/8),(95)&7
  1466  0134  2936               	goto	u9_21
  1467  0135  2937               	goto	u9_20
  1468  0136                     u9_21:
  1469  0136  2938               	goto	i1l37
  1470  0137                     u9_20:
  1471                           	
  1472  0137                     i1l30000306:	
  1473  0137  1403               	bsf	(24/8),(24)&7
  1474                           	
  1475  0138                     i1l37:	
  1476  0138  138B               	bcf	(95/8),(95)&7
  1477  0139  1683               	bsf	status, 5	;RP0=1, select bank1
  1478  013A  1508               	bsf	(1090/8)^080h,(1090)&7
  1479                           	
  1480  013B                     i1l30000307:	
  1481  013B  3055               	movlw	(055h)
  1482  013C  0089               	movwf	(137)^080h	;volatile
  1483  013D  30AA               	movlw	(0AAh)
  1484  013E  0089               	movwf	(137)^080h	;volatile
  1485                           	
  1486  013F                     i1l30000308:	
  1487  013F  1488               	bsf	(1089/8)^080h,(1089)&7
  1488                           	
  1489  0140                     i1l30000309:	
  1490  0140  1108               	bcf	(1090/8)^080h,(1090)&7
  1491                           	
  1492  0141                     i1l30000310:	
  1493  0141  1283               	bcf	status, 5	;RP0=0, select bank0
  1494  0142  1C03               	btfss	(24/8),(24)&7
  1495  0143  2945               	goto	u10_21
  1496  0144  2946               	goto	u10_20
  1497  0145                     u10_21:
  1498  0145  2947               	goto	i1l30
  1499  0146                     u10_20:
  1500                           	
  1501  0146                     i1l30000311:	
  1502  0146  178B               	bsf	(95/8),(95)&7
  1503                           	
  1504  0147                     i1l30:	
  1505  0147  0008               	return
  1506                           	opt stack 0
  1507                           GLOBAL	__end_of_eeprom_write
  1508  0148                     	__end_of_eeprom_write:
  1509                           ; =============== function _eeprom_write ends ============
  1510                           
  1511                           psect	text53,local,class=CODE,delta=2
  1512                           global __ptext53
  1513  019E                     __ptext53:
  1514                           	line	10
  1515                           	signat	_eeprom_write,8312
  1516                           	global	btemp
  1517  004E                     	btemp set 04Eh


HI-TECH Software PICC Macro Assembler V9.70 build 5239 
Symbol Table                                                                                   Tue May 11 19:53:10 2010

                    l4 0163                     l20 019C                     _DC 0019                     l26 017E  
                   l27 0166                     _PD 001B                     _RD 0440                     u70 016B  
                   u71 016A                     _TO 001C                     _WR 0441         __size_of_inter 003A  
       __size_of_tempo 0036                    _GIE 005F                    _RA0 0028                    _RA1 0029  
                  _RB0 0030                    _RA2 002A                    _RB1 0031                    _RA3 002B  
                  _RB2 0032                    _RA4 002C                    _RB3 0033                    _RB4 0034  
                  _RB5 0035                    _RB6 0036                    _RB7 0037                    _FSR 0004  
                  _PCL 0002                    _INT 0030                    _PS0 0408                    _PS1 0409  
                  _PS2 040A                    _RP0 001D                    i1l1 011F                    i1l5 00AF  
                  _PSA 040B                    fsr0 0004       __size_of___awmod 005B          ?_eeprom_write 0012  
              ??_inter 0017               __ptext50 006B               __ptext51 017F               __ptext52 0120  
             __ptext44 019E               __ptext53 019E               __ptext45 0148               __ptext46 0164  
             __ptext47 00B0               __ptext48 00EA               __ptext49 0010                   _EEIE 005E  
                 _EEIF 0444                ??_tempo 0010                   _T0IE 005D                   _T0IF 005A  
                 _T0CS 040D                   _T0SE 040C                   _INDF 0000                   _INTE 005C  
                 i1l30 0147                   _INTF 0059                   i1l23 00DF                   _RBIE 005B  
                 i1l16 0194                   _RBIF 0058                   i1l33 0122                   i1l34 0122  
                 i1l37 0138                   _RBPU 040F                   _TMR0 0001                   _RTCC 0001  
                 _ZERO 001A                   _WREN 0442                   u1_21 00FC                   u1_22 0103  
                 u1_23 010A                   u2_20 011F                   u2_21 011E                   u2_24 011B  
                 u8_20 0127                   u8_21 0126                   u9_20 0137                   u9_21 0136  
                 _main 019B                   _init 0148  __size_of_eeprom_write 0028                   btemp 004E  
                 start 000F       __size_of_vitesse 0016      interrupt_function 0004    start_initialization 0195  
         ___awmod@sign 0011              _caractere 006B      __end_of_caractere 00B0             ?_caractere 0010  
      __end_of___awmod 006B       eeprom_write@addr 0011                  ?_main 0010                  ?_init 0010  
                _EEADR 0009                  _CARRY 0018                  i1l268 006A          __end_of_inter 00EA  
                u10_20 0146                  u10_21 0145                  u11_20 001A                  u11_21 0019  
                u12_20 0026                  u20_20 00B4                  u12_21 0025                  u20_21 00B3  
                u13_20 0031                  u21_20 00BB                  u13_21 0030                  u21_21 00BA  
                u22_20 00C1                  u22_21 00C0                  u14_25 0036                  u23_20 0185  
                u15_20 0044          __end_of_tempo 0120                  u23_21 0184                  u15_21 0043  
                u16_20 004E                  u16_21 004D                  u16_25 004A                  u17_25 0055  
                u18_20 0061                  u18_21 0060                  u19_20 0065                  _PORTA 0005  
                _PORTB 0006            ??_caractere 004E                  _TRISA 0085                  _TRISB 0086  
              i1l30013 00A0                i1l30014 0085                  _WRERR 0443        eeprom_read@addr 000F  
       __pcstackCOMMON 004E                  _inter 00B0                  _tempo 00EA        __end_of_vitesse 0195  
          _eeprom_read 0164                  pclath 000A    __end_of_eeprom_read 017F               intlevel1 0004  
                status 0003          __size_of_main 0003             __pbssBANK0 001B          __size_of_init 001C  
             l30000300 016B               l30000331 0148               l30000332 014D               l30000333 0153  
             l30000334 0156               l30000335 0159               l30000336 015F               l30000337 019B  
             l30000299 0166                ___awmod 0010               ?___awmod 0013           ?_eeprom_read 0010  
   __size_of_caractere 0045              ??___awmod 0010                 ??_main 004E                 ??_init 004E  
 __size_of_eeprom_read 001B             __pmaintext 019B      eeprom_write@value 0012         ??_eeprom_write 0010  
           __pintentry 0004                 ?_inter 001B                 _EEDATA 0008                 _EECON1 0088  
               _EECON2 0089                 ?_tempo 0015                _vitesse 017F           __end_of_main 019E  
         __end_of_init 0164               ?_vitesse 0013   end_of_initialization 0199                 _INTEDG 040E  
               _PCLATH 000A                 _INTCON 000B          __pcstackBANK0 000C              ??_vitesse 004E  
               _OPTION 0081                 _TRISA0 0428                 _TRISA1 0429                 _TRISB0 0430  
               _TRISA2 042A                 _TRISB1 0431                 _TRISA3 042B                 _TRISB2 0432  
               _TRISA4 042C                 _TRISB3 0433                 _TRISB4 0434                 _TRISB5 0435  
               _TRISB6 0436                 _TRISB7 0437                 _STATUS 0003          ??_eeprom_read 000C  
           i1l30000310 0141             i1l30000302 0127             i1l30000311 0146             i1l30000303 012C  
           i1l30000304 0131             i1l30000320 003C             i1l30000312 0010             i1l30000305 0133  
           i1l30000321 0040             i1l30000313 0016             i1l30000306 0137             i1l30000322 0044  
           i1l30000314 001A             i1l30000307 013B             i1l30000323 004E             i1l30000315 0022  
           i1l30000308 013F             i1l30000340 006F             i1l30000324 0054             i1l30000316 0026  
           i1l30000260 00EA             i1l30000309 0140             i1l30000341 0072             i1l30000325 005B  
           i1l30000317 002B             i1l30000342 0075             i1l30000318 0031             i1l30000326 0061  
           i1l30000350 00B0             i1l30000343 0078             i1l30000327 0065             i1l30000319 0035  
           i1l30000263 00F3             i1l30000351 00B4             i1l30000360 017F             i1l30000344 007B  
           i1l30000328 006A             i1l30000264 010A             i1l30000352 00BB             i1l30000361 0185  
           i1l30000345 007E             i1l30000353 00BC             i1l30000362 0188             i1l30000346 0081  
           i1l30000338 006B             i1l30000354 00C1             i1l30000363 018A             i1l30000339 006C  
           i1l30000355 00C2             i1l30000364 018F             i1l30000348 0084             i1l30000356 00C3  
           i1l30000349 00A5             i1l30000357 00CA             i1l30000358 00DD             i1l30000359 00DE  
               inter@n 001D           _eeprom_write 0120             caractere@n 001B                 saved_w 004F  
               tempo@i 0011   __end_of_eeprom_write 0148       ___awmod@dividend 0013        ___awmod@divisor 0015  
      ___awmod@counter 0012  
